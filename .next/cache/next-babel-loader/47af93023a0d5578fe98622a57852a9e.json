{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport * as yup from 'yup';\nimport { useRouter } from 'next/router';\nimport { Formik } from 'formik';\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react';\nimport { useAuth } from '../components/authProvider';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport HeadComponent from '../components/headComponent';\nconst loginSchema = yup.object({\n  email: yup.string().email().required(),\n  password: yup.string().min(8).required()\n});\n\nfunction LoginPage() {\n  const router = useRouter();\n  const {\n    login\n  } = useAuth();\n\n  const handleLogin = async (values, {\n    setSubmitting\n  }) => {\n    setSubmitting(true);\n    const user = await login(values.email, values.password);\n\n    if (user) {\n      await router.push('/calendar');\n    } else {\n      NotificationManager.error('Username And/Or Password Are Incorrect');\n    }\n\n    setSubmitting(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(HeadComponent, null), __jsx(\"div\", null, __jsx(Grid, {\n    textAlign: \"center\",\n    style: {\n      height: '100vh'\n    },\n    verticalAlign: \"middle\"\n  }, __jsx(Grid.Column, {\n    style: {\n      maxWidth: 450,\n      minWidth: 300\n    }\n  }, __jsx(Header, {\n    as: \"h2\",\n    color: \"teal\",\n    textAlign: \"center\"\n  }, \"Mercury | Login\"), __jsx(Formik, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: loginSchema,\n    onSubmit: handleLogin\n  }, ({\n    values,\n    errors,\n    touched,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  }) => __jsx(Form, {\n    size: \"large\",\n    onSubmit: handleSubmit\n  }, __jsx(Segment, null, __jsx(Form.Input, {\n    fluid: true,\n    icon: \"user\",\n    iconPosition: \"left\",\n    placeholder: \"Email address\",\n    name: \"email\",\n    value: values.email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: getError(errors, touched, 'email')\n  }), __jsx(Form.Input, {\n    fluid: true,\n    icon: \"lock\",\n    iconPosition: \"left\",\n    placeholder: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: getError(errors, touched, 'password')\n  }), __jsx(Button, {\n    fluid: true,\n    color: \"teal\",\n    size: \"large\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    loading: isSubmitting\n  }, \"Login\")))), __jsx(Message, null, \"New to us? \", __jsx(\"a\", {\n    href: \"#\"\n  }, \"Sign Up\")))), __jsx(NotificationContainer, null)));\n}\n\nfunction getError(errors, touched, name) {\n  if (errors[name] && touched[name]) {\n    return {\n      content: errors[name]\n    };\n  }\n\n  return null;\n}\n\nexport default LoginPage;","map":null,"metadata":{},"sourceType":"module"}