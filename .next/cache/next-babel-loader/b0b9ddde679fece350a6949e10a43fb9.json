{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Publisher from './publisher';\nimport { EventEmitter } from './util/EventEmitter';\nimport { OTSession, OTPublisher, OTStreams, OTSubscriber, createSession } from 'opentok-react';\nimport { Button, List } from 'semantic-ui-react';\n\nvar Vonage = /*#__PURE__*/function (_React$Component) {\n  _inherits(Vonage, _React$Component);\n\n  var _super = _createSuper(Vonage);\n\n  function Vonage(props) {\n    var _this;\n\n    _classCallCheck(this, Vonage);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePublish\", function () {\n      console.log('Successfully published!');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubscribe\", function () {\n      console.log('Subscribed!');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSessionError\", function (error) {\n      console.error(error);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePublishError\", function (error) {\n      console.error(error);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubscribeError\", function (error) {\n      console.error(error);\n    });\n\n    _this.state = {\n      ssButton: true,\n      streams: []\n    };\n    _this.sessionEventHandlers = {\n      sessionConnected: function sessionConnected() {},\n      sessionDisconnected: function sessionDisconnected() {},\n      sessionReconnected: function sessionReconnected() {},\n      sessionReconnecting: function sessionReconnecting() {}\n    };\n    _this.publishEventHandlers = {\n      accessDenied: function accessDenied() {},\n      streamCreated: function streamCreated() {},\n      streamDestroyed: function streamDestroyed() {}\n    };\n    _this.subscribeEventHandlers = {\n      videoEnabled: function videoEnabled() {},\n      videoDisabled: function videoDisabled() {}\n    };\n    var _this$props = _this.props,\n        sessionId = _this$props.sessionId,\n        token = _this$props.token,\n        onLeave = _this$props.onLeave;\n\n    var initLayoutContainer = require('opentok-layout-js');\n\n    var options = {\n      maxRatio: 3 / 2,\n      // The narrowest ratio that will be used (default 2x3)\n      minRatio: 9 / 16,\n      // The widest ratio that will be used (default 16x9)\n      fixedRatio: false,\n      // If this is true then the aspect ratio of the video is maintained and minRatio and maxRatio are ignored (default false)\n      alignItems: 'center',\n      // Can be 'start', 'center' or 'end'. Determines where to place items when on a row or column that is not full\n      bigClass: \"OT_big\",\n      // The class to add to elements that should be sized bigger\n      bigPercentage: 0.8,\n      // The maximum percentage of space the big ones should take up\n      bigFixedRatio: false,\n      // fixedRatio for the big ones\n      bigAlignItems: 'center',\n      // How to align the big items\n      smallAlignItems: 'center',\n      // How to align the small row or column of items if there is a big one\n      maxWidth: Infinity,\n      // The maximum width of the elements\n      maxHeight: Infinity,\n      // The maximum height of the elements\n      smallMaxWidth: Infinity,\n      // The maximum width of the small elements\n      smallMaxHeight: Infinity,\n      // The maximum height of the small elements\n      bigMaxWidth: Infinity,\n      // The maximum width of the big elements\n      bigMaxHeight: Infinity,\n      // The maximum height of the big elements\n      bigMaxRatio: 3 / 2,\n      // The narrowest ratio to use for the big elements (default 2x3)\n      bigMinRatio: 9 / 16,\n      // The widest ratio to use for the big elements (default 16x9)\n      bigFirst: true\n    };\n    var layout = initLayoutContainer(options);\n    return _this;\n  }\n\n  _createClass(Vonage, [{\n    key: \"screenShareButton\",\n    value: function screenShareButton() {\n      var _this2 = this;\n\n      return this.state.ssButton === true ? __jsx(Button, {\n        onClick: function onClick() {\n          EventEmitter.publish('startScreenShare');\n          EventEmitter.publish('disableVideo');\n\n          _this2.setState({\n            ssButton: false\n          });\n        },\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Share Screen\"\n      }) : __jsx(Button, {\n        onClick: function onClick() {\n          EventEmitter.publish('stopScreenShare');\n          EventEmitter.publish('enableVideo');\n\n          _this2.setState({\n            ssButton: true\n          });\n        },\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Stop Screen Share\"\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          sessionId = _this$props2.sessionId,\n          token = _this$props2.token,\n          onLeave = _this$props2.onLeave;\n      this.sessionHelper = createSession({\n        apiKey: \"\".concat(process.env.NEXT_PUBLIC_VV_API_KEY),\n        sessionId: \"\".concat(sessionId),\n        token: \"\".concat(token),\n        onStreamsUpdated: function onStreamsUpdated(streams) {\n          _this3.setState({\n            streams: streams\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.sessionHelper.disconnect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          sessionId = _this$props3.sessionId,\n          token = _this$props3.token,\n          onLeave = _this$props3.onLeave;\n      var boxes = this.layout.getLayout(this.state.streams.map(function (stream) {\n        width: stream.videoDimensions.width;\n\n        height: stream.videoDimensions.height;\n\n        big: stream.videoType === 'screen';\n      }));\n      return __jsx(\"div\", null, __jsx(Publisher, {\n        session: this.sessionHelper.session\n      }), this.state.streams.map(function (stream, idx) {\n        return __jsx(\"div\", {\n          key: stream.id,\n          style: {\n            top: boxes[idx].top,\n            left: boxes[idx].left,\n            width: boxes[idx].width,\n            height: boxes[idx].height\n          }\n        }, __jsx(OTSubscriber, {\n          session: _this4.sessionHelper.session,\n          stream: stream,\n          className: \"subscriber-video-stream\",\n          properties: {\n            showControls: false\n          },\n          onSubscribe: _this4.handleSubscribe,\n          onError: _this4.handleSubscribeError\n        }));\n      }), this.screenShareButton(), __jsx(Button, {\n        onClick: onLeave,\n        color: \"red\",\n        icon: \"close\",\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Leave call\"\n      }));\n    }\n  }]);\n\n  return Vonage;\n}(React.Component);\n\nVonage.propTypes = {\n  sessionId: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  onLeave: PropTypes.func.isRequired\n};\nexport default Vonage;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/vonage.js"],"names":["React","PropTypes","Publisher","EventEmitter","OTSession","OTPublisher","OTStreams","OTSubscriber","createSession","Button","List","Vonage","props","console","log","error","state","ssButton","streams","sessionEventHandlers","sessionConnected","sessionDisconnected","sessionReconnected","sessionReconnecting","publishEventHandlers","accessDenied","streamCreated","streamDestroyed","subscribeEventHandlers","videoEnabled","videoDisabled","sessionId","token","onLeave","initLayoutContainer","require","options","maxRatio","minRatio","fixedRatio","alignItems","bigClass","bigPercentage","bigFixedRatio","bigAlignItems","smallAlignItems","maxWidth","Infinity","maxHeight","smallMaxWidth","smallMaxHeight","bigMaxWidth","bigMaxHeight","bigMaxRatio","bigMinRatio","bigFirst","layout","publish","setState","fontSize","display","sessionHelper","apiKey","process","env","NEXT_PUBLIC_VV_API_KEY","onStreamsUpdated","disconnect","boxes","getLayout","map","stream","width","videoDimensions","height","big","videoType","session","idx","id","top","left","showControls","handleSubscribe","handleSubscribeError","screenShareButton","Component","propTypes","string","isRequired","func"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,EAA4CC,YAA5C,EAA0DC,aAA1D,QAA+E,eAA/E;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,oEAmDH,YAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,KArDkB;;AAAA,sEAuDD,YAAM;AACtBD,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,KAzDkB;;AAAA,yEA2DE,UAACC,KAAD,EAAW;AAC9BF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD,KA7DkB;;AAAA,yEA+DE,UAACA,KAAD,EAAW;AAC9BF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD,KAjEkB;;AAAA,2EAmEI,UAACA,KAAD,EAAW;AAChCF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD,KArEkB;;AAGjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAKA,UAAKC,oBAAL,GAA4B;AAC1BC,MAAAA,gBAAgB,EAAE,4BAAM,CAAE,CADA;AAE1BC,MAAAA,mBAAmB,EAAE,+BAAM,CAAE,CAFH;AAG1BC,MAAAA,kBAAkB,EAAE,8BAAM,CAAE,CAHF;AAI1BC,MAAAA,mBAAmB,EAAE,+BAAM,CAAE;AAJH,KAA5B;AAOA,UAAKC,oBAAL,GAA4B;AAC1BC,MAAAA,YAAY,EAAE,wBAAM,CAAE,CADI;AAE1BC,MAAAA,aAAa,EAAE,yBAAM,CAAE,CAFG;AAG1BC,MAAAA,eAAe,EAAE,2BAAM,CAAE;AAHC,KAA5B;AAMA,UAAKC,sBAAL,GAA8B;AAC5BC,MAAAA,YAAY,EAAE,wBAAM,CAAE,CADM;AAE5BC,MAAAA,aAAa,EAAE,yBAAM,CAAE;AAFK,KAA9B;AArBiB,sBA0BqB,MAAKlB,KA1B1B;AAAA,QA0BTmB,SA1BS,eA0BTA,SA1BS;AAAA,QA0BEC,KA1BF,eA0BEA,KA1BF;AAAA,QA0BSC,OA1BT,eA0BSA,OA1BT;;AA2BjB,QAAMC,mBAAmB,GAAGC,OAAO,CAAC,mBAAD,CAAnC;;AACA,QAAMC,OAAO,GAAG;AACdC,MAAAA,QAAQ,EAAE,IAAE,CADE;AACa;AAC3BC,MAAAA,QAAQ,EAAE,IAAE,EAFE;AAEa;AAC3BC,MAAAA,UAAU,EAAE,KAHE;AAGa;AAC3BC,MAAAA,UAAU,EAAE,QAJE;AAIa;AAC3BC,MAAAA,QAAQ,EAAE,QALI;AAKa;AAC3BC,MAAAA,aAAa,EAAE,GAND;AAMc;AAC5BC,MAAAA,aAAa,EAAE,KAPD;AAOa;AAC3BC,MAAAA,aAAa,EAAE,QARD;AAQa;AAC3BC,MAAAA,eAAe,EAAE,QATH;AASa;AAC3BC,MAAAA,QAAQ,EAAEC,QAVI;AAUa;AAC3BC,MAAAA,SAAS,EAAED,QAXG;AAWa;AAC3BE,MAAAA,aAAa,EAAEF,QAZD;AAYa;AAC3BG,MAAAA,cAAc,EAAEH,QAbF;AAaa;AAC3BI,MAAAA,WAAW,EAAEJ,QAdC;AAca;AAC3BK,MAAAA,YAAY,EAAEL,QAfA;AAea;AAC3BM,MAAAA,WAAW,EAAE,IAAE,CAhBD;AAgBa;AAC3BC,MAAAA,WAAW,EAAE,IAAE,EAjBD;AAiBa;AAC3BC,MAAAA,QAAQ,EAAE;AAlBI,KAAhB;AAoBA,QAAMC,MAAM,GAAGtB,mBAAmB,CAACE,OAAD,CAAlC;AAhDiB;AAiDlB;;;;wCAsBmB;AAAA;;AAClB,aAAO,KAAKpB,KAAL,CAAWC,QAAX,KAAwB,IAAxB,GACL,MAAC,MAAD;AACE,QAAA,OAAO,EAAI,mBAAM;AACfd,UAAAA,YAAY,CAACsD,OAAb,CAAqB,kBAArB;AACAtD,UAAAA,YAAY,CAACsD,OAAb,CAAqB,cAArB;;AACA,UAAA,MAAI,CAACC,QAAL,CAAc;AAACzC,YAAAA,QAAQ,EAAE;AAAX,WAAd;AACC,SALL;AAOE,QAAA,KAAK,EAAI;AAAC0C,UAAAA,QAAQ,EAAE,MAAX;AAAmBC,UAAAA,OAAO,EAAE;AAA5B,SAPX;AAQE,QAAA,OAAO,EAAG;AARZ,QADK,GAYL,MAAC,MAAD;AACI,QAAA,OAAO,EAAI,mBAAM;AACbzD,UAAAA,YAAY,CAACsD,OAAb,CAAqB,iBAArB;AACAtD,UAAAA,YAAY,CAACsD,OAAb,CAAqB,aAArB;;AACA,UAAA,MAAI,CAACC,QAAL,CAAc;AAACzC,YAAAA,QAAQ,EAAE;AAAX,WAAd;AACD,SALP;AAOI,QAAA,KAAK,EAAI;AAAC0C,UAAAA,QAAQ,EAAE,MAAX;AAAmBC,UAAAA,OAAO,EAAE;AAA5B,SAPb;AAQI,QAAA,OAAO,EAAG;AARd,QAZF;AAuBD;;;yCAEoB;AAAA;;AAAA,yBACmB,KAAKhD,KADxB;AAAA,UACXmB,SADW,gBACXA,SADW;AAAA,UACAC,KADA,gBACAA,KADA;AAAA,UACOC,OADP,gBACOA,OADP;AAEnB,WAAK4B,aAAL,GAAqBrD,aAAa,CAAC;AACjCsD,QAAAA,MAAM,YAAKC,OAAO,CAACC,GAAR,CAAYC,sBAAjB,CAD2B;AAEjClC,QAAAA,SAAS,YAAKA,SAAL,CAFwB;AAGjCC,QAAAA,KAAK,YAAKA,KAAL,CAH4B;AAIjCkC,QAAAA,gBAAgB,EAAE,0BAAAhD,OAAO,EAAI;AAAE,UAAA,MAAI,CAACwC,QAAL,CAAc;AAAExC,YAAAA,OAAO,EAAPA;AAAF,WAAd;AAA6B;AAJ3B,OAAD,CAAlC;AAMD;;;2CAEsB;AACrB,WAAK2C,aAAL,CAAmBM,UAAnB;AACD;;;6BAEQ;AAAA;;AAAA,yBAC+B,KAAKvD,KADpC;AAAA,UACCmB,SADD,gBACCA,SADD;AAAA,UACYC,KADZ,gBACYA,KADZ;AAAA,UACmBC,OADnB,gBACmBA,OADnB;AAEP,UAAMmC,KAAK,GAAG,KAAKZ,MAAL,CAAYa,SAAZ,CAAsB,KAAKrD,KAAL,CAAWE,OAAX,CAAmBoD,GAAnB,CAAuB,UAAAC,MAAM,EAAI;AACnEC,QAAAA,KAAK,EAAED,MAAM,CAACE,eAAP,CAAuBD,KAAvB;;AACPE,QAAAA,MAAM,EAAEH,MAAM,CAACE,eAAP,CAAuBC,MAAvB;;AACRC,QAAAA,GAAG,EAAEJ,MAAM,CAACK,SAAP,KAAqB,QAArB;AACN,OAJmC,CAAtB,CAAd;AAMA,aACE,mBACI,MAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKf,aAAL,CAAmBgB;AAAvC,QADJ,EAEK,KAAK7D,KAAL,CAAWE,OAAX,CAAmBoD,GAAnB,CAAuB,UAACC,MAAD,EAASO,GAAT;AAAA,eACtB;AAAK,UAAA,GAAG,EAAEP,MAAM,CAACQ,EAAjB;AAAqB,UAAA,KAAK,EAAE;AAACC,YAAAA,GAAG,EAAEZ,KAAK,CAACU,GAAD,CAAL,CAAWE,GAAjB;AAAsBC,YAAAA,IAAI,EAAEb,KAAK,CAACU,GAAD,CAAL,CAAWG,IAAvC;AAA6CT,YAAAA,KAAK,EAAEJ,KAAK,CAACU,GAAD,CAAL,CAAWN,KAA/D;AAAsEE,YAAAA,MAAM,EAAEN,KAAK,CAACU,GAAD,CAAL,CAAWJ;AAAzF;AAA5B,WACE,MAAC,YAAD;AACE,UAAA,OAAO,EAAE,MAAI,CAACb,aAAL,CAAmBgB,OAD9B;AAEE,UAAA,MAAM,EAAEN,MAFV;AAGE,UAAA,SAAS,EAAC,yBAHZ;AAIE,UAAA,UAAU,EAAE;AAAEW,YAAAA,YAAY,EAAE;AAAhB,WAJd;AAKE,UAAA,WAAW,EAAI,MAAI,CAACC,eALtB;AAME,UAAA,OAAO,EAAI,MAAI,CAACC;AANlB,UADF,CADsB;AAAA,OAAvB,CAFL,EAaK,KAAKC,iBAAL,EAbL,EAcI,MAAC,MAAD;AACE,QAAA,OAAO,EAAEpD,OADX;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,KAAK,EAAI;AAAC0B,UAAAA,QAAQ,EAAE,MAAX;AAAmBC,UAAAA,OAAO,EAAE;AAA5B,SAJX;AAKE,QAAA,OAAO,EAAC;AALV,QAdJ,CADF;AAwBD;;;;EAhJkB5D,KAAK,CAACsF,S;;AAoJ3B3E,MAAM,CAAC4E,SAAP,GAAmB;AACjBxD,EAAAA,SAAS,EAAE9B,SAAS,CAACuF,MAAV,CAAiBC,UADX;AAEjBzD,EAAAA,KAAK,EAAE/B,SAAS,CAACuF,MAAV,CAAiBC,UAFP;AAGjBxD,EAAAA,OAAO,EAAEhC,SAAS,CAACyF,IAAV,CAAeD;AAHP,CAAnB;AAMA,eAAe9E,MAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Publisher from './publisher'\nimport { EventEmitter } from './util/EventEmitter'\nimport { OTSession, OTPublisher, OTStreams, OTSubscriber, createSession } from 'opentok-react'\nimport { Button, List } from 'semantic-ui-react'\n\nclass Vonage extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      ssButton: true,\n      streams: []\n    }\n\n    this.sessionEventHandlers = {\n      sessionConnected: () => {},\n      sessionDisconnected: () => {},\n      sessionReconnected: () => {},\n      sessionReconnecting: () => {},\n    }\n\n    this.publishEventHandlers = {\n      accessDenied: () => {},\n      streamCreated: () => {},\n      streamDestroyed: () => {},\n    }\n\n    this.subscribeEventHandlers = {\n      videoEnabled: () => {},\n      videoDisabled: () => {},\n    }\n\n    const { sessionId, token, onLeave } = this.props\n    const initLayoutContainer = require('opentok-layout-js');\n    const options = {\n      maxRatio: 3/2,             // The narrowest ratio that will be used (default 2x3)\n      minRatio: 9/16,            // The widest ratio that will be used (default 16x9)\n      fixedRatio: false,         // If this is true then the aspect ratio of the video is maintained and minRatio and maxRatio are ignored (default false)\n      alignItems: 'center',      // Can be 'start', 'center' or 'end'. Determines where to place items when on a row or column that is not full\n      bigClass: \"OT_big\",        // The class to add to elements that should be sized bigger\n      bigPercentage: 0.8 ,        // The maximum percentage of space the big ones should take up\n      bigFixedRatio: false,      // fixedRatio for the big ones\n      bigAlignItems: 'center',   // How to align the big items\n      smallAlignItems: 'center', // How to align the small row or column of items if there is a big one\n      maxWidth: Infinity,        // The maximum width of the elements\n      maxHeight: Infinity,       // The maximum height of the elements\n      smallMaxWidth: Infinity,   // The maximum width of the small elements\n      smallMaxHeight: Infinity,  // The maximum height of the small elements\n      bigMaxWidth: Infinity,     // The maximum width of the big elements\n      bigMaxHeight: Infinity,    // The maximum height of the big elements\n      bigMaxRatio: 3/2,          // The narrowest ratio to use for the big elements (default 2x3)\n      bigMinRatio: 9/16,         // The widest ratio to use for the big elements (default 16x9)\n      bigFirst: true,\n    };\n    const layout = initLayoutContainer(options);\n  }\n\n  handlePublish = () => {\n    console.log('Successfully published!')\n  }\n\n  handleSubscribe = () => {\n    console.log('Subscribed!')\n  }\n\n  handleSessionError = (error) => {\n    console.error(error)\n  }\n\n  handlePublishError = (error) => {\n    console.error(error)\n  }\n\n  handleSubscribeError = (error) => {\n    console.error(error)\n  }\n\n  screenShareButton() {\n    return this.state.ssButton === true ? (\n      <Button\n        onClick = {() => {\n          EventEmitter.publish('startScreenShare')\n          EventEmitter.publish('disableVideo')\n          this.setState({ssButton: false})\n          }\n        }\n        style = {{fontSize: '.8vw', display: 'inline-flex'}}\n        content = \"Share Screen\"\n      />\n    ) : (\n      <Button\n          onClick = {() => {\n              EventEmitter.publish('stopScreenShare')\n              EventEmitter.publish('enableVideo')\n              this.setState({ssButton: true})\n            }\n          }\n          style = {{fontSize: '.8vw', display: 'inline-flex'}}\n          content = \"Stop Screen Share\"\n        />\n    )\n  }\n\n  componentWillMount() {\n    const { sessionId, token, onLeave } = this.props\n    this.sessionHelper = createSession({\n      apiKey: `${process.env.NEXT_PUBLIC_VV_API_KEY}`,\n      sessionId: `${sessionId}`,\n      token: `${token}`,\n      onStreamsUpdated: streams => { this.setState({ streams }); }\n    });\n  }\n\n  componentWillUnmount() {\n    this.sessionHelper.disconnect();\n  }\n\n  render() {\n    const { sessionId, token, onLeave } = this.props\n    const boxes = this.layout.getLayout(this.state.streams.map(stream => {\n      width: stream.videoDimensions.width\n      height: stream.videoDimensions.height\n      big: stream.videoType === 'screen'\n    })\n  );\n    return (\n      <div>\n          <Publisher session={this.sessionHelper.session}/>\n          {this.state.streams.map((stream, idx) => (\n            <div key={stream.id} style={{top: boxes[idx].top, left: boxes[idx].left, width: boxes[idx].width, height: boxes[idx].height }}>\n              <OTSubscriber\n                session={this.sessionHelper.session}\n                stream={stream}\n                className=\"subscriber-video-stream\"\n                properties={{ showControls: false }}\n                onSubscribe = {this.handleSubscribe}\n                onError = {this.handleSubscribeError} />\n            </div>\n          ))}\n          {this.screenShareButton()}\n          <Button\n            onClick={onLeave}\n            color=\"red\"\n            icon=\"close\"\n            style = {{fontSize: '.8vw', display: 'inline-flex'}}\n            content=\"Leave call\"\n          />\n      </div>\n    )\n  }\n}\n\n\nVonage.propTypes = {\n  sessionId: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  onLeave: PropTypes.func.isRequired,\n}\n\nexport default Vonage\n"]},"metadata":{},"sourceType":"module"}