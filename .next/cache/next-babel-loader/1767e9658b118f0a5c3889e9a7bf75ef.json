{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport YourTurnModal from './yourTurnModal';\nimport StudentWebSocketController from './studentWebSocket';\nimport { Label, Button } from 'semantic-ui-react';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { EventEmitter } from '../../util/EventEmitter';\nconst QueueDiv = styled.div.withConfig({\n  displayName: \"studentQueueView__QueueDiv\",\n  componentId: \"sc-1qcvoz5-0\"\n})([\"grid-gap:2vh;\"]);\nconst QueueLabel = styled(Label).withConfig({\n  displayName: \"studentQueueView__QueueLabel\",\n  componentId: \"sc-1qcvoz5-1\"\n})([\"text-align:center;\"]);\n/**\r\n * This is how the student views the Queue\r\n */\n\nclass StudentQueueView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayStudentsStyle: {\n        display: 'grid'\n      },\n      iconToDisplay: 'caret square down outline',\n      queueWebSocketController: new StudentWebSocketController(),\n      studentsInQueue: [],\n      me: this.props.me,\n      inQueue: false,\n      isYourTurn: false,\n      currStudentBeingHelped: '',\n      isReadyToRender: false,\n      office: this.props.office,\n      inCall: false,\n      currentGroup: {\n        id: '',\n        name: ''\n      },\n      onJoin: this.props.onJoin\n    };\n    this.defineEventEmitterCallbacks();\n  }\n  /**\r\n   * Define EventEmitter subscribers\r\n   */\n\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('activateYourTurnModal', TAName => {\n      this.setState({\n        inQueue: false\n      });\n      EventEmitter.publish('startYourTurnModalTimer', TAName);\n    });\n    EventEmitter.subscribe('updateStudentsInQueue', msg => {\n      this.setState({\n        studentsInQueue: msg\n      });\n    });\n    EventEmitter.subscribe('addMeToQueue', () => {\n      this.setState({\n        inQueue: true\n      });\n    });\n    EventEmitter.subscribe('removeMeFromQueue', () => {\n      this.setState({\n        inQueue: false\n      });\n    });\n    EventEmitter.subscribe('studentTimeout', TAName => {\n      const {\n        queueWebSocketController\n      } = this.state;\n      queueWebSocketController.signalStudentTimeout(TAName);\n      this.createTimeoutNotification();\n    });\n    EventEmitter.subscribe('studentJoinTA', TAName => {\n      const {\n        queueWebSocketController,\n        office,\n        onJoin,\n        me\n      } = this.state;\n      queueWebSocketController.signalJoinTA(office, TAName, me);\n      this.setState({\n        inQueue: false,\n        inCall: true\n      });\n      onJoin(office);\n    });\n    EventEmitter.subscribe('studentInviteTA', TAName => {\n      const {\n        queueWebSocketController,\n        onJoin,\n        currentGroup,\n        me\n      } = this.state;\n      queueWebSocketController.signalJoinTA(currentGroup, TAName, me);\n      this.setState({\n        inQueue: false,\n        inCall: true\n      });\n      onJoin(currentGroup);\n    });\n    EventEmitter.subscribe('studentDeclineTA', TAName => {\n      const {\n        queueWebSocketController,\n        onJoin,\n        currentGroup\n      } = this.state;\n      queueWebSocketController.signalDeclineTA(TAName);\n      this.setState({\n        inQueue: false\n      });\n      onJoin(currentGroup);\n    });\n    EventEmitter.subscribe('currentGroupChange', currentGroup => {\n      console.log(currentGroup);\n      this.setState({\n        currentGroup\n      });\n    });\n    EventEmitter.subscribe('callOver', () => {\n      this.setState({\n        inCall: false,\n        currStudentBeingHelped: ''\n      });\n    });\n    EventEmitter.subscribe('updateCurrStudent', currStudentBeingHelped => {\n      this.setState({\n        currStudentBeingHelped\n      });\n    });\n    EventEmitter.subscribe('initializeQueueOnGreeting', ({\n      currStudent,\n      studentsInQueue\n    }) => {\n      this.setState({\n        currStudentBeingHelped: currStudent,\n        studentsInQueue\n      });\n    });\n  }\n\n  createTimeoutNotification() {\n    NotificationManager.info('Your Invitation Has Expired');\n  }\n\n  isStudentDisplayed() {\n    let {\n      display\n    } = this.state.displayStudentsStyle;\n    return display === 'grid';\n  }\n\n  alterStudentDisplay() {\n    let displayStudentsStyle = this.isStudentDisplayed() ? {\n      display: 'none'\n    } : {\n      display: 'grid'\n    };\n    let iconToDisplay = this.isStudentDisplayed() ? 'caret square up outline' : 'caret square down outline';\n    this.setState({\n      displayStudentsStyle,\n      iconToDisplay\n    });\n  }\n\n  addMeToQueue() {\n    const {\n      firstName,\n      lastName\n    } = this.state.me;\n    const fullName = `${firstName} ${lastName}`;\n\n    if (this.state.studentsInQueue.indexOf(fullName) >= 0 || this.state.currStudentBeingHelped === fullName) {\n      return;\n    }\n\n    this.state.queueWebSocketController.addMeToQueue();\n  }\n\n  removeMeFromQueue() {\n    const {\n      firstName,\n      lastName\n    } = this.state.me;\n    const fullName = `${firstName} ${lastName}`;\n\n    if (this.state.studentsInQueue.indexOf(fullName) < 0) {\n      return;\n    }\n\n    this.state.queueWebSocketController.removeMeFromQueue();\n  }\n\n  getButtonToDisplay() {\n    if (this.state.inCall) {\n      return null;\n    }\n\n    const buttonToDisplay = this.state.inQueue ? __jsx(Button, {\n      onClick: this.removeMeFromQueue.bind(this),\n      style: {\n        width: '100%',\n        fontSize: '1vw'\n      },\n      secondary: true\n    }, \"Leave Queue\") : __jsx(Button, {\n      onClick: this.addMeToQueue.bind(this),\n      style: {\n        width: '100%',\n        fontSize: '1vw'\n      },\n      primary: true\n    }, \"Join Queue\");\n    return __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14,\n        display: 'inline-flex'\n      }\n    }, buttonToDisplay);\n  }\n\n  componentDidMount() {\n    const {\n      me,\n      queueWebSocketController\n    } = this.state;\n    const courseId = Number(window.location.href.split('/')[4]);\n    queueWebSocketController.start({\n      me,\n      courseId\n    });\n    this.setState({\n      isReadyToRender: true\n    });\n  }\n\n  createCurrStudentLabel() {\n    const {\n      currStudentBeingHelped\n    } = this.state;\n\n    if (currStudentBeingHelped.length == 0) {\n      return null;\n    }\n\n    return __jsx(QueueLabel, {\n      style: {\n        fontSize: '1.2vw',\n        textAlign: 'center',\n        width: '95%',\n        marginBottom: '2%',\n        minWidth: '41px',\n        marginLeft: '.8%',\n        backgroundColor: 'red',\n        marginRight: '1%'\n      },\n      key: currStudentBeingHelped\n    }, currStudentBeingHelped);\n  }\n\n  createQueueLabel(student) {\n    return __jsx(QueueLabel, {\n      style: {\n        fontSize: '1.2vw',\n        textAlign: 'center',\n        width: '95%',\n        marginBottom: '2%',\n        minWidth: '41px',\n        marginLeft: '.8%',\n        marginRight: '1%'\n      },\n      key: student\n    }, student);\n  }\n\n  render() {\n    const {\n      isReadyToRender\n    } = this.state;\n\n    if (!isReadyToRender) {\n      return null;\n    }\n\n    const queueLabels = this.isStudentDisplayed() ? this.state.studentsInQueue.map(this.createQueueLabel) : [];\n    return __jsx(QueueDiv, null, __jsx(YourTurnModal, null), __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 12,\n        width: '95%'\n      },\n      fluid: true,\n      vertical: true\n    }, __jsx(Button, {\n      compact: true,\n      content: \"Queue\",\n      icon: this.state.iconToDisplay,\n      labelPosition: \"right\",\n      onClick: this.alterStudentDisplay.bind(this),\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'center',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      }\n    })), this.createCurrStudentLabel(), __jsx(QueueDiv, {\n      style: {\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      }\n    }, queueLabels), this.getButtonToDisplay(), __jsx(NotificationContainer, null));\n  }\n\n}\n\nStudentQueueView.propTypes = {\n  onJoin: PropTypes.func.isRequired\n};\nexport default StudentQueueView;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/queue/student/studentQueueView.js"],"names":["React","Component","PropTypes","styled","YourTurnModal","StudentWebSocketController","Label","Button","NotificationContainer","NotificationManager","EventEmitter","QueueDiv","div","QueueLabel","StudentQueueView","constructor","props","state","displayStudentsStyle","display","iconToDisplay","queueWebSocketController","studentsInQueue","me","inQueue","isYourTurn","currStudentBeingHelped","isReadyToRender","office","inCall","currentGroup","id","name","onJoin","defineEventEmitterCallbacks","subscribe","TAName","setState","publish","msg","signalStudentTimeout","createTimeoutNotification","signalJoinTA","signalDeclineTA","console","log","currStudent","info","isStudentDisplayed","alterStudentDisplay","addMeToQueue","firstName","lastName","fullName","indexOf","removeMeFromQueue","getButtonToDisplay","buttonToDisplay","bind","width","fontSize","position","bottom","componentDidMount","courseId","Number","window","location","href","split","start","createCurrStudentLabel","length","textAlign","marginBottom","minWidth","marginLeft","backgroundColor","marginRight","createQueueLabel","student","render","queueLabels","map","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport YourTurnModal from './yourTurnModal'\r\nimport StudentWebSocketController from './studentWebSocket'\r\nimport { Label, Button } from 'semantic-ui-react'\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications'\r\nimport { EventEmitter } from '../../util/EventEmitter'\r\n\r\nconst QueueDiv = styled.div`\r\n  grid-gap: 2vh;\r\n`\r\n\r\nconst QueueLabel = styled(Label)`\r\n  text-align: center;\r\n`\r\n\r\n/**\r\n * This is how the student views the Queue\r\n */\r\n\r\nclass StudentQueueView extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      displayStudentsStyle: { display: 'grid' },\r\n      iconToDisplay: 'caret square down outline',\r\n      queueWebSocketController: new StudentWebSocketController(),\r\n      studentsInQueue: [],\r\n      me: this.props.me,\r\n      inQueue: false,\r\n      isYourTurn: false,\r\n      currStudentBeingHelped: '',\r\n      isReadyToRender: false,\r\n      office: this.props.office,\r\n      inCall: false,\r\n      currentGroup: { id: '', name: '' },\r\n      onJoin: this.props.onJoin,\r\n    }\r\n\r\n    this.defineEventEmitterCallbacks()\r\n  }\r\n\r\n  /**\r\n   * Define EventEmitter subscribers\r\n   */\r\n\r\n  defineEventEmitterCallbacks() {\r\n    EventEmitter.subscribe('activateYourTurnModal', (TAName) => {\r\n      this.setState({ inQueue: false })\r\n      EventEmitter.publish('startYourTurnModalTimer', TAName)\r\n    })\r\n\r\n    EventEmitter.subscribe('updateStudentsInQueue', (msg) => {\r\n      this.setState({ studentsInQueue: msg })\r\n    })\r\n\r\n    EventEmitter.subscribe('addMeToQueue', () => {\r\n      this.setState({ inQueue: true })\r\n    })\r\n\r\n    EventEmitter.subscribe('removeMeFromQueue', () => {\r\n      this.setState({ inQueue: false })\r\n    })\r\n\r\n    EventEmitter.subscribe('studentTimeout', (TAName) => {\r\n      const { queueWebSocketController } = this.state\r\n      queueWebSocketController.signalStudentTimeout(TAName)\r\n      this.createTimeoutNotification()\r\n    })\r\n\r\n    EventEmitter.subscribe('studentJoinTA', (TAName) => {\r\n      const { queueWebSocketController, office, onJoin, me } = this.state\r\n      queueWebSocketController.signalJoinTA(office, TAName, me)\r\n      this.setState({ inQueue: false, inCall: true })\r\n      onJoin(office)\r\n    })\r\n\r\n    EventEmitter.subscribe('studentInviteTA', (TAName) => {\r\n      const { queueWebSocketController, onJoin, currentGroup, me } = this.state\r\n      queueWebSocketController.signalJoinTA(currentGroup, TAName, me)\r\n      this.setState({ inQueue: false, inCall: true })\r\n      onJoin(currentGroup)\r\n    })\r\n\r\n    EventEmitter.subscribe('studentDeclineTA', (TAName) => {\r\n      const { queueWebSocketController, onJoin, currentGroup } = this.state\r\n      queueWebSocketController.signalDeclineTA(TAName)\r\n      this.setState({ inQueue: false })\r\n      onJoin(currentGroup)\r\n    })\r\n\r\n    EventEmitter.subscribe('currentGroupChange', (currentGroup) => {\r\n      console.log(currentGroup)\r\n      this.setState({ currentGroup })\r\n    })\r\n\r\n    EventEmitter.subscribe('callOver', () => {\r\n      this.setState({ inCall: false, currStudentBeingHelped: '' })\r\n    })\r\n\r\n    EventEmitter.subscribe('updateCurrStudent', (currStudentBeingHelped) => {\r\n      this.setState({ currStudentBeingHelped })\r\n    })\r\n\r\n    EventEmitter.subscribe(\r\n      'initializeQueueOnGreeting',\r\n      ({ currStudent, studentsInQueue }) => {\r\n        this.setState({ currStudentBeingHelped: currStudent, studentsInQueue })\r\n      }\r\n    )\r\n  }\r\n\r\n  createTimeoutNotification() {\r\n    NotificationManager.info('Your Invitation Has Expired')\r\n  }\r\n\r\n  isStudentDisplayed() {\r\n    let { display } = this.state.displayStudentsStyle\r\n    return display === 'grid'\r\n  }\r\n\r\n  alterStudentDisplay() {\r\n    let displayStudentsStyle = this.isStudentDisplayed()\r\n      ? { display: 'none' }\r\n      : { display: 'grid' }\r\n\r\n    let iconToDisplay = this.isStudentDisplayed()\r\n      ? 'caret square up outline'\r\n      : 'caret square down outline'\r\n\r\n    this.setState({ displayStudentsStyle, iconToDisplay })\r\n  }\r\n\r\n  addMeToQueue() {\r\n    const { firstName, lastName } = this.state.me\r\n    const fullName = `${firstName} ${lastName}`\r\n\r\n    if (\r\n      this.state.studentsInQueue.indexOf(fullName) >= 0 ||\r\n      this.state.currStudentBeingHelped === fullName\r\n    ) {\r\n      return\r\n    }\r\n\r\n    this.state.queueWebSocketController.addMeToQueue()\r\n  }\r\n\r\n  removeMeFromQueue() {\r\n    const { firstName, lastName } = this.state.me\r\n    const fullName = `${firstName} ${lastName}`\r\n\r\n    if (this.state.studentsInQueue.indexOf(fullName) < 0) {\r\n      return\r\n    }\r\n\r\n    this.state.queueWebSocketController.removeMeFromQueue()\r\n  }\r\n\r\n  getButtonToDisplay() {\r\n    if (this.state.inCall) {\r\n      return null\r\n    }\r\n\r\n    const buttonToDisplay = this.state.inQueue ? (\r\n      <Button\r\n        onClick={this.removeMeFromQueue.bind(this)}\r\n        style={{ width: '100%', fontSize: '1vw' }}\r\n        secondary\r\n      >\r\n        Leave Queue\r\n      </Button>\r\n    ) : (\r\n      <Button\r\n        onClick={this.addMeToQueue.bind(this)}\r\n        style={{ width: '100%', fontSize: '1vw' }}\r\n        primary\r\n      >\r\n        Join Queue\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          width: 'calc(100% - 38px)',\r\n          bottom: 14,\r\n          display: 'inline-flex',\r\n        }}\r\n      >\r\n        {buttonToDisplay}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { me, queueWebSocketController } = this.state\r\n    const courseId = Number(window.location.href.split('/')[4])\r\n    queueWebSocketController.start({ me, courseId })\r\n    this.setState({ isReadyToRender: true })\r\n  }\r\n\r\n  createCurrStudentLabel() {\r\n    const { currStudentBeingHelped } = this.state\r\n\r\n    if (currStudentBeingHelped.length == 0) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <QueueLabel\r\n        style={{\r\n          fontSize: '1.2vw',\r\n          textAlign: 'center',\r\n          width: '95%',\r\n          marginBottom: '2%',\r\n          minWidth: '41px',\r\n          marginLeft: '.8%',\r\n          backgroundColor: 'red',\r\n          marginRight: '1%',\r\n        }}\r\n        key={currStudentBeingHelped}\r\n      >\r\n        {currStudentBeingHelped}\r\n      </QueueLabel>\r\n    )\r\n  }\r\n\r\n  createQueueLabel(student) {\r\n    return (\r\n      <QueueLabel\r\n        style={{\r\n          fontSize: '1.2vw',\r\n          textAlign: 'center',\r\n          width: '95%',\r\n          marginBottom: '2%',\r\n          minWidth: '41px',\r\n          marginLeft: '.8%',\r\n          marginRight: '1%',\r\n        }}\r\n        key={student}\r\n      >\r\n        {student}\r\n      </QueueLabel>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { isReadyToRender } = this.state\r\n\r\n    if (!isReadyToRender) {\r\n      return null\r\n    }\r\n\r\n    const queueLabels = this.isStudentDisplayed()\r\n      ? this.state.studentsInQueue.map(this.createQueueLabel)\r\n      : []\r\n\r\n    return (\r\n      <QueueDiv>\r\n        <YourTurnModal />\r\n\r\n        <Button.Group\r\n          size=\"huge\"\r\n          style={{ marginBottom: 12, width: '95%' }}\r\n          fluid\r\n          vertical\r\n        >\r\n          <Button\r\n            compact\r\n            content=\"Queue\"\r\n            icon={this.state.iconToDisplay}\r\n            labelPosition=\"right\"\r\n            onClick={this.alterStudentDisplay.bind(this)}\r\n            style={{\r\n              fontSize: '1.5vw',\r\n              textAlign: 'center',\r\n              width: '100%',\r\n              marginBottom: '2%',\r\n              minWidth: '41px',\r\n            }}\r\n          />\r\n        </Button.Group>\r\n\r\n        {this.createCurrStudentLabel()}\r\n\r\n        <QueueDiv\r\n          style={{ width: '100%', marginBottom: '2%', minWidth: '41px' }}\r\n        >\r\n          {queueLabels}\r\n        </QueueDiv>\r\n        {this.getButtonToDisplay()}\r\n\r\n        <NotificationContainer />\r\n      </QueueDiv>\r\n    )\r\n  }\r\n}\r\n\r\nStudentQueueView.propTypes = {\r\n  onJoin: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default StudentQueueView\r\n"]},"metadata":{},"sourceType":"module"}