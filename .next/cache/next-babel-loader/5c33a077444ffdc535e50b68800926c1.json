{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport { Accordion, List, Button } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\nimport { AuthRequired } from '../components/authProvider';\nimport * as api from '../util/mercuryService';\nimport Link from 'next/Link';\n\nfunction DropDown() {\n  const {\n    0: classes,\n    1: setClasses\n  } = useState([]);\n  useEffect(() => {\n    api.getClasses().then(classes => setClasses(classes)).catch(console.error);\n  }, []);\n  const colors = ['red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown', 'gray', 'black'];\n\n  function zip() {\n    var args = [].slice.call(arguments);\n    var shortest = args.length == 0 ? [] : args.reduce(function (a, b) {\n      return a.length < b.length ? a : b;\n    });\n    return shortest.map(function (_, i) {\n      return args.map(function (array) {\n        return array[i];\n      });\n    });\n  }\n\n  return __jsx(\"div\", null, __jsx(Accordion, {\n    fluid: true,\n    exclusive: false,\n    defaultActiveIndex: [0, 1],\n    style: {\n      fontSize: '1vw'\n    },\n    panels: [{\n      key: 'student',\n      title: 'Student',\n      content: {\n        content: __jsx(\"div\", null, __jsx(List, {\n          relaxed: true\n        }, __jsx(React.Fragment, null, zip(colors, classes).filter(zipped => zipped[1].role === 'Student').map(zipped => __jsx(List.Item, {\n          key: `class_${zipped[1].id}`\n        }, __jsx(List.Content, null, __jsx(Link, {\n          href: `/classes/${zipped[1].id}`\n        }, __jsx(Button, {\n          style: {\n            fontSize: '1vw',\n            width: '100%',\n            minWidth: '41px'\n          },\n          color: zipped[0],\n          content: zipped[1].name\n        }))))))))\n      }\n    }, {\n      key: 'ta',\n      title: 'TA',\n      content: {\n        content: __jsx(\"div\", null, __jsx(List, {\n          relaxed: true\n        }, zip(colors, classes).filter(zipped => zipped[1].role === 'Professor').map(zipped => __jsx(List.Item, {\n          key: `class_${zipped[1].id}`\n        }, __jsx(List.Content, null, __jsx(Link, {\n          href: `/classes/${zipped[1].id}`\n        }, __jsx(Button, {\n          style: {\n            fontSize: '1vw',\n            width: '100%',\n            minWidth: '41px'\n          },\n          color: zipped[0],\n          content: zipped[1].name\n        })))))))\n      }\n    }]\n  }));\n}\n\nexport default DropDown;","map":null,"metadata":{},"sourceType":"module"}