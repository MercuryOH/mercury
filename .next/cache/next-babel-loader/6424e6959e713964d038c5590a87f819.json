{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Label, Button } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport QueueWebSocketController from './queuews';\nimport * as api from '../../util/mercuryService';\nimport YourTurnModal from './yourTurnModal';\nimport TaWaitingModal from './taWaitingModal';\nvar QueueDiv = styled.div.withConfig({\n  displayName: \"queue__QueueDiv\",\n  componentId: \"sc-1vy3urw-0\"\n})([\"grid-gap:2vh;\"]);\n_c = QueueDiv;\nvar QueueLabel = styled(Label).withConfig({\n  displayName: \"queue__QueueLabel\",\n  componentId: \"sc-1vy3urw-1\"\n})([\"text-align:center;\"]);\n_c2 = QueueLabel;\n\nvar Queue = /*#__PURE__*/function (_Component) {\n  _inherits(Queue, _Component);\n\n  var _super = _createSuper(Queue);\n\n  function Queue(props) {\n    var _this;\n\n    _classCallCheck(this, Queue);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      displayStudentsStyle: {\n        display: 'grid'\n      },\n      iconToDisplay: 'caret square down outline',\n      queueWebSocketController: new QueueWebSocketController(_assertThisInitialized(_this)),\n      studentsInQueue: [],\n      me: {},\n      classData: [],\n      inQueue: false,\n      isYourTurn: false,\n      inviteNextStudent: false,\n      nextStudentName: ''\n    };\n\n    _this.getRoleForClass.bind(_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(Queue, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.courseId = Number(window.location.href.split('/')[4]);\n      this.state.queueWebSocketController.start();\n      var me = {};\n      var classData = {};\n      api.getMe().then(function (meData) {\n        me = meData;\n      }).then(function () {\n        return api.getClasses();\n      }).then(function (classPayload) {\n        classData = classPayload;\n      }).then(function () {\n        return _this2.setState({\n          me: me,\n          classData: classData\n        });\n      });\n    }\n  }, {\n    key: \"isStudentDisplayed\",\n    value: function isStudentDisplayed() {\n      var display = this.state.displayStudentsStyle.display;\n      return display === 'grid';\n    }\n  }, {\n    key: \"alterStudentDisplay\",\n    value: function alterStudentDisplay() {\n      var displayStudentsStyle = this.isStudentDisplayed() ? {\n        display: 'none'\n      } : {\n        display: 'grid'\n      };\n      var iconToDisplay = this.isStudentDisplayed() ? 'caret square up outline' : 'caret square down outline';\n      this.setState({\n        displayStudentsStyle: displayStudentsStyle,\n        iconToDisplay: iconToDisplay\n      });\n    }\n  }, {\n    key: \"addMeToQueue\",\n    value: function addMeToQueue() {\n      var _this$state$me = this.state.me,\n          firstName = _this$state$me.firstName,\n          lastName = _this$state$me.lastName;\n      var fullName = \"\".concat(firstName, \" \").concat(lastName);\n\n      if (this.state.studentsInQueue.indexOf(fullName) >= 0) {\n        return;\n      }\n\n      this.state.queueWebSocketController.addMeToQueue();\n    }\n  }, {\n    key: \"removeMeFromQueue\",\n    value: function removeMeFromQueue() {\n      var _this$state$me2 = this.state.me,\n          firstName = _this$state$me2.firstName,\n          lastName = _this$state$me2.lastName;\n      var fullName = \"\".concat(firstName, \" \").concat(lastName);\n\n      if (this.state.studentsInQueue.indexOf(fullName) < 0) {\n        return;\n      }\n\n      this.state.queueWebSocketController.removeMeFromQueue();\n    }\n  }, {\n    key: \"getRoleForClass\",\n    value: function getRoleForClass() {\n      var _this3 = this;\n\n      var classData = this.state.classData;\n      var userRole = null;\n      classData.forEach(function (row) {\n        var id = row.id,\n            role = row.role;\n\n        if (_this3.courseId === Number(id)) {\n          userRole = role;\n        }\n      });\n      return userRole;\n    }\n  }, {\n    key: \"getNextStudentInQueue\",\n    value: function getNextStudentInQueue() {\n      this.state.queueWebSocketController.getNextStudent();\n    }\n  }, {\n    key: \"getButtonToDisplay\",\n    value: function getButtonToDisplay() {\n      if (this.getRoleForClass() === null) {\n        return null;\n      }\n\n      if (this.isStudent()) {\n        var buttonToDisplay = this.state.inQueue ? __jsx(Button, {\n          onClick: this.removeMeFromQueue.bind(this),\n          style: {\n            width: '50%',\n            fontSize: '1vw'\n          },\n          secondary: true\n        }, \"Leave Queue\") : __jsx(Button, {\n          onClick: this.addMeToQueue.bind(this),\n          style: {\n            width: '50%',\n            fontSize: '1vw'\n          },\n          primary: true\n        }, \"Join Queue\");\n        return __jsx(\"div\", {\n          style: {\n            position: 'absolute',\n            width: 'calc(100% - 38px)',\n            bottom: 14,\n            display: 'inline-flex'\n          }\n        }, buttonToDisplay);\n      }\n\n      return __jsx(\"div\", {\n        style: {\n          position: 'absolute',\n          width: 'calc(100% - 38px)',\n          bottom: 14,\n          display: 'inline-flex'\n        }\n      }, __jsx(Button, {\n        onClick: this.getNextStudentInQueue.bind(this),\n        primary: true\n      }, \"Next\"));\n    }\n  }, {\n    key: \"isStudent\",\n    value: function isStudent() {\n      return this.getRoleForClass() === 'Student';\n    }\n  }, {\n    key: \"getYourTurnModal\",\n    value: function getYourTurnModal() {\n      if (this.isStudent()) {\n        return __jsx(YourTurnModal, {\n          isYourTurn: this.state.isYourTurn\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getTAWaitingModal\",\n    value: function getTAWaitingModal() {\n      if (!this.isStudent()) {\n        return __jsx(TaWaitingModal, {\n          inviteNextStudent: this.state.inviteNextStudent,\n          studentName: this.state.nextStudentName\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"createQueueLabel\",\n    value: function createQueueLabel(student) {\n      return __jsx(QueueLabel, {\n        style: {\n          fontSize: '1.2vw',\n          textAlign: 'center',\n          width: '95%',\n          marginBottom: '2%',\n          minWidth: '41px',\n          marginLeft: '.8%',\n          marginRight: '1%'\n        },\n        key: student\n      }, student);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"Next Student: \".concat(this.state.inviteNextStudent));\n      var queueWebSocketController = this.state.queueWebSocketController;\n\n      if (!queueWebSocketController.hasStarted()) {\n        return null;\n      }\n\n      var queueLabels = this.state.displayStudentsStyle.display == 'none' ? __jsx(React.Fragment, null) : this.state.studentsInQueue.map(this.createQueueLabel);\n      return __jsx(QueueDiv, null, this.getTAWaitingModal(), this.getYourTurnModal(), __jsx(Button.Group, {\n        size: \"huge\",\n        style: {\n          marginBottom: 12,\n          width: '95%'\n        },\n        fluid: true,\n        vertical: true\n      }, __jsx(Button, {\n        compact: true,\n        content: \"Queue\",\n        icon: this.state.iconToDisplay,\n        labelPosition: \"right\",\n        onClick: this.alterStudentDisplay.bind(this),\n        style: {\n          fontSize: '1.5vw',\n          textAlign: 'center',\n          width: '100%',\n          marginBottom: '2%',\n          minWidth: '41px'\n        }\n      })), __jsx(QueueDiv, {\n        style: {\n          width: '100%',\n          marginBottom: '2%',\n          minWidth: '41px'\n        }\n      }, queueLabels), this.getButtonToDisplay());\n    }\n  }]);\n\n  return Queue;\n}(Component);\n\nexport default Queue;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QueueDiv\");\n$RefreshReg$(_c2, \"QueueLabel\");","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/queue/queue.js"],"names":["React","Component","Label","Button","styled","QueueWebSocketController","api","YourTurnModal","TaWaitingModal","QueueDiv","div","QueueLabel","Queue","props","state","displayStudentsStyle","display","iconToDisplay","queueWebSocketController","studentsInQueue","me","classData","inQueue","isYourTurn","inviteNextStudent","nextStudentName","getRoleForClass","bind","courseId","Number","window","location","href","split","start","getMe","then","meData","getClasses","classPayload","setState","isStudentDisplayed","firstName","lastName","fullName","indexOf","addMeToQueue","removeMeFromQueue","userRole","forEach","row","id","role","getNextStudent","isStudent","buttonToDisplay","width","fontSize","position","bottom","getNextStudentInQueue","student","textAlign","marginBottom","minWidth","marginLeft","marginRight","console","log","hasStarted","queueLabels","map","createQueueLabel","getTAWaitingModal","getYourTurnModal","alterStudentDisplay","getButtonToDisplay"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Label, Button } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\nimport QueueWebSocketController from './queuews'\r\nimport * as api from '../../util/mercuryService'\r\nimport YourTurnModal from './yourTurnModal'\r\nimport TaWaitingModal from './taWaitingModal'\r\n\r\nconst QueueDiv = styled.div`\r\n  grid-gap: 2vh;\r\n`\r\n\r\nconst QueueLabel = styled(Label)`\r\n  text-align: center;\r\n`\r\n\r\nclass Queue extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      displayStudentsStyle: { display: 'grid' },\r\n      iconToDisplay: 'caret square down outline',\r\n      queueWebSocketController: new QueueWebSocketController(this),\r\n      studentsInQueue: [],\r\n      me: {},\r\n      classData: [],\r\n      inQueue: false,\r\n      isYourTurn: false,\r\n      inviteNextStudent: false,\r\n      nextStudentName: '',\r\n    }\r\n\r\n    this.getRoleForClass.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.courseId = Number(window.location.href.split('/')[4])\r\n    this.state.queueWebSocketController.start()\r\n\r\n    let me = {}\r\n    let classData = {}\r\n\r\n    api\r\n      .getMe()\r\n      .then((meData) => {\r\n        me = meData\r\n      })\r\n      .then(() => api.getClasses())\r\n      .then((classPayload) => {\r\n        classData = classPayload\r\n      })\r\n      .then(() => this.setState({ me, classData }))\r\n  }\r\n\r\n  isStudentDisplayed() {\r\n    let { display } = this.state.displayStudentsStyle\r\n    return display === 'grid'\r\n  }\r\n\r\n  alterStudentDisplay() {\r\n    let displayStudentsStyle = this.isStudentDisplayed()\r\n      ? { display: 'none' }\r\n      : { display: 'grid' }\r\n\r\n    let iconToDisplay = this.isStudentDisplayed()\r\n      ? 'caret square up outline'\r\n      : 'caret square down outline'\r\n\r\n    this.setState({ displayStudentsStyle, iconToDisplay })\r\n  }\r\n\r\n  addMeToQueue() {\r\n    const { firstName, lastName } = this.state.me\r\n    const fullName = `${firstName} ${lastName}`\r\n\r\n    if (this.state.studentsInQueue.indexOf(fullName) >= 0) {\r\n      return\r\n    }\r\n\r\n    this.state.queueWebSocketController.addMeToQueue()\r\n  }\r\n\r\n  removeMeFromQueue() {\r\n    const { firstName, lastName } = this.state.me\r\n    const fullName = `${firstName} ${lastName}`\r\n\r\n    if (this.state.studentsInQueue.indexOf(fullName) < 0) {\r\n      return\r\n    }\r\n\r\n    this.state.queueWebSocketController.removeMeFromQueue()\r\n  }\r\n\r\n  getRoleForClass() {\r\n    const { classData } = this.state\r\n    let userRole = null\r\n\r\n    classData.forEach((row) => {\r\n      let { id, role } = row\r\n      if (this.courseId === Number(id)) {\r\n        userRole = role\r\n      }\r\n    })\r\n\r\n    return userRole\r\n  }\r\n\r\n  getNextStudentInQueue() {\r\n    this.state.queueWebSocketController.getNextStudent()\r\n  }\r\n\r\n  getButtonToDisplay() {\r\n    if (this.getRoleForClass() === null) {\r\n      return null\r\n    }\r\n\r\n    if (this.isStudent()) {\r\n      const buttonToDisplay = this.state.inQueue ? (\r\n        <Button\r\n          onClick={this.removeMeFromQueue.bind(this)}\r\n          style={{ width: '50%', fontSize: '1vw' }}\r\n          secondary\r\n        >\r\n          Leave Queue\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          onClick={this.addMeToQueue.bind(this)}\r\n          style={{ width: '50%', fontSize: '1vw' }}\r\n          primary\r\n        >\r\n          Join Queue\r\n        </Button>\r\n      )\r\n\r\n      return (\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            width: 'calc(100% - 38px)',\r\n            bottom: 14,\r\n            display: 'inline-flex',\r\n          }}\r\n        >\r\n          {buttonToDisplay}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          width: 'calc(100% - 38px)',\r\n          bottom: 14,\r\n          display: 'inline-flex',\r\n        }}\r\n      >\r\n        <Button onClick={this.getNextStudentInQueue.bind(this)} primary>\r\n          Next\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  isStudent() {\r\n    return this.getRoleForClass() === 'Student'\r\n  }\r\n\r\n  getYourTurnModal() {\r\n    if (this.isStudent()) {\r\n      return <YourTurnModal isYourTurn={this.state.isYourTurn} />\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  getTAWaitingModal() {\r\n    if (!this.isStudent()) {\r\n      return (\r\n        <TaWaitingModal\r\n          inviteNextStudent={this.state.inviteNextStudent}\r\n          studentName={this.state.nextStudentName}\r\n        />\r\n      )\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  createQueueLabel(student) {\r\n    return (\r\n      <QueueLabel\r\n        style={{\r\n          fontSize: '1.2vw',\r\n          textAlign: 'center',\r\n          width: '95%',\r\n          marginBottom: '2%',\r\n          minWidth: '41px',\r\n          marginLeft: '.8%',\r\n          marginRight: '1%',\r\n        }}\r\n        key={student}\r\n      >\r\n        {student}\r\n      </QueueLabel>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    console.log(`Next Student: ${this.state.inviteNextStudent}`)\r\n    const { queueWebSocketController } = this.state\r\n\r\n    if (!queueWebSocketController.hasStarted()) {\r\n      return null\r\n    }\r\n\r\n    const queueLabels =\r\n      this.state.displayStudentsStyle.display == 'none' ? (\r\n        <></>\r\n      ) : (\r\n        this.state.studentsInQueue.map(this.createQueueLabel)\r\n      )\r\n\r\n    return (\r\n      <QueueDiv>\r\n        {this.getTAWaitingModal()}\r\n        {this.getYourTurnModal()}\r\n\r\n        <Button.Group\r\n          size=\"huge\"\r\n          style={{ marginBottom: 12, width: '95%' }}\r\n          fluid\r\n          vertical\r\n        >\r\n          <Button\r\n            compact\r\n            content=\"Queue\"\r\n            icon={this.state.iconToDisplay}\r\n            labelPosition=\"right\"\r\n            onClick={this.alterStudentDisplay.bind(this)}\r\n            style={{\r\n              fontSize: '1.5vw',\r\n              textAlign: 'center',\r\n              width: '100%',\r\n              marginBottom: '2%',\r\n              minWidth: '41px',\r\n            }}\r\n          />\r\n        </Button.Group>\r\n\r\n        <QueueDiv\r\n          style={{ width: '100%', marginBottom: '2%', minWidth: '41px' }}\r\n        >\r\n          {queueLabels}\r\n        </QueueDiv>\r\n\r\n        {this.getButtonToDisplay()}\r\n      </QueueDiv>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Queue\r\n"]},"metadata":{},"sourceType":"module"}