{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Publisher from './publisher';\nimport { EventEmitter } from './util/EventEmitter';\nimport { OTSubscriber, createSession } from 'opentok-react';\nimport { Button } from 'semantic-ui-react';\nimport GroupLeaderModal from './groupLeaderModal';\n\nvar ScreenContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(ScreenContainer, _React$Component);\n\n  var _super = _createSuper(ScreenContainer);\n\n  function ScreenContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ScreenContainer);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePublish\", function () {\n      console.log('Successfully published!');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubscribe\", function () {\n      console.log('Subscribed!');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSessionError\", function (error) {\n      console.error(error);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePublishError\", function (error) {\n      console.error(error);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubscribeError\", function (error) {\n      console.error(error);\n    });\n\n    _this.state = {\n      user: _this.props.user,\n      currGroup: _this.props.currGroup,\n      ssButton: true,\n      streams: [],\n      focusStream: {},\n      videoButton: true,\n      expand: false\n    };\n\n    _this.defineEventEmitterCallbacks();\n\n    _this.sessionEventHandlers = {\n      sessionConnected: function sessionConnected() {},\n      sessionDisconnected: function sessionDisconnected() {},\n      sessionReconnected: function sessionReconnected() {},\n      sessionReconnecting: function sessionReconnecting() {}\n    };\n    _this.publishEventHandlers = {\n      accessDenied: function accessDenied() {},\n      streamCreated: function streamCreated() {},\n      streamDestroyed: function streamDestroyed() {}\n    };\n    _this.subscribeEventHandlers = {\n      videoEnabled: function videoEnabled() {},\n      videoDisabled: function videoDisabled() {}\n    };\n    return _this;\n  }\n\n  _createClass(ScreenContainer, [{\n    key: \"defineEventEmitterCallbacks\",\n    value: function defineEventEmitterCallbacks() {\n      var _this2 = this;\n\n      EventEmitter.subscribe('disableVideoButton', function () {\n        _this2.setState({\n          videoButton: false\n        });\n      });\n      EventEmitter.subscribe('enableVideoButton', function () {\n        _this2.setState({\n          videoButton: true\n        });\n      });\n    }\n  }, {\n    key: \"getStreamToDisplay\",\n    value: function getStreamToDisplay() {\n      return this.state.expand === true ? __jsx(OTSubscriber, {\n        key: this.state.focusStream.id,\n        session: this.sessionHelper.session,\n        stream: this.state.focusStream,\n        properties: {\n          maxWidth: '75vw',\n          maxHeight: '75vh',\n          height: '85vh',\n          width: '48vw'\n        },\n        onSubscribe: this.handleSubscribe,\n        onError: this.handleSubscribeError\n      }) : null;\n    }\n  }, {\n    key: \"screenShareButton\",\n    value: function screenShareButton() {\n      var _this3 = this;\n\n      return this.state.ssButton === true ? __jsx(Button, {\n        onClick: function onClick() {\n          EventEmitter.publish('startScreenShare');\n\n          _this3.setState({\n            ssButton: false\n          });\n        },\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        icon: \"tv\",\n        content: \"Share Screen\"\n      }) : __jsx(Button, {\n        onClick: function onClick() {\n          EventEmitter.publish('stopScreenShare');\n\n          _this3.setState({\n            ssButton: true\n          });\n        },\n        icon: \"tv\",\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Stop Screen Share\"\n      });\n    }\n  }, {\n    key: \"videoStateButton\",\n    value: function videoStateButton() {\n      return this.state.videoButton === true ? __jsx(Button, {\n        onClick: function onClick() {\n          EventEmitter.publish('disableVideo');\n        },\n        icon: \"hide\",\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Disable video\"\n      }) : __jsx(Button, {\n        onClick: function onClick() {\n          EventEmitter.publish('enableVideo');\n        },\n        icon: \"eye\",\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Enable video\"\n      });\n    }\n  }, {\n    key: \"unexpandButton\",\n    value: function unexpandButton() {\n      var _this4 = this;\n\n      return this.state.expand === true ? __jsx(Button, {\n        onClick: function onClick() {\n          _this4.setState({\n            expand: false\n          });\n\n          console.log('ore');\n        },\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Unexpand video\"\n      }) : null;\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this5 = this;\n\n      var _this$props = this.props,\n          sessionId = _this$props.sessionId,\n          token = _this$props.token;\n      this.sessionHelper = createSession({\n        apiKey: \"\".concat(process.env.NEXT_PUBLIC_VV_API_KEY),\n        sessionId: \"\".concat(sessionId),\n        token: \"\".concat(token),\n        onStreamsUpdated: function onStreamsUpdated(streams) {\n          _this5.setState({\n            streams: streams\n          });\n        }\n      });\n    }\n  }, {\n    key: \"appointLeaderButton\",\n    value: function appointLeaderButton() {\n      var _this6 = this;\n\n      /**\r\n       * If this is for a private group and you are the leader, show the appoint new leader button\r\n       */\n      if (this.state.currGroup.type === 'group' && this.state.user.id === this.state.currGroup.UserId) {\n        return __jsx(Button, {\n          onClick: function onClick() {\n            return EventEmitter.publish('startLeaderAppointmentProcess', {\n              currGroupId: _this6.state.currGroup.id,\n              userId: _this6.state.user.id // the current leader\n\n            });\n          },\n          icon: \"chess king\",\n          style: {\n            fontSize: '.8vw',\n            display: 'inline-flex'\n          },\n          content: \"Appoint Leader\"\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.sessionHelper.disconnect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var onLeave = this.props.onLeave;\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        style: {\n          display: 'inline-flex',\n          width: '100%',\n          maxHeight: '86vh'\n        }\n      }, __jsx(\"div\", {\n        style: {\n          width: '78%',\n          maxHeight: '85vh',\n          overflow: 'auto'\n        }\n      }, this.getStreamToDisplay()), __jsx(\"div\", {\n        style: {\n          width: '22%',\n          maxHeight: '85vh',\n          overflow: 'auto',\n          height: '1000px'\n        }\n      }, __jsx(Publisher, {\n        style: {\n          width: '13.57vw',\n          maxWidth: '13.57vw',\n          marginBottom: '5px'\n        },\n        session: this.sessionHelper.session,\n        name: this.props.name\n      }), this.state.streams.map(function (stream) {\n        return __jsx(React.Fragment, null, __jsx(Button, {\n          onClick: function onClick() {\n            _this7.setState({\n              focusStream: stream\n            });\n\n            _this7.setState({\n              expand: true\n            });\n          },\n          style: {\n            padding: '0px',\n            width: '100%',\n            maxHeight: '18vh',\n            margin: '0px'\n          }\n        }, __jsx(OTSubscriber, {\n          key: stream.id,\n          session: _this7.sessionHelper.session,\n          stream: stream,\n          properties: {\n            width: '100%',\n            height: '18vh',\n            maxHeight: '18vh',\n            margin: '0px'\n          },\n          onSubscribe: _this7.handleSubscribe,\n          onError: _this7.handleSubscribeError\n        })));\n      }))), this.videoStateButton(), this.unexpandButton(), this.screenShareButton(), this.appointLeaderButton(), __jsx(Button, {\n        onClick: onLeave,\n        color: \"red\",\n        icon: \"close\",\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Leave call\"\n      }), __jsx(GroupLeaderModal, {\n        props: this.state.currGroup\n      }));\n    }\n  }]);\n\n  return ScreenContainer;\n}(React.Component);\n\nScreenContainer.propTypes = {\n  sessionId: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  onLeave: PropTypes.func.isRequired\n};\nexport default ScreenContainer;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/screenContainer.js"],"names":["React","PropTypes","Publisher","EventEmitter","OTSubscriber","createSession","Button","GroupLeaderModal","ScreenContainer","props","console","log","error","state","user","currGroup","ssButton","streams","focusStream","videoButton","expand","defineEventEmitterCallbacks","sessionEventHandlers","sessionConnected","sessionDisconnected","sessionReconnected","sessionReconnecting","publishEventHandlers","accessDenied","streamCreated","streamDestroyed","subscribeEventHandlers","videoEnabled","videoDisabled","subscribe","setState","id","sessionHelper","session","maxWidth","maxHeight","height","width","handleSubscribe","handleSubscribeError","publish","fontSize","display","sessionId","token","apiKey","process","env","NEXT_PUBLIC_VV_API_KEY","onStreamsUpdated","type","UserId","currGroupId","userId","disconnect","onLeave","overflow","getStreamToDisplay","marginBottom","name","map","stream","padding","margin","videoStateButton","unexpandButton","screenShareButton","appointLeaderButton","Component","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Publisher from './publisher'\r\nimport { EventEmitter } from './util/EventEmitter'\r\nimport { OTSubscriber, createSession } from 'opentok-react'\r\nimport { Button } from 'semantic-ui-react'\r\nimport GroupLeaderModal from './groupLeaderModal'\r\n\r\nclass ScreenContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      user: this.props.user,\r\n      currGroup: this.props.currGroup,\r\n      ssButton: true,\r\n      streams: [],\r\n      focusStream: {},\r\n      videoButton: true,\r\n      expand: false,\r\n    }\r\n\r\n    this.defineEventEmitterCallbacks()\r\n\r\n    this.sessionEventHandlers = {\r\n      sessionConnected: () => {},\r\n      sessionDisconnected: () => {},\r\n      sessionReconnected: () => {},\r\n      sessionReconnecting: () => {},\r\n    }\r\n\r\n    this.publishEventHandlers = {\r\n      accessDenied: () => {},\r\n      streamCreated: () => {},\r\n      streamDestroyed: () => {},\r\n    }\r\n\r\n    this.subscribeEventHandlers = {\r\n      videoEnabled: () => {},\r\n      videoDisabled: () => {},\r\n    }\r\n  }\r\n\r\n  handlePublish = () => {\r\n    console.log('Successfully published!')\r\n  }\r\n\r\n  handleSubscribe = () => {\r\n    console.log('Subscribed!')\r\n  }\r\n\r\n  handleSessionError = (error) => {\r\n    console.error(error)\r\n  }\r\n\r\n  handlePublishError = (error) => {\r\n    console.error(error)\r\n  }\r\n\r\n  handleSubscribeError = (error) => {\r\n    console.error(error)\r\n  }\r\n\r\n  defineEventEmitterCallbacks() {\r\n    EventEmitter.subscribe('disableVideoButton', () => {\r\n      this.setState({ videoButton: false })\r\n    })\r\n    EventEmitter.subscribe('enableVideoButton', () => {\r\n      this.setState({ videoButton: true })\r\n    })\r\n  }\r\n\r\n  getStreamToDisplay() {\r\n    return this.state.expand === true ? (\r\n      <OTSubscriber\r\n        key={this.state.focusStream.id}\r\n        session={this.sessionHelper.session}\r\n        stream={this.state.focusStream}\r\n        properties={{\r\n          maxWidth: '75vw',\r\n          maxHeight: '75vh',\r\n          height: '85vh',\r\n          width: '48vw',\r\n        }}\r\n        onSubscribe={this.handleSubscribe}\r\n        onError={this.handleSubscribeError}\r\n      />\r\n    ) : null\r\n  }\r\n\r\n  screenShareButton() {\r\n    return this.state.ssButton === true ? (\r\n      <Button\r\n        onClick={() => {\r\n          EventEmitter.publish('startScreenShare')\r\n          this.setState({ ssButton: false })\r\n        }}\r\n        style={{ fontSize: '.8vw', display: 'inline-flex' }}\r\n        icon=\"tv\"\r\n        content=\"Share Screen\"\r\n      />\r\n    ) : (\r\n      <Button\r\n        onClick={() => {\r\n          EventEmitter.publish('stopScreenShare')\r\n          this.setState({ ssButton: true })\r\n        }}\r\n        icon=\"tv\"\r\n        style={{ fontSize: '.8vw', display: 'inline-flex' }}\r\n        content=\"Stop Screen Share\"\r\n      />\r\n    )\r\n  }\r\n\r\n  videoStateButton() {\r\n    return this.state.videoButton === true ? (\r\n      <Button\r\n        onClick={() => {\r\n          EventEmitter.publish('disableVideo')\r\n        }}\r\n        icon=\"hide\"\r\n        style={{ fontSize: '.8vw', display: 'inline-flex' }}\r\n        content=\"Disable video\"\r\n      />\r\n    ) : (\r\n      <Button\r\n        onClick={() => {\r\n          EventEmitter.publish('enableVideo')\r\n        }}\r\n        icon=\"eye\"\r\n        style={{ fontSize: '.8vw', display: 'inline-flex' }}\r\n        content=\"Enable video\"\r\n      />\r\n    )\r\n  }\r\n\r\n  unexpandButton() {\r\n    return this.state.expand === true ? (\r\n      <Button\r\n        onClick={() => {\r\n          this.setState({ expand: false })\r\n          console.log('ore')\r\n        }}\r\n        style={{ fontSize: '.8vw', display: 'inline-flex' }}\r\n        content=\"Unexpand video\"\r\n      />\r\n    ) : null\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { sessionId, token } = this.props\r\n    this.sessionHelper = createSession({\r\n      apiKey: `${process.env.NEXT_PUBLIC_VV_API_KEY}`,\r\n      sessionId: `${sessionId}`,\r\n      token: `${token}`,\r\n      onStreamsUpdated: (streams) => {\r\n        this.setState({ streams })\r\n      },\r\n    })\r\n  }\r\n\r\n  appointLeaderButton() {\r\n    /**\r\n     * If this is for a private group and you are the leader, show the appoint new leader button\r\n     */\r\n\r\n    if (\r\n      this.state.currGroup.type === 'group' &&\r\n      this.state.user.id === this.state.currGroup.UserId\r\n    ) {\r\n      return (\r\n        <Button\r\n          onClick={() =>\r\n            EventEmitter.publish('startLeaderAppointmentProcess', {\r\n              currGroupId: this.state.currGroup.id,\r\n              userId: this.state.user.id, // the current leader\r\n            })\r\n          }\r\n          icon=\"chess king\"\r\n          style={{ fontSize: '.8vw', display: 'inline-flex' }}\r\n          content=\"Appoint Leader\"\r\n        />\r\n      )\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.sessionHelper.disconnect()\r\n  }\r\n\r\n  render() {\r\n    const { onLeave } = this.props\r\n    return (\r\n      <>\r\n        <div\r\n          style={{ display: 'inline-flex', width: '100%', maxHeight: '86vh' }}\r\n        >\r\n          <div style={{ width: '78%', maxHeight: '85vh', overflow: 'auto' }}>\r\n            {this.getStreamToDisplay()}\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: '22%',\r\n              maxHeight: '85vh',\r\n              overflow: 'auto',\r\n              height: '1000px',\r\n            }}\r\n          >\r\n            <Publisher\r\n              style={{\r\n                width: '13.57vw',\r\n                maxWidth: '13.57vw',\r\n                marginBottom: '5px',\r\n              }}\r\n              session={this.sessionHelper.session}\r\n              name = {this.props.name}\r\n            />\r\n            {this.state.streams.map((stream) => (\r\n              <>\r\n                <Button\r\n                  onClick={() => {\r\n                    this.setState({ focusStream: stream })\r\n                    this.setState({ expand: true })\r\n                  }}\r\n                  style={{\r\n                    padding: '0px',\r\n                    width: '100%',\r\n                    maxHeight: '18vh',\r\n                    margin: '0px',\r\n                  }}\r\n                >\r\n                  <OTSubscriber\r\n                    key={stream.id}\r\n                    session={this.sessionHelper.session}\r\n                    stream={stream}\r\n                    properties={{\r\n                      width: '100%',\r\n                      height: '18vh',\r\n                      maxHeight: '18vh',\r\n                      margin: '0px',\r\n                    }}\r\n                    onSubscribe={this.handleSubscribe}\r\n                    onError={this.handleSubscribeError}\r\n                  />\r\n                </Button>\r\n              </>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {this.videoStateButton()}\r\n        {this.unexpandButton()}\r\n        {this.screenShareButton()}\r\n        {this.appointLeaderButton()}\r\n        <Button\r\n          onClick={onLeave}\r\n          color=\"red\"\r\n          icon=\"close\"\r\n          style={{ fontSize: '.8vw', display: 'inline-flex' }}\r\n          content=\"Leave call\"\r\n        />\r\n        <GroupLeaderModal props={this.state.currGroup} />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nScreenContainer.propTypes = {\r\n  sessionId: PropTypes.string.isRequired,\r\n  token: PropTypes.string.isRequired,\r\n  onLeave: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ScreenContainer\r\n"]},"metadata":{},"sourceType":"module"}