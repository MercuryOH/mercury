{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Modal, Button, Header, Icon } from 'semantic-ui-react';\nimport FormHTMLEditor from './FormHTMLEditor';\nimport StarRatings from 'react-star-ratings';\nimport stripHtml from 'string-strip-html';\nimport * as api from '../util/mercuryService';\nimport { EventEmitter } from './util/EventEmitter';\nexport default class FeedbackModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalState: false,\n      rating: 0,\n      comment: '',\n      classId: -1\n    };\n    EventEmitter.subscribe('activateFeedbackModal', classId => {\n      this.setState({\n        classId,\n        modalState: true\n      });\n    });\n  }\n\n  changeRating(newRating, _name) {\n    this.setState({\n      rating: newRating\n    });\n  }\n\n  changeComment(comment) {\n    const newComment = stripHtml(comment);\n    this.setState({\n      comment: newComment\n    });\n  }\n\n  async submit() {\n    const {\n      classId,\n      rating,\n      comment\n    } = this.state;\n    await api.submitFeedback(classId, rating, comment);\n    this.setState({\n      modalState: false\n    });\n  }\n\n  render() {\n    const {\n      rating,\n      modalState,\n      comment\n    } = this.state;\n    return __jsx(\"div\", null, __jsx(Modal, {\n      style: {\n        borderless: 'true',\n        width: '40%',\n        height: '80%'\n      },\n      open: modalState,\n      onClose: () => this.setState({\n        modalState: false\n      }),\n      closeOnDimmerClick: false,\n      closeOnEscape: false\n    }, __jsx(Modal.Content, {\n      style: {\n        borderless: 'true'\n      }\n    }, __jsx(Modal.Header, null, __jsx(Icon, {\n      onClick: () => this.setState({\n        modalState: false\n      }),\n      style: {\n        float: 'right',\n        cursor: 'pointer'\n      },\n      name: \"times\"\n    })), __jsx(Header, null, \"Rate Your Call\"), __jsx(StarRatings, {\n      rating: rating,\n      starRatedColor: \"blue\",\n      changeRating: this.changeRating.bind(this),\n      numberOfStars: 5,\n      name: \"rating\"\n    }), __jsx(\"br\", null), __jsx(Header, null, \"Provide Your Comments\"), __jsx(FormHTMLEditor, {\n      onChange: this.changeComment.bind(this),\n      defaultValue: comment\n    }), __jsx(\"br\", null), __jsx(Button, {\n      onClick: this.submit.bind(this)\n    }, \"Submit\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/feedbackModal.js"],"names":["React","Component","Modal","Button","Header","Icon","FormHTMLEditor","StarRatings","stripHtml","api","EventEmitter","FeedbackModal","constructor","props","state","modalState","rating","comment","classId","subscribe","setState","changeRating","newRating","_name","changeComment","newComment","submit","submitFeedback","render","borderless","width","height","float","cursor","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Modal, Button, Header, Icon } from 'semantic-ui-react'\r\nimport FormHTMLEditor from './FormHTMLEditor'\r\nimport StarRatings from 'react-star-ratings'\r\nimport stripHtml from 'string-strip-html'\r\nimport * as api from '../util/mercuryService'\r\nimport { EventEmitter } from './util/EventEmitter'\r\n\r\nexport default class FeedbackModal extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      modalState: false,\r\n      rating: 0,\r\n      comment: '',\r\n      classId: -1,\r\n    }\r\n\r\n    EventEmitter.subscribe('activateFeedbackModal', (classId) => {\r\n      this.setState({ classId, modalState: true })\r\n    })\r\n  }\r\n\r\n  changeRating(newRating, _name) {\r\n    this.setState({\r\n      rating: newRating,\r\n    })\r\n  }\r\n\r\n  changeComment(comment) {\r\n    const newComment = stripHtml(comment)\r\n    this.setState({ comment: newComment })\r\n  }\r\n\r\n  async submit() {\r\n    const { classId, rating, comment } = this.state\r\n    await api.submitFeedback(classId, rating, comment)\r\n    this.setState({ modalState: false })\r\n  }\r\n\r\n  render() {\r\n    const { rating, modalState, comment } = this.state\r\n\r\n    return (\r\n      <div>\r\n        <Modal\r\n          style={{ borderless: 'true', width: '40%', height: '80%' }}\r\n          open={modalState}\r\n          onClose={() => this.setState({ modalState: false })}\r\n          closeOnDimmerClick={false}\r\n          closeOnEscape={false}\r\n        >\r\n          <Modal.Content style={{ borderless: 'true' }}>\r\n            <Modal.Header>\r\n              <Icon\r\n                onClick={() => this.setState({ modalState: false })}\r\n                style={{ float: 'right', cursor: 'pointer' }}\r\n                name=\"times\"\r\n              ></Icon>\r\n            </Modal.Header>\r\n\r\n            <Header>Rate Your Call</Header>\r\n            <StarRatings\r\n              rating={rating}\r\n              starRatedColor=\"blue\"\r\n              changeRating={this.changeRating.bind(this)}\r\n              numberOfStars={5}\r\n              name=\"rating\"\r\n            />\r\n\r\n            <br />\r\n\r\n            <Header>Provide Your Comments</Header>\r\n\r\n            <FormHTMLEditor\r\n              onChange={this.changeComment.bind(this)}\r\n              defaultValue={comment}\r\n            />\r\n            <br />\r\n\r\n            <Button onClick={this.submit.bind(this)}>Submit</Button>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}