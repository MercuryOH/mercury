{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Label, Button } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport TaWaitingModal from './taWaitingModal';\nimport TAWebSocketController from './taWebSocket';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport { EventEmitter } from '../../util/EventEmitter';\nconst QueueDiv = styled.div.withConfig({\n  displayName: \"taQueueView__QueueDiv\",\n  componentId: \"bjnqi0-0\"\n})([\"grid-gap:2vh;\"]);\nconst QueueLabel = styled(Label).withConfig({\n  displayName: \"taQueueView__QueueLabel\",\n  componentId: \"bjnqi0-1\"\n})([\"text-align:center;\"]);\nexport default class TAQueueView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayStudentsStyle: {\n        display: 'grid'\n      },\n      iconToDisplay: 'caret square down outline',\n      queueWebSocketController: new TAWebSocketController(),\n      studentsInQueue: [],\n      me: this.props.me,\n      nextStudentName: '',\n      currStudentBeingHelped: '',\n      isReadyToRender: false,\n      inCallWithStudent: false\n    };\n    this.defineEventEmitterCallbacks();\n  }\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('activateTAWaitingModal', nextStudentName => {\n      this.setState({\n        nextStudentName\n      });\n      EventEmitter.publish('newTAWaitingModalProps', {\n        inviteNextStudent: true,\n        nextStudentName\n      });\n    });\n    EventEmitter.subscribe('removeTAWaitingModalOnTimeout', () => {\n      const {\n        nextStudentName\n      } = this.state;\n      this.createTimeoutNotification(nextStudentName);\n      this.setState({\n        currStudentBeingHelped: '',\n        nextStudentName: ''\n      });\n      EventEmitter.publish('newTAWaitingModalProps', {\n        inviteNextStudent: false,\n        nextStudentName: ''\n      });\n    });\n    EventEmitter.subscribe('removeTAWaitingModalOnAccept', () => {\n      this.setState({\n        nextStudentName: '',\n        inCallWithStudent: true\n      });\n      EventEmitter.publish('newTAWaitingModalProps', {\n        inviteNextStudent: false,\n        nextStudentName: ''\n      });\n    });\n    EventEmitter.subscribe('removeTAWaitingModalOnDecline', () => {\n      const {\n        nextStudentName\n      } = this.state;\n      this.createDeclineNotification(nextStudentName);\n      this.setState({\n        currStudentBeingHelped: '',\n        nextStudentName: ''\n      });\n      EventEmitter.publish('newTAWaitingModalProps', {\n        inviteNextStudent: false,\n        nextStudentName: ''\n      });\n    });\n    EventEmitter.subscribe('callOver', classId => {\n      const {\n        queueWebSocketController,\n        inCallWithStudent\n      } = this.state;\n\n      if (inCallWithStudent) {\n        queueWebSocketController.signalCallOver();\n        EventEmitter.publish('activateFeedbackModal', classId);\n        this.setState({\n          inCallWithStudent: false,\n          currStudentBeingHelped: ''\n        });\n      }\n    });\n    EventEmitter.subscribe('updateStudentsInQueue', msg => {\n      this.setState({\n        studentsInQueue: msg.map(({\n          fullName\n        }) => fullName)\n      });\n    });\n    EventEmitter.subscribe('updateCurrStudent', currStudentBeingHelped => {\n      this.setState({\n        currStudentBeingHelped\n      });\n    });\n    EventEmitter.subscribe('initializeQueueOnGreeting', ({\n      currStudent,\n      studentsInQueue\n    }) => {\n      const myId = this.state.me.id;\n      const inQueue = studentsInQueue.filter(({\n        id\n      }) => id === myId).length > 0;\n      this.setState({\n        currStudentBeingHelped: currStudent,\n        studentsInQueue: studentsInQueue.map(({\n          fullName\n        }) => fullName),\n        inQueue\n      });\n    });\n  }\n\n  createTimeoutNotification(studentName) {\n    NotificationManager.info(`${studentName}'s Invitation Has Expired`);\n  }\n\n  createDeclineNotification(studentName) {\n    NotificationManager.info(`${studentName} Has Declined The Call`);\n  }\n\n  componentDidMount() {\n    const courseId = Number(window.location.href.split('/')[4]);\n    const onJoin = this.props.onJoin;\n    const {\n      queueWebSocketController,\n      me\n    } = this.state;\n    queueWebSocketController.start({\n      me,\n      courseId,\n      onJoin\n    });\n    this.setState({\n      isReadyToRender: true\n    });\n  }\n\n  isStudentDisplayed() {\n    let {\n      display\n    } = this.state.displayStudentsStyle;\n    return display === 'grid';\n  }\n\n  alterStudentDisplay() {\n    let displayStudentsStyle = this.isStudentDisplayed() ? {\n      display: 'none'\n    } : {\n      display: 'grid'\n    };\n    let iconToDisplay = this.isStudentDisplayed() ? 'caret square up outline' : 'caret square down outline';\n    this.setState({\n      displayStudentsStyle,\n      iconToDisplay\n    });\n  }\n\n  getNextStudentInQueue() {\n    this.state.queueWebSocketController.getNextStudent();\n  }\n\n  getButtonToDisplay() {\n    if (this.state.inCallWithStudent) {\n      return null;\n    }\n\n    return __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14,\n        display: 'inline-flex'\n      }\n    }, __jsx(Button, {\n      style: {\n        width: '100%',\n        fontSize: '1vw'\n      },\n      onClick: this.getNextStudentInQueue.bind(this),\n      primary: true\n    }, \"Next\"));\n  }\n\n  createCurrStudentLabel() {\n    const {\n      currStudentBeingHelped\n    } = this.state;\n\n    if (currStudentBeingHelped.length == 0) {\n      return null;\n    }\n\n    return __jsx(QueueLabel, {\n      style: {\n        fontSize: '1.2vw',\n        textAlign: 'center',\n        width: '95%',\n        marginBottom: '2%',\n        minWidth: '41px',\n        marginLeft: '.8%',\n        backgroundColor: 'red',\n        marginRight: '1%'\n      },\n      key: currStudentBeingHelped\n    }, currStudentBeingHelped);\n  }\n\n  createQueueLabel(student) {\n    return __jsx(QueueLabel, {\n      style: {\n        fontSize: '1.2vw',\n        textAlign: 'center',\n        width: '95%',\n        marginBottom: '2%',\n        minWidth: '41px',\n        marginLeft: '.8%',\n        marginRight: '1%'\n      },\n      key: student\n    }, student);\n  }\n\n  render() {\n    const {\n      isReadyToRender\n    } = this.state;\n\n    if (!isReadyToRender) {\n      return null;\n    }\n\n    const queueLabels = this.state.displayStudentsStyle.display == 'none' ? __jsx(React.Fragment, null) : this.state.studentsInQueue.map(this.createQueueLabel);\n    return __jsx(QueueDiv, null, __jsx(TaWaitingModal, null), __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 12,\n        width: '95%'\n      },\n      fluid: true,\n      vertical: true\n    }, __jsx(Button, {\n      compact: true,\n      content: \"Queue\",\n      icon: this.state.iconToDisplay,\n      labelPosition: \"right\",\n      onClick: this.alterStudentDisplay.bind(this),\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'center',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      }\n    })), this.createCurrStudentLabel(), __jsx(QueueDiv, {\n      style: {\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      }\n    }, queueLabels), this.getButtonToDisplay(), __jsx(NotificationContainer, null));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/queue/ta/taQueueView.js"],"names":["React","Component","Label","Button","styled","TaWaitingModal","TAWebSocketController","NotificationContainer","NotificationManager","EventEmitter","QueueDiv","div","QueueLabel","TAQueueView","constructor","props","state","displayStudentsStyle","display","iconToDisplay","queueWebSocketController","studentsInQueue","me","nextStudentName","currStudentBeingHelped","isReadyToRender","inCallWithStudent","defineEventEmitterCallbacks","subscribe","setState","publish","inviteNextStudent","createTimeoutNotification","createDeclineNotification","classId","signalCallOver","msg","map","fullName","currStudent","myId","id","inQueue","filter","length","studentName","info","componentDidMount","courseId","Number","window","location","href","split","onJoin","start","isStudentDisplayed","alterStudentDisplay","getNextStudentInQueue","getNextStudent","getButtonToDisplay","position","width","bottom","fontSize","bind","createCurrStudentLabel","textAlign","marginBottom","minWidth","marginLeft","backgroundColor","marginRight","createQueueLabel","student","render","queueLabels"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Label, Button } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\nimport TaWaitingModal from './taWaitingModal'\r\nimport TAWebSocketController from './taWebSocket'\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications'\r\nimport { EventEmitter } from '../../util/EventEmitter'\r\n\r\nconst QueueDiv = styled.div`\r\n  grid-gap: 2vh;\r\n`\r\n\r\nconst QueueLabel = styled(Label)`\r\n  text-align: center;\r\n`\r\n\r\nexport default class TAQueueView extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      displayStudentsStyle: { display: 'grid' },\r\n      iconToDisplay: 'caret square down outline',\r\n      queueWebSocketController: new TAWebSocketController(),\r\n      studentsInQueue: [],\r\n      me: this.props.me,\r\n      nextStudentName: '',\r\n      currStudentBeingHelped: '',\r\n      isReadyToRender: false,\r\n      inCallWithStudent: false,\r\n    }\r\n\r\n    this.defineEventEmitterCallbacks()\r\n  }\r\n\r\n  defineEventEmitterCallbacks() {\r\n    EventEmitter.subscribe('activateTAWaitingModal', (nextStudentName) => {\r\n      this.setState({ nextStudentName })\r\n\r\n      EventEmitter.publish('newTAWaitingModalProps', {\r\n        inviteNextStudent: true,\r\n        nextStudentName,\r\n      })\r\n    })\r\n\r\n    EventEmitter.subscribe('removeTAWaitingModalOnTimeout', () => {\r\n      const { nextStudentName } = this.state\r\n      this.createTimeoutNotification(nextStudentName)\r\n      this.setState({ currStudentBeingHelped: '', nextStudentName: '' })\r\n\r\n      EventEmitter.publish('newTAWaitingModalProps', {\r\n        inviteNextStudent: false,\r\n        nextStudentName: '',\r\n      })\r\n    })\r\n\r\n    EventEmitter.subscribe('removeTAWaitingModalOnAccept', () => {\r\n      this.setState({ nextStudentName: '', inCallWithStudent: true })\r\n\r\n      EventEmitter.publish('newTAWaitingModalProps', {\r\n        inviteNextStudent: false,\r\n        nextStudentName: '',\r\n      })\r\n    })\r\n\r\n    EventEmitter.subscribe('removeTAWaitingModalOnDecline', () => {\r\n      const { nextStudentName } = this.state\r\n      this.createDeclineNotification(nextStudentName)\r\n      this.setState({ currStudentBeingHelped: '', nextStudentName: '' })\r\n\r\n      EventEmitter.publish('newTAWaitingModalProps', {\r\n        inviteNextStudent: false,\r\n        nextStudentName: '',\r\n      })\r\n    })\r\n\r\n    EventEmitter.subscribe('callOver', (classId) => {\r\n      const { queueWebSocketController, inCallWithStudent } = this.state\r\n      if (inCallWithStudent) {\r\n        queueWebSocketController.signalCallOver()\r\n        EventEmitter.publish('activateFeedbackModal', classId)\r\n        this.setState({ inCallWithStudent: false, currStudentBeingHelped: '' })\r\n      }\r\n    })\r\n\r\n    EventEmitter.subscribe('updateStudentsInQueue', (msg) => {\r\n      this.setState({ studentsInQueue: msg.map(({ fullName }) => fullName) })\r\n    })\r\n\r\n    EventEmitter.subscribe('updateCurrStudent', (currStudentBeingHelped) => {\r\n      this.setState({ currStudentBeingHelped })\r\n    })\r\n\r\n    EventEmitter.subscribe(\r\n      'initializeQueueOnGreeting',\r\n      ({ currStudent, studentsInQueue }) => {\r\n        const myId = this.state.me.id\r\n        const inQueue =\r\n          studentsInQueue.filter(({ id }) => id === myId).length > 0\r\n        this.setState({\r\n          currStudentBeingHelped: currStudent,\r\n          studentsInQueue: studentsInQueue.map(({ fullName }) => fullName),\r\n          inQueue,\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  createTimeoutNotification(studentName) {\r\n    NotificationManager.info(`${studentName}'s Invitation Has Expired`)\r\n  }\r\n\r\n  createDeclineNotification(studentName) {\r\n    NotificationManager.info(`${studentName} Has Declined The Call`)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const courseId = Number(window.location.href.split('/')[4])\r\n    const onJoin = this.props.onJoin\r\n    const { queueWebSocketController, me } = this.state\r\n    queueWebSocketController.start({ me, courseId, onJoin })\r\n    this.setState({ isReadyToRender: true })\r\n  }\r\n\r\n  isStudentDisplayed() {\r\n    let { display } = this.state.displayStudentsStyle\r\n    return display === 'grid'\r\n  }\r\n\r\n  alterStudentDisplay() {\r\n    let displayStudentsStyle = this.isStudentDisplayed()\r\n      ? { display: 'none' }\r\n      : { display: 'grid' }\r\n\r\n    let iconToDisplay = this.isStudentDisplayed()\r\n      ? 'caret square up outline'\r\n      : 'caret square down outline'\r\n\r\n    this.setState({ displayStudentsStyle, iconToDisplay })\r\n  }\r\n\r\n  getNextStudentInQueue() {\r\n    this.state.queueWebSocketController.getNextStudent()\r\n  }\r\n\r\n  getButtonToDisplay() {\r\n    if (this.state.inCallWithStudent) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          width: 'calc(100% - 38px)',\r\n          bottom: 14,\r\n          display: 'inline-flex',\r\n        }}\r\n      >\r\n        <Button\r\n          style={{ width: '100%', fontSize: '1vw' }}\r\n          onClick={this.getNextStudentInQueue.bind(this)}\r\n          primary\r\n        >\r\n          Next\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  createCurrStudentLabel() {\r\n    const { currStudentBeingHelped } = this.state\r\n\r\n    if (currStudentBeingHelped.length == 0) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <QueueLabel\r\n        style={{\r\n          fontSize: '1.2vw',\r\n          textAlign: 'center',\r\n          width: '95%',\r\n          marginBottom: '2%',\r\n          minWidth: '41px',\r\n          marginLeft: '.8%',\r\n          backgroundColor: 'red',\r\n          marginRight: '1%',\r\n        }}\r\n        key={currStudentBeingHelped}\r\n      >\r\n        {currStudentBeingHelped}\r\n      </QueueLabel>\r\n    )\r\n  }\r\n\r\n  createQueueLabel(student) {\r\n    return (\r\n      <QueueLabel\r\n        style={{\r\n          fontSize: '1.2vw',\r\n          textAlign: 'center',\r\n          width: '95%',\r\n          marginBottom: '2%',\r\n          minWidth: '41px',\r\n          marginLeft: '.8%',\r\n          marginRight: '1%',\r\n        }}\r\n        key={student}\r\n      >\r\n        {student}\r\n      </QueueLabel>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { isReadyToRender } = this.state\r\n\r\n    if (!isReadyToRender) {\r\n      return null\r\n    }\r\n\r\n    const queueLabels =\r\n      this.state.displayStudentsStyle.display == 'none' ? (\r\n        <></>\r\n      ) : (\r\n        this.state.studentsInQueue.map(this.createQueueLabel)\r\n      )\r\n\r\n    return (\r\n      <QueueDiv>\r\n        <TaWaitingModal />\r\n\r\n        <Button.Group\r\n          size=\"huge\"\r\n          style={{ marginBottom: 12, width: '95%' }}\r\n          fluid\r\n          vertical\r\n        >\r\n          <Button\r\n            compact\r\n            content=\"Queue\"\r\n            icon={this.state.iconToDisplay}\r\n            labelPosition=\"right\"\r\n            onClick={this.alterStudentDisplay.bind(this)}\r\n            style={{\r\n              fontSize: '1.5vw',\r\n              textAlign: 'center',\r\n              width: '100%',\r\n              marginBottom: '2%',\r\n              minWidth: '41px',\r\n            }}\r\n          />\r\n        </Button.Group>\r\n\r\n        {this.createCurrStudentLabel()}\r\n\r\n        <QueueDiv\r\n          style={{ width: '100%', marginBottom: '2%', minWidth: '41px' }}\r\n        >\r\n          {queueLabels}\r\n        </QueueDiv>\r\n\r\n        {this.getButtonToDisplay()}\r\n\r\n        <NotificationContainer />\r\n      </QueueDiv>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}