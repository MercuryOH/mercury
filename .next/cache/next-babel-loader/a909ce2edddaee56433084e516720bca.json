{"ast":null,"code":"import axios from 'axios';\nvar token = '';\nexport function setToken(t) {\n  token = t;\n}\nexport async function postLogin(email, password) {\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    });\n    return data;\n  } catch (e) {\n    return null;\n  }\n}\nexport async function postGroup(classId, name, type) {\n  try {\n    const {\n      data\n    } = await axios.post(`/api/classes/${classId}/groups`, {\n      name,\n      type\n    }, {\n      headers: {\n        authorization: token\n      }\n    });\n    return data;\n  } catch (e) {\n    return null;\n  }\n}\nexport async function getMe() {\n  try {\n    const {\n      data\n    } = await axios.get('/api/users/me', {\n      headers: {\n        authorization: token\n      }\n    });\n    return data;\n  } catch (e) {\n    return null;\n  }\n}\nexport async function getClassNG(classId) {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/classes/${classId}`, {\n      headers: {\n        authorization: token\n      }\n    });\n    return data;\n  } catch (e) {\n    return null;\n  }\n}\nexport async function getGroups(classId) {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/classes/${classId}/groups`, {\n      headers: {\n        authorization: token\n      }\n    });\n    return data;\n  } catch (e) {\n    return [];\n  }\n}\nexport async function getClasses() {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/classes/`, {\n      headers: {\n        authorization: token\n      }\n    });\n    return data;\n  } catch (e) {\n    return [];\n  }\n}\nexport async function postGroupToken(classId, groupId) {\n  try {\n    const {\n      data\n    } = await axios.post(`/api/classes/${classId}/groups/${groupId}/token`, {}, {\n      headers: {\n        authorization: token\n      }\n    });\n    return data;\n  } catch (e) {\n    return null;\n  }\n}","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/util/mercuryService.js"],"names":["axios","token","setToken","t","postLogin","email","password","data","post","e","postGroup","classId","name","type","headers","authorization","getMe","get","getClassNG","getGroups","getClasses","postGroupToken","groupId"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nvar token = ''\n\nexport function setToken(t) {\n  token = t\n}\n\nexport async function postLogin(email, password) {\n  try {\n    const { data } = await axios.post('/api/users/login', { email, password })\n\n    return data\n  } catch (e) {\n    return null\n  }\n}\n\nexport async function postGroup(classId, name, type) {\n  try {\n    const { data } = await axios.post(\n      `/api/classes/${classId}/groups`,\n      { name, type },\n      {\n        headers: {\n          authorization: token,\n        },\n      }\n    )\n\n    return data\n  } catch (e) {\n    return null\n  }\n}\n\nexport async function getMe() {\n  try {\n    const { data } = await axios.get('/api/users/me', {\n      headers: {\n        authorization: token,\n      },\n    })\n\n    return data\n  } catch (e) {\n    return null\n  }\n}\n\nexport async function getClassNG(classId) {\n  try {\n    const { data } = await axios.get(`/api/classes/${classId}`, {\n      headers: {\n        authorization: token,\n      },\n    })\n\n    return data\n  } catch (e) {\n    return null\n  }\n}\n\nexport async function getGroups(classId) {\n  try {\n    const { data } = await axios.get(`/api/classes/${classId}/groups`, {\n      headers: {\n        authorization: token,\n      },\n    })\n\n    return data\n  } catch (e) {\n    return []\n  }\n}\nexport async function getClasses() {\n  try {\n    const { data } = await axios.get(`/api/classes/`, {\n      headers: {\n        authorization: token,\n      },\n    })\n\n    return data\n  } catch (e) {\n    return []\n  }\n}\n\nexport async function postGroupToken(classId, groupId) {\n  try {\n    const { data } = await axios.post(\n      `/api/classes/${classId}/groups/${groupId}/token`,\n      {},\n      {\n        headers: {\n          authorization: token,\n        },\n      }\n    )\n\n    return data\n  } catch (e) {\n    return null\n  }\n}\n"]},"metadata":{},"sourceType":"module"}