{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport Layout from '../../components/layout';\nimport { Button, Accordion, List, Icon } from 'semantic-ui-react';\nimport { AuthRequired } from '../../components/authProvider';\nimport Queue from '../../components/queue/queue';\nimport * as api from '../../util/mercuryService';\nimport CreateGroupModal from '../../components/createGroupModal';\nimport UserInviteModal from '../../components/invite/userInviteModal';\nimport { EventEmitter } from '../../components/util/EventEmitter';\nimport FeedbackModal from '../../components/feedbackModal';\nimport StudentWebSocketClient from '../../util/studentWebSocket';\nimport TAWebSocketClient from '../../util/taWebSocket';\nimport ReceiveInviteModal from '../../components/invite/receiveInviteModal';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport GroupJoinRequestModal from '../../components/invite/groupJoinRequestModal';\nimport WaitingForRequestApprovalModal from '../../components/invite/WaitingForRequestApprovalModal';\nvar ScreenContainer = dynamic(function () {\n  return import('../../components/screenContainer');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../components/screenContainer')];\n    },\n    modules: ['../../components/screenContainer']\n  }\n});\nvar CreateDiscussionModal = dynamic(function () {\n  return import('../../components/createDiscussionModal');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../components/createDiscussionModal')];\n    },\n    modules: ['../../components/createDiscussionModal']\n  }\n});\n\nvar ClassPage = /*#__PURE__*/function (_Component) {\n  _inherits(ClassPage, _Component);\n\n  var _super = _createSuper(ClassPage);\n\n  function ClassPage(props) {\n    var _this;\n\n    _classCallCheck(this, ClassPage);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchAllGroups\", function () {\n      api.getGroups(_this.state.currentClass.id).then(function (groups) {\n        return _this.setState({\n          allGroups: groups\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"leaveGroupForTAOffice\", function () {\n      api.deleteGroupUser(_this.state.currentClass.id, _this.state.currentGroup.id, _this.user.id).then(function () {\n        _this.fetchAllGroups();\n\n        EventEmitter.publish('classGroupSetChanged', _this.classId);\n        EventEmitter.publish('userLeaveGroup', _this.state.currentGroup);\n\n        _this.setState({\n          vonageCred: null,\n          currentGroup: {\n            id: '',\n            name: ''\n          },\n          withTa: false\n        });\n\n        EventEmitter.publish('currentGroupChange', {\n          id: '',\n          name: ''\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"leaveGroup\", function () {\n      api.deleteGroupUser(_this.state.currentClass.id, _this.state.currentGroup.id, _this.user.id).then(function () {\n        _this.fetchAllGroups();\n\n        EventEmitter.publish('classGroupSetChanged', _this.classId);\n        EventEmitter.publish('userLeaveGroup', _this.state.currentGroup);\n\n        _this.setState({\n          vonageCred: null,\n          currentGroup: {\n            id: '',\n            name: ''\n          },\n          withTa: false\n        });\n\n        EventEmitter.publish('currentGroupChange', {\n          id: '',\n          name: ''\n        });\n        EventEmitter.publish('callOver', _this.classId);\n      })[\"catch\"](console.error);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBack\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.props.router.push('/calendar');\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelectGroup\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(group) {\n        var role, currGroup, UserId, id;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                role = _this.state.currentClass.role;\n\n                if (!(group.type === 'office' || role === 'Professor' || group.type === 'discussion')) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                // you are popped off the waiting queue or you are a TA\n                _this.joinGroup(group);\n\n                return _context2.abrupt(\"return\");\n\n              case 4:\n                _context2.next = 6;\n                return api.getGroupByID(_this.classId, group.id);\n\n              case 6:\n                currGroup = _context2.sent;\n                UserId = currGroup.UserId;\n                id = _this.user.id;\n\n                if (UserId === id) {\n                  // you are the leader of the group, no need for authentication\n                  _this.joinGroup(group);\n                } else {\n                  /**\r\n                   * Ping group leader to let you into the group\r\n                   */\n                  EventEmitter.publish('activateWaitingForRequestApprovalModal', group);\n                  EventEmitter.publish('requestJoinGroup', {\n                    userId: id,\n                    group: group\n                  });\n                }\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCreateGroup\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(group) {\n        var groupData;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return api.postGroup(_this.classId, group.name, group.type, _this.user.id);\n\n              case 2:\n                groupData = _context3.sent;\n                EventEmitter.publish('classGroupSetChanged', _this.classId);\n                _context3.next = 6;\n                return _this.handleSelectGroup(groupData);\n\n              case 6:\n                _this.fetchAllGroups();\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      withTa: false,\n      clicked: 'none',\n      currentGroup: {\n        id: '',\n        name: ''\n      },\n      currentClass: {\n        id: '',\n        name: '',\n        //groups: [],\n        users: [],\n        role: 'Student'\n      },\n      vonageCred: null,\n      isMounted: false,\n      allGroups: []\n    };\n\n    _this.defineEventEmitterCallbacks();\n\n    return _this;\n  }\n\n  _createClass(ClassPage, [{\n    key: \"joinGroup\",\n    value: function joinGroup(group) {\n      var _this2 = this;\n\n      api.postGroupToken(this.classId, group.id).then(function (_ref4) {\n        var token = _ref4.token;\n\n        if (_this2.state.currentGroup.id != '') {\n          //the user is currently in a call, leave the call first\n          if (group.type === 'office') {\n            // this case only happens when the user is leaving a private group for the TA office\n            // do not trigger the callOver event in this case\n            _this2.leaveGroupForTAOffice();\n          } else {\n            _this2.leaveGroup();\n          }\n        }\n\n        _this2.setState({\n          vonageCred: {\n            sessionId: group.sessionId,\n            token: token\n          },\n          currentGroup: group\n        });\n\n        EventEmitter.publish('userJoinGroup', {\n          groupId: group.id,\n          userId: _this2.user.id\n        });\n        EventEmitter.publish('currentGroupChange', group);\n      }).then(function () {\n        api.postJoinGroup(_this2.classId, group.id, _this2.user.email);\n        EventEmitter.publish('classGroupSetChanged', _this2.classId);\n        EventEmitter.publish('userJoinGroup', group.id);\n      }).then(function () {\n        _this2.fetchAllGroups();\n      })[\"catch\"](console.error);\n    }\n  }, {\n    key: \"defineEventEmitterCallbacks\",\n    value: function defineEventEmitterCallbacks() {\n      var _this3 = this;\n\n      EventEmitter.subscribe('clearLeftSide', function () {\n        _this3.setState({\n          withTa: true\n        });\n      });\n      EventEmitter.subscribe('joinPrivateGroupOnApproval', function (group) {\n        EventEmitter.publish('removeWaitingForRequestApprovalModal');\n\n        _this3.joinGroup(group);\n      });\n      EventEmitter.subscribe('notifyJoinRequestDeclined', function (group) {\n        NotificationManager.info(\"Your Request To Join \".concat(group.name, \" Was Declined\"));\n        EventEmitter.publish('removeWaitingForRequestApprovalModal');\n      });\n      EventEmitter.subscribe('fetchGroups', function () {\n        //this.fetchCurrentClass()\n        _this3.fetchAllGroups();\n      });\n      EventEmitter.subscribe('createNotification', function (msg) {\n        NotificationManager.info(msg);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      var classId = this.props.router.query.classId;\n      if (!classId) return;\n      this.classId = Number(classId);\n      api.getMe().then(function (meData) {\n        _this4.user = meData;\n      }).then(function () {\n        return api.getClass(_this4.classId);\n      }).then(function (c) {\n        var userRole = c.users.find(function (u) {\n          return u.id === _this4.user.id;\n        });\n        if (!userRole) _this4.props.router.push('/calendar');\n        var role = userRole.role;\n        /**\r\n         * Start the appropriate web socket handler depending on the user role\r\n         */\n\n        if (role === 'Student') {\n          /**\r\n           * Start student web socket handler\r\n           */\n          new StudentWebSocketClient().start({\n            me: _this4.user,\n            courseId: _this4.classId\n          });\n        } else {\n          /**\r\n           * Start TA web socket handler\r\n           */\n          new TAWebSocketClient().start({\n            me: _this4.user,\n            courseId: _this4.classId,\n            onJoin: _this4.handleSelectGroup\n          });\n        }\n\n        _this4.setState({\n          currentClass: _objectSpread(_objectSpread({}, c), {}, {\n            role: userRole.role\n          }),\n          isMounted: true\n        });\n\n        EventEmitter.publish('allOtherUsersInClass', _this4.state.currentClass.users.filter(function (user) {\n          return user.id !== _this4.user.id && user.role === role;\n        }));\n        EventEmitter.publish('me', _this4.user);\n        console.log(_this4.user);\n      }).then(function () {\n        _this4.fetchAllGroups();\n      }).then(function () {\n        setInterval(_this4.fetchAllGroups, 10000);\n      })[\"catch\"](console.error);\n    } // fetchCurrentClass = () => {\n    //   api\n    //     .getClass(this.classId)\n    //     .then((c) => {\n    //       const userRole = c.users.find((u) => u.id === this.user.id)\n    //       if (!userRole) this.props.router.push('/calendar')\n    //       this.setState({\n    //         currentClass: {\n    //           ...c,\n    //           role: userRole.role,\n    //         },\n    //       })\n    //     })\n    //     .catch(console.error)\n    // }\n\n  }, {\n    key: \"getButtonToDisplay\",\n    value: function getButtonToDisplay() {\n      var _this5 = this;\n\n      return this.state.currentClass.role === 'Student' ? __jsx(CreateGroupModal, {\n        onCreate: this.handleCreateGroup\n      }) : this.state.clicked === 'none' ? __jsx(Button, {\n        color: \"teal\",\n        content: \"Modify Discussions\",\n        fluid: true,\n        style: {\n          fontSize: '1vw'\n        },\n        onClick: function onClick() {\n          _this5.setState({\n            clicked: 'inline'\n          });\n        }\n      }) : __jsx(React.Fragment, null, __jsx(CreateDiscussionModal, {\n        id: \"createDiscussionModal\",\n        onCreate: this.handleCreateGroup\n      }), __jsx(Button, {\n        color: \"red\",\n        content: \"Done\",\n        fluid: true,\n        style: {\n          fontSize: '1vw',\n          marginTop: '2%'\n        },\n        onClick: function onClick() {\n          _this5.setState({\n            clicked: 'none'\n          });\n        }\n      }));\n    }\n  }, {\n    key: \"getDeleteButton\",\n    value: function getDeleteButton(group) {\n      var _this6 = this;\n\n      return __jsx(Button, {\n        id: \"deletebutton\".concat(group.id),\n        compact: true,\n        icon: true,\n        size: \"mini\",\n        floated: \"right\",\n        style: {\n          display: \"\".concat(this.state.clicked),\n          fontSize: '.6vw',\n          textAlign: 'center',\n          width: '10%',\n          marginBottom: '2%',\n          minWidth: '10px',\n          backgroundColor: 'transparent'\n        },\n        onClick: function onClick() {\n          return api.deleteGroup(_this6.classId, group.id).then(function () {\n            _this6.fetchAllGroups();\n\n            EventEmitter.publish('classGroupSetChanged', _this6.classId);\n          });\n        }\n      }, __jsx(Icon, {\n        name: \"delete\",\n        color: \"red\"\n      }));\n    }\n  }, {\n    key: \"showInviteButton\",\n    value: function showInviteButton(group) {\n      var plusIcon = __jsx(List.Icon, {\n        name: \"user plus\",\n        onClick: function onClick() {\n          EventEmitter.publish('openInviteModal', true);\n        }\n      });\n\n      var noPlusIcon = __jsx(\"div\", null);\n\n      return this.state.currentGroup.id == group.id && this.state.vonageCred !== null ? plusIcon : noPlusIcon;\n    }\n  }, {\n    key: \"getListItemStyle\",\n    value: function getListItemStyle(group) {\n      var unClickedGroupsStyle = {\n        fontSize: '.8vw',\n        textAlign: 'left',\n        width: '80%',\n        marginBottom: '2%',\n        minWidth: '41px',\n        display: 'inline-block'\n      };\n      var clickedGroupsStyle = {\n        fontSize: '.8vw',\n        textAlign: 'left',\n        width: '80%',\n        marginBottom: '2%',\n        minWidth: '41px',\n        background: '#e0e1e2',\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: '#fff',\n        display: 'inline-block'\n      };\n      return this.state.currentGroup.id == group.id && this.state.vonageCred !== null ? clickedGroupsStyle : unClickedGroupsStyle;\n    }\n  }, {\n    key: \"showOffice\",\n    value: function showOffice() {\n      var _this7 = this;\n\n      return (this.state.currentClass.role !== 'Student' || this.state.currentGroup.type === 'office') && __jsx(\"div\", {\n        style: {\n          paddingLeft: 20\n        }\n      }, __jsx(List, {\n        relaxed: true,\n        selection: true,\n        verticalAlign: \"middle\"\n      }, this.state.allGroups.filter(function (group) {\n        return group.type === 'office';\n      }).map(function (group) {\n        return __jsx(List.Item, {\n          key: \"office\",\n          onClick: function onClick() {\n            if (_this7.state.currentGroup.id !== group.id) {\n              _this7.handleSelectGroup(group);\n            }\n          },\n          style: _this7.getListItemStyle(group)\n        }, __jsx(List.Icon, {\n          name: \"graduation cap\"\n        }), __jsx(List.Content, null, __jsx(List.Header, {\n          as: \"a\"\n        }, group.name + ' (' + group.users.length + ')')), _this7.showInviteButton(group));\n      })));\n    }\n  }, {\n    key: \"leftDisplay\",\n    value: function leftDisplay() {\n      var _this8 = this;\n\n      return this.state.withTa === false ? __jsx(\"div\", {\n        style: {\n          height: '100%',\n          marginLeft: '2.5%'\n        }\n      }, __jsx(Button.Group, {\n        size: \"huge\",\n        style: {\n          marginBottom: 12,\n          width: '100%'\n        },\n        fluid: true\n      }, __jsx(Button, {\n        compact: true,\n        icon: \"angle left\",\n        content: this.state.currentClass.name,\n        style: {\n          fontSize: '1.5vw',\n          textAlign: 'left',\n          width: '75%',\n          marginBottom: '2%',\n          minWidth: '41px'\n        },\n        onClick: this.handleBack\n      })), this.showOffice(), __jsx(Accordion, {\n        fluid: true,\n        exclusive: false,\n        defaultActiveIndex: [0, 1],\n        style: {\n          fontSize: '1vw',\n          textAlign: 'left',\n          width: '100%',\n          marginBottom: '2%',\n          minWidth: '41px'\n        },\n        panels: [{\n          key: 'discussions',\n          title: 'Discussions',\n          content: {\n            content: __jsx(\"div\", {\n              style: {\n                paddingLeft: 20,\n                height: 200,\n                overflow: 'auto'\n              }\n            }, __jsx(List, {\n              relaxed: true,\n              selection: true\n            }, this.state.allGroups.filter(function (group) {\n              return group.type === 'discussion';\n            }).map(function (group) {\n              return __jsx(React.Fragment, null, __jsx(List.Item, {\n                key: \"discussion_\".concat(group.id),\n                onClick: function onClick() {\n                  if (_this8.state.currentGroup.id !== group.id) {\n                    _this8.handleSelectGroup(group);\n                  }\n                },\n                style: _this8.getListItemStyle(group)\n              }, __jsx(List.Icon, {\n                name: \"sound\"\n              }), __jsx(List.Content, null, __jsx(List.Header, {\n                as: \"a\"\n              }, group.name + ' (' + group.users.length + ')')), _this8.showInviteButton(group)), _this8.getDeleteButton(group));\n            })))\n          }\n        }, {\n          key: 'private-groups',\n          title: 'Private Groups',\n          content: {\n            content: __jsx(\"div\", {\n              style: {\n                paddingLeft: 20,\n                height: 200,\n                overflow: 'auto'\n              }\n            }, __jsx(List, {\n              relaxed: true,\n              selection: true\n            }, this.state.allGroups.filter(function (group) {\n              return group.type === 'group';\n            }).map(function (group) {\n              return __jsx(List.Item, {\n                key: \"private_group_\".concat(group.id),\n                onClick: function onClick() {\n                  if (_this8.state.currentGroup.id !== group.id) {\n                    _this8.handleSelectGroup(group);\n                  }\n                },\n                style: _this8.getListItemStyle(group)\n              }, __jsx(List.Icon, {\n                name: \"lock\"\n              }), __jsx(List.Content, null, __jsx(List.Header, {\n                as: \"a\"\n              }, group.name + ' (' + group.users.length + ')')), _this8.showInviteButton(group));\n            })))\n          }\n        }]\n      }), __jsx(\"div\", {\n        style: {\n          position: 'absolute',\n          width: 'calc(100% - 38px)',\n          bottom: 14\n        }\n      }, this.getButtonToDisplay())) : __jsx(\"div\", null, \" \");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.isMounted) {\n        return null;\n      }\n\n      return __jsx(Layout, {\n        left: this.leftDisplay(),\n        right: __jsx(Queue, {\n          onJoin: this.handleSelectGroup\n        })\n      }, this.state.vonageCred && __jsx(ScreenContainer, {\n        style: {\n          width: '100%',\n          maxHeight: '75vh'\n        },\n        sessionId: this.state.vonageCred.sessionId,\n        token: this.state.vonageCred.token,\n        onLeave: this.leaveGroup,\n        currGroup: this.state.currentGroup,\n        classId: this.classId,\n        user: this.user,\n        name: this.user.firstName + ' ' + this.user.lastName\n      }), __jsx(UserInviteModal, null), __jsx(FeedbackModal, null), __jsx(ReceiveInviteModal, {\n        onJoin: this.handleSelectGroup\n      }), __jsx(GroupJoinRequestModal, null), __jsx(WaitingForRequestApprovalModal, null), __jsx(NotificationContainer, null));\n    }\n  }]);\n\n  return ClassPage;\n}(Component);\n\nexport default AuthRequired(withRouter(ClassPage));","map":null,"metadata":{},"sourceType":"module"}