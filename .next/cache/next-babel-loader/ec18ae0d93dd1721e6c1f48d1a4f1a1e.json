{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Modal, Button, Header, Search } from 'semantic-ui-react';\nimport * as api from '../util/mercuryService';\nimport PropTypes from 'prop-types';\n\nfunction CreateGroupModal() {\n  const {\n    0: modalState,\n    1: toggleModal\n  } = useState(false);\n\n  async function createGroup(groupName) {\n    console.log(groupName); //post req to group api\n\n    const postGroupResponse = await api.postGroup(2, 'fastgoers', 'group');\n    console.log(postGroupResponse);\n  }\n\n  return __jsx(\"div\", null, __jsx(Modal, {\n    style: {\n      borderless: 'true',\n      width: '40%',\n      height: '40%'\n    },\n    trigger: __jsx(Button, {\n      color: \"teal\",\n      icon: \"add\",\n      content: \"New Group\",\n      fluid: true,\n      style: {\n        fontSize: '1vw'\n      },\n      onClick: () => toggleModal(true)\n    }),\n    open: modalState,\n    onClose: () => toggleModal(false),\n    closeOnDimmerClick: false,\n    closeOnEscape: false,\n    closeIcon: true\n  }, __jsx(Modal.Content, {\n    style: {\n      borderless: 'true'\n    }\n  }, __jsx(Header, {\n    style: {\n      fontSize: '2vw',\n      textAlign: 'center',\n      width: '100%',\n      padding: '5%',\n      height: '50%',\n      margin: 'auto'\n    },\n    content: 'New Private Group'\n  }), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '5%'\n    }\n  }, __jsx(Search, {\n    fluid: true,\n    placeholder: 'Add students to your group...',\n    input: {\n      fluid: true\n    }\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '70%',\n      height: '70%',\n      margin: 'auto',\n      padding: '5%'\n    }\n  }, __jsx(Button, {\n    color: \"teal\",\n    style: {\n      width: '50%',\n      fontSize: '1vw'\n    },\n    onClick: () => {\n      toggleModal(false);\n      createGroup('Default');\n    },\n    content: 'Create'\n  })))));\n} // InviteModal.propTypes = {\n//   content: PropTypes.node,\n//   buttonText: PropTypes.string,\n//   placeholder: PropTypes.string,\n// }\n\n\nexport default CreateGroupModal;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/createGroupModal.js"],"names":["React","useState","Modal","Button","Header","Search","api","PropTypes","CreateGroupModal","modalState","toggleModal","createGroup","groupName","console","log","postGroupResponse","postGroup","borderless","width","height","fontSize","textAlign","padding","margin","fluid"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,OAAO,KAAKC,GAAZ,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,gBAAT,GAA4B;AAC1B,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA4BT,QAAQ,CAAC,KAAD,CAA1C;;AAEA,iBAAeU,WAAf,CAA2BC,SAA3B,EAAsC;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ,EADoC,CAEpC;;AACA,UAAMG,iBAAiB,GAAG,MAAMT,GAAG,CAACU,SAAJ,CAAc,CAAd,EAAiB,WAAjB,EAA8B,OAA9B,CAAhC;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,iBAAZ;AACD;;AAED,SACE,mBACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE,KAA7B;AAAoCC,MAAAA,MAAM,EAAE;AAA5C,KADT;AAEE,IAAA,OAAO,EACL,MAAC,MAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,IAAI,EAAC,KAFP;AAGE,MAAA,OAAO,EAAC,WAHV;AAIE,MAAA,KAAK,MAJP;AAKE,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OALT;AAME,MAAA,OAAO,EAAE,MAAMV,WAAW,CAAC,IAAD;AAN5B,MAHJ;AAYE,IAAA,IAAI,EAAED,UAZR;AAaE,IAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,KAAD,CAb5B;AAcE,IAAA,kBAAkB,EAAE,KAdtB;AAeE,IAAA,aAAa,EAAE,KAfjB;AAgBE,IAAA,SAAS;AAhBX,KAkBE,MAAC,KAAD,CAAO,OAAP;AAAe,IAAA,KAAK,EAAE;AAAEO,MAAAA,UAAU,EAAE;AAAd;AAAtB,KACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,QAAQ,EAAE,KADL;AAELC,MAAAA,SAAS,EAAE,QAFN;AAGLH,MAAAA,KAAK,EAAE,MAHF;AAILI,MAAAA,OAAO,EAAE,IAJJ;AAKLH,MAAAA,MAAM,EAAE,KALH;AAMLI,MAAAA,MAAM,EAAE;AANH,KADT;AASE,IAAA,OAAO,EAAE;AATX,IADF,EAaE;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,SAAS,EAAE,QADN;AAELC,MAAAA,OAAO,EAAE;AAFJ;AADT,KAME,MAAC,MAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,WAAW,EAAE,+BAFf;AAGE,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT;AAHT,IANF,CAbF,EA0BE;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,SAAS,EAAE,QADN;AAELH,MAAAA,KAAK,EAAE,KAFF;AAGLC,MAAAA,MAAM,EAAE,KAHH;AAILI,MAAAA,MAAM,EAAE,MAJH;AAKLD,MAAAA,OAAO,EAAE;AALJ;AADT,KASE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,KAAK,EAAE;AAAEJ,MAAAA,KAAK,EAAE,KAAT;AAAgBE,MAAAA,QAAQ,EAAE;AAA1B,KAFT;AAGE,IAAA,OAAO,EAAE,MAAM;AACbV,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAC,MAAAA,WAAW,CAAC,SAAD,CAAX;AACD,KANH;AAOE,IAAA,OAAO,EAAE;AAPX,IATF,CA1BF,CAlBF,CADF,CADF;AAqED,C,CAED;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,gBAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Modal, Button, Header, Search } from 'semantic-ui-react'\r\nimport * as api from '../util/mercuryService'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction CreateGroupModal() {\r\n  const [modalState, toggleModal] = useState(false)\r\n\r\n  async function createGroup(groupName) {\r\n    console.log(groupName)\r\n    //post req to group api\r\n    const postGroupResponse = await api.postGroup(2, 'fastgoers', 'group')\r\n    console.log(postGroupResponse)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        style={{ borderless: 'true', width: '40%', height: '40%' }}\r\n        trigger={\r\n          <Button\r\n            color=\"teal\"\r\n            icon=\"add\"\r\n            content=\"New Group\"\r\n            fluid\r\n            style={{ fontSize: '1vw' }}\r\n            onClick={() => toggleModal(true)}\r\n          />\r\n        }\r\n        open={modalState}\r\n        onClose={() => toggleModal(false)}\r\n        closeOnDimmerClick={false}\r\n        closeOnEscape={false}\r\n        closeIcon\r\n      >\r\n        <Modal.Content style={{ borderless: 'true' }}>\r\n          <Header\r\n            style={{\r\n              fontSize: '2vw',\r\n              textAlign: 'center',\r\n              width: '100%',\r\n              padding: '5%',\r\n              height: '50%',\r\n              margin: 'auto',\r\n            }}\r\n            content={'New Private Group'}\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              padding: '5%',\r\n            }}\r\n          >\r\n            <Search\r\n              fluid\r\n              placeholder={'Add students to your group...'}\r\n              input={{ fluid: true }}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              width: '70%',\r\n              height: '70%',\r\n              margin: 'auto',\r\n              padding: '5%',\r\n            }}\r\n          >\r\n            <Button\r\n              color=\"teal\"\r\n              style={{ width: '50%', fontSize: '1vw' }}\r\n              onClick={() => {\r\n                toggleModal(false)\r\n                createGroup('Default')\r\n              }}\r\n              content={'Create'}\r\n            />\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\n// InviteModal.propTypes = {\r\n//   content: PropTypes.node,\r\n//   buttonText: PropTypes.string,\r\n//   placeholder: PropTypes.string,\r\n// }\r\n\r\nexport default CreateGroupModal\r\n"]},"metadata":{},"sourceType":"module"}