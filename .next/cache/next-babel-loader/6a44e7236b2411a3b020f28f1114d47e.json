{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from 'react';\nimport { Label, Button } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport QueueWebSocket from './queuews';\nimport * as api from '../../util/mercuryService';\nimport { AuthRequired } from '../../components/authProvider';\nvar QueueDiv = styled.div.withConfig({\n  displayName: \"queue__QueueDiv\",\n  componentId: \"sc-1vy3urw-0\"\n})([\"grid-gap:2vh;\"]);\n_c = QueueDiv;\nvar QueueLabel = styled(Label).withConfig({\n  displayName: \"queue__QueueLabel\",\n  componentId: \"sc-1vy3urw-1\"\n})([\"text-align:center;\"]);\n_c2 = QueueLabel;\n\nvar Queue = /*#__PURE__*/function (_Component) {\n  _inherits(Queue, _Component);\n\n  var _super = _createSuper(Queue);\n\n  function Queue(props) {\n    var _this;\n\n    _classCallCheck(this, Queue);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      displayStudentsStyle: {\n        display: 'grid'\n      },\n      iconToDisplay: 'caret square down outline',\n      connection: null,\n      studentsInQueue: [],\n      me: {},\n      classData: [],\n      inQueue: false\n    };\n\n    _this.getRoleForClass.bind(_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(Queue, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var connection, me, classData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.courseId = Number(window.location.href.split('/')[4]);\n                connection = new QueueWebSocket(this);\n                me = {};\n                classData = {};\n                api.getMe().then(function (meData) {\n                  me = meData;\n                }).then(function () {\n                  return api.getClasses();\n                }).then(function (classPayload) {\n                  classData = classPayload;\n                }).then(function () {\n                  return _this2.setState({\n                    me: me,\n                    classData: classData,\n                    connection: connection\n                  });\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"isStudentDisplayed\",\n    value: function isStudentDisplayed() {\n      var display = this.state.displayStudentsStyle.display;\n      return display === 'grid';\n    }\n  }, {\n    key: \"alterStudentDisplay\",\n    value: function alterStudentDisplay() {\n      var displayStudentsStyle = this.isStudentDisplayed() ? {\n        display: 'none'\n      } : {\n        display: 'grid'\n      };\n      var iconToDisplay = this.isStudentDisplayed() ? 'caret square up outline' : 'caret square down outline';\n      this.setState({\n        displayStudentsStyle: displayStudentsStyle,\n        iconToDisplay: iconToDisplay\n      });\n    }\n  }, {\n    key: \"addMeToQueue\",\n    value: function addMeToQueue() {\n      var _this$state$me = this.state.me,\n          firstName = _this$state$me.firstName,\n          lastName = _this$state$me.lastName;\n      var fullName = \"\".concat(firstName, \" \").concat(lastName);\n\n      if (this.state.studentsInQueue.indexOf(fullName) >= 0) {\n        return;\n      }\n\n      this.state.connection.addMeToQueue();\n    }\n  }, {\n    key: \"removeMeFromQueue\",\n    value: function removeMeFromQueue() {\n      var _this$state$me2 = this.state.me,\n          firstName = _this$state$me2.firstName,\n          lastName = _this$state$me2.lastName;\n      var fullName = \"\".concat(firstName, \" \").concat(lastName);\n\n      if (this.state.studentsInQueue.indexOf(fullName) < 0) {\n        return;\n      }\n\n      this.state.connection.removeMeFromQueue();\n    }\n  }, {\n    key: \"getRoleForClass\",\n    value: function getRoleForClass() {\n      var _this3 = this;\n\n      var classData = this.state.classData;\n      var userRole = null;\n      classData.forEach(function (row) {\n        var id = row.id,\n            role = row.role;\n\n        if (_this3.courseId === Number(id)) {\n          userRole = role;\n        }\n      });\n      return userRole;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var connection = this.state.connection;\n\n      if (!connection) {\n        return null;\n      }\n\n      var userRole = this.getRoleForClass();\n\n      var buttonToDisplay = __jsx(\"div\", {\n        style: {\n          position: 'absolute',\n          width: 'calc(100% - 38px)',\n          bottom: 14,\n          display: 'inline-flex'\n        }\n      }, __jsx(Button, {\n        onClick: this.addMeToQueue.bind(this),\n        primary: true\n      }, \"Join Queue\"), __jsx(Button, {\n        onClick: this.removeMeFromQueue.bind(this),\n        secondary: true\n      }, \"Leave Queue\"));\n\n      if (userRole !== 'Student') {\n        buttonToDisplay = __jsx(\"div\", {\n          style: {\n            position: 'absolute',\n            width: 'calc(100% - 38px)',\n            bottom: 14,\n            display: 'inline-flex'\n          }\n        }, __jsx(Button, {\n          primary: true\n        }, \"Next\"));\n      }\n\n      var queueLabels = this.state.displayStudentsStyle.display == 'none' ? __jsx(React.Fragment, null) : this.state.studentsInQueue.map(function (student) {\n        return __jsx(QueueLabel, {\n          vertical: true,\n          style: {\n            fontSize: '1.2vw',\n            textAlign: 'center',\n            width: '100%',\n            marginBottom: '2%',\n            minWidth: '41px'\n          },\n          key: student\n        }, student);\n      });\n      return __jsx(QueueDiv, {\n        style: {\n          marginBottom: 12,\n          width: '95%',\n          marginRight: '2.5%'\n        }\n      }, __jsx(Button.Group, {\n        size: \"huge\",\n        style: {\n          marginBottom: 12,\n          width: '100%'\n        },\n        fluid: true,\n        vertical: true\n      }, __jsx(Button, {\n        compact: true,\n        content: \"Queue\",\n        icon: this.state.iconToDisplay,\n        labelPosition: \"right\",\n        onClick: this.alterStudentDisplay.bind(this),\n        style: {\n          fontSize: '1.5vw',\n          textAlign: 'center',\n          width: '100%',\n          marginBottom: '2%',\n          minWidth: '41px'\n        }\n      })), __jsx(QueueDiv, {\n        style: {\n          width: '100%',\n          marginBottom: '2%',\n          minWidth: '41px'\n        }\n      }, queueLabels), buttonToDisplay);\n    }\n  }]);\n\n  return Queue;\n}(Component);\n\nexport default _c3 = AuthRequired(Queue);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QueueDiv\");\n$RefreshReg$(_c2, \"QueueLabel\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/queue/queue.js"],"names":["React","Component","useState","Label","Button","styled","QueueWebSocket","api","AuthRequired","QueueDiv","div","QueueLabel","Queue","props","state","displayStudentsStyle","display","iconToDisplay","connection","studentsInQueue","me","classData","inQueue","getRoleForClass","bind","courseId","Number","window","location","href","split","getMe","then","meData","getClasses","classPayload","setState","isStudentDisplayed","firstName","lastName","fullName","indexOf","addMeToQueue","removeMeFromQueue","userRole","forEach","row","id","role","buttonToDisplay","position","width","bottom","queueLabels","map","student","fontSize","textAlign","marginBottom","minWidth","marginRight","alterStudentDisplay"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Label, Button } from 'semantic-ui-react'\nimport styled from 'styled-components'\nimport QueueWebSocket from './queuews'\nimport * as api from '../../util/mercuryService'\nimport { AuthRequired } from '../../components/authProvider'\n\nconst QueueDiv = styled.div`\n  grid-gap: 2vh;\n`\n\nconst QueueLabel = styled(Label)`\n  text-align: center;\n`\n\nclass Queue extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      displayStudentsStyle: { display: 'grid' },\n      iconToDisplay: 'caret square down outline',\n      connection: null,\n      studentsInQueue: [],\n      me: {},\n      classData: [],\n      inQueue: false,\n    }\n\n    this.getRoleForClass.bind(this)\n  }\n\n  async componentDidMount() {\n    this.courseId = Number(window.location.href.split('/')[4])\n    const connection = new QueueWebSocket(this)\n\n    let me = {}\n    let classData = {}\n\n    api\n      .getMe()\n      .then((meData) => {\n        me = meData\n      })\n      .then(() => api.getClasses())\n      .then((classPayload) => {\n        classData = classPayload\n      })\n      .then(() => this.setState({ me, classData, connection }))\n  }\n\n  isStudentDisplayed() {\n    let { display } = this.state.displayStudentsStyle\n    return display === 'grid'\n  }\n\n  alterStudentDisplay() {\n    let displayStudentsStyle = this.isStudentDisplayed()\n      ? { display: 'none' }\n      : { display: 'grid' }\n\n    let iconToDisplay = this.isStudentDisplayed()\n      ? 'caret square up outline'\n      : 'caret square down outline'\n\n    this.setState({ displayStudentsStyle, iconToDisplay })\n  }\n\n  addMeToQueue() {\n    const { firstName, lastName } = this.state.me\n    const fullName = `${firstName} ${lastName}`\n\n    if (this.state.studentsInQueue.indexOf(fullName) >= 0) {\n      return\n    }\n\n    this.state.connection.addMeToQueue()\n  }\n\n  removeMeFromQueue() {\n    const { firstName, lastName } = this.state.me\n    const fullName = `${firstName} ${lastName}`\n\n    if (this.state.studentsInQueue.indexOf(fullName) < 0) {\n      return\n    }\n\n    this.state.connection.removeMeFromQueue()\n  }\n\n  getRoleForClass() {\n    const { classData } = this.state\n    let userRole = null\n\n    classData.forEach((row) => {\n      let { id, role } = row\n      if (this.courseId === Number(id)) {\n        userRole = role\n      }\n    })\n\n    return userRole\n  }\n\n  render() {\n    const { connection } = this.state\n\n    if (!connection) {\n      return null\n    }\n\n    const userRole = this.getRoleForClass()\n\n    let buttonToDisplay = (\n      <div\n        style={{\n          position: 'absolute',\n          width: 'calc(100% - 38px)',\n          bottom: 14,\n          display: 'inline-flex',\n        }}\n      >\n        <Button onClick={this.addMeToQueue.bind(this)} primary>\n          Join Queue\n        </Button>\n        <Button onClick={this.removeMeFromQueue.bind(this)} secondary>\n          Leave Queue\n        </Button>\n      </div>\n    )\n\n    if (userRole !== 'Student') {\n      buttonToDisplay = (\n        <div\n          style={{\n            position: 'absolute',\n            width: 'calc(100% - 38px)',\n            bottom: 14,\n            display: 'inline-flex',\n          }}\n        >\n          <Button primary>Next</Button>\n        </div>\n      )\n    }\n\n    const queueLabels =\n    this.state.displayStudentsStyle.display == 'none' ? (\n      <></>\n    ) : (\n      this.state.studentsInQueue.map((student) => (\n        <QueueLabel\n          vertical\n          style={{\n            fontSize: '1.2vw',\n            textAlign: 'center',\n            width: '100%',\n            marginBottom: '2%',\n            minWidth: '41px',\n          }}\n          key={student}\n        >\n          {student}\n        </QueueLabel>\n      ))\n    )\n\n    return (\n      <QueueDiv style={{ marginBottom: 12, width: '95%', marginRight: '2.5%' }}>\n        <Button.Group\n          size=\"huge\"\n          style={{ marginBottom: 12, width: '100%' }}\n          fluid\n          vertical\n        >\n          <Button\n            compact\n            content=\"Queue\"\n            icon={this.state.iconToDisplay}\n            labelPosition=\"right\"\n            onClick={this.alterStudentDisplay.bind(this)}\n            style={{\n              fontSize: '1.5vw',\n              textAlign: 'center',\n              width: '100%',\n              marginBottom: '2%',\n              minWidth: '41px',\n            }}\n          />\n        </Button.Group>\n\n        <QueueDiv\n          style={{ width: '100%', marginBottom: '2%', minWidth: '41px' }}\n        >\n          {queueLabels}\n        </QueueDiv>\n\n        {buttonToDisplay}\n      </QueueDiv>\n    )\n  }\n}\n\nexport default AuthRequired(Queue)\n"]},"metadata":{},"sourceType":"module"}