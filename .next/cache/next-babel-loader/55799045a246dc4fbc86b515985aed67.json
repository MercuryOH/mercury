{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Modal, Button, Header, Search, TextArea } from 'semantic-ui-react';\nimport * as api from '../util/mercuryService';\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\n\nfunction CreateGroupModal() {\n  const {\n    0: modalState,\n    1: toggleModal\n  } = useState(false);\n  const router = useRouter();\n  const {\n    classId\n  } = router.query;\n\n  async function createGroup() {\n    var groupName = 'Private Group';\n    const groupNameField = document.getElementById('groupName').value;\n    if (groupNameField != '') groupName = groupNameField;\n    const postGroupResponse = await api.postGroup(2, groupName, 'group');\n    console.log(postGroupResponse);\n  }\n\n  return __jsx(\"div\", null, __jsx(Modal, {\n    style: {\n      borderless: 'true',\n      width: '40%',\n      height: '40%'\n    },\n    trigger: __jsx(Button, {\n      color: \"teal\",\n      icon: \"add\",\n      content: \"New Group\",\n      fluid: true,\n      style: {\n        fontSize: '1vw'\n      },\n      onClick: () => toggleModal(true)\n    }),\n    open: modalState,\n    onClose: () => toggleModal(false),\n    closeOnDimmerClick: false,\n    closeOnEscape: false,\n    closeIcon: true\n  }, __jsx(Modal.Content, {\n    style: {\n      borderless: 'true'\n    }\n  }, __jsx(Header, {\n    style: {\n      fontSize: '2vw',\n      textAlign: 'center',\n      width: '100%',\n      padding: '5%',\n      height: '50%',\n      margin: 'auto'\n    },\n    content: 'New Private Group'\n  }), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '5%'\n    }\n  }, __jsx(\"div\", {\n    class: \"ui input\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Group name\",\n    id: \"groupName\"\n  })), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Search, {\n    fluid: true,\n    placeholder: 'Add students to your group...',\n    input: {\n      fluid: true\n    }\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '70%',\n      height: '70%',\n      margin: 'auto',\n      padding: '5%'\n    }\n  }, __jsx(Button, {\n    color: \"teal\",\n    style: {\n      width: '50%',\n      fontSize: '1vw'\n    },\n    onClick: () => {\n      toggleModal(false);\n      createGroup('Default');\n    },\n    content: 'Create'\n  })))));\n} // InviteModal.propTypes = {\n//   content: PropTypes.node,\n//   buttonText: PropTypes.string,\n//   placeholder: PropTypes.string,\n// }\n\n\nexport default CreateGroupModal;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/createGroupModal.js"],"names":["React","useState","Modal","Button","Header","Search","TextArea","api","PropTypes","useRouter","CreateGroupModal","modalState","toggleModal","router","classId","query","createGroup","groupName","groupNameField","document","getElementById","value","postGroupResponse","postGroup","console","log","borderless","width","height","fontSize","textAlign","padding","margin","fluid"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Modal, Button, Header, Search, TextArea } from 'semantic-ui-react'\nimport * as api from '../util/mercuryService'\nimport PropTypes from 'prop-types'\nimport { useRouter } from 'next/router'\n\nfunction CreateGroupModal() {\n  const [modalState, toggleModal] = useState(false)\n\n  const router = useRouter()\n  const { classId } = router.query\n\n  async function createGroup() {\n    var groupName = 'Private Group'\n    const groupNameField = document.getElementById('groupName').value\n    if (groupNameField != '') groupName = groupNameField\n\n    const postGroupResponse = await api.postGroup(2, groupName, 'group')\n    console.log(postGroupResponse)\n  }\n\n  return (\n    <div>\n      <Modal\n        style={{ borderless: 'true', width: '40%', height: '40%' }}\n        trigger={\n          <Button\n            color=\"teal\"\n            icon=\"add\"\n            content=\"New Group\"\n            fluid\n            style={{ fontSize: '1vw' }}\n            onClick={() => toggleModal(true)}\n          />\n        }\n        open={modalState}\n        onClose={() => toggleModal(false)}\n        closeOnDimmerClick={false}\n        closeOnEscape={false}\n        closeIcon\n      >\n        <Modal.Content style={{ borderless: 'true' }}>\n          <Header\n            style={{\n              fontSize: '2vw',\n              textAlign: 'center',\n              width: '100%',\n              padding: '5%',\n              height: '50%',\n              margin: 'auto',\n            }}\n            content={'New Private Group'}\n          />\n\n          <div\n            style={{\n              textAlign: 'center',\n              padding: '5%',\n            }}\n          >\n            <div class=\"ui input\">\n              <input type=\"text\" placeholder=\"Group name\" id=\"groupName\" />\n            </div>\n\n            <br></br>\n            <br></br>\n            <Search\n              fluid\n              placeholder={'Add students to your group...'}\n              input={{ fluid: true }}\n            />\n          </div>\n\n          <div\n            style={{\n              textAlign: 'center',\n              width: '70%',\n              height: '70%',\n              margin: 'auto',\n              padding: '5%',\n            }}\n          >\n            <Button\n              color=\"teal\"\n              style={{ width: '50%', fontSize: '1vw' }}\n              onClick={() => {\n                toggleModal(false)\n                createGroup('Default')\n              }}\n              content={'Create'}\n            />\n          </div>\n        </Modal.Content>\n      </Modal>\n    </div>\n  )\n}\n\n// InviteModal.propTypes = {\n//   content: PropTypes.node,\n//   buttonText: PropTypes.string,\n//   placeholder: PropTypes.string,\n// }\n\nexport default CreateGroupModal\n"]},"metadata":{},"sourceType":"module"}