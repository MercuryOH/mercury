{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Publisher from './publisher';\nimport { EventEmitter } from './util/EventEmitter';\nimport { OTSession, OTPublisher, OTStreams, OTSubscriber } from 'opentok-react';\nimport { Button, List } from 'semantic-ui-react';\n\nvar Vonage = /*#__PURE__*/function (_React$Component) {\n  _inherits(Vonage, _React$Component);\n\n  var _super = _createSuper(Vonage);\n\n  function Vonage(props) {\n    var _this;\n\n    _classCallCheck(this, Vonage);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePublish\", function () {\n      console.log('Successfully published!');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubscribe\", function () {\n      console.log('Subscribed!');\n      _this.parentNode.style.display = 'inline-flex';\n      _this.parentNode.parentNode.style.display = 'inline-flex';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSessionError\", function (error) {\n      console.error(error);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePublishError\", function (error) {\n      console.error(error);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubscribeError\", function (error) {\n      console.error(error);\n    });\n\n    _this.state = {\n      ssButton: true\n    };\n    _this.sessionEventHandlers = {\n      sessionConnected: function sessionConnected() {},\n      sessionDisconnected: function sessionDisconnected() {},\n      sessionReconnected: function sessionReconnected() {},\n      sessionReconnecting: function sessionReconnecting() {}\n    };\n    _this.publishEventHandlers = {\n      accessDenied: function accessDenied() {},\n      streamCreated: function streamCreated() {},\n      streamDestroyed: function streamDestroyed() {}\n    };\n    _this.subscribeEventHandlers = {\n      videoEnabled: function videoEnabled() {},\n      videoDisabled: function videoDisabled() {}\n    };\n    return _this;\n  }\n\n  _createClass(Vonage, [{\n    key: \"screenShareButton\",\n    value: function screenShareButton() {\n      var _this2 = this;\n\n      return this.state.ssButton === true ? __jsx(Button, {\n        onClick: function onClick() {\n          EventEmitter.publish('startScreenShare');\n          EventEmitter.publish('disableVideo');\n\n          _this2.setState({\n            ssButton: false\n          });\n        },\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Share Screen\"\n      }) : __jsx(Button, {\n        onClick: function onClick() {\n          EventEmitter.publish('stopScreenShare');\n          EventEmitter.publish('enableVideo');\n\n          _this2.setState({\n            ssButton: true\n          });\n        },\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Stop Screen Share\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          sessionId = _this$props.sessionId,\n          token = _this$props.token,\n          onLeave = _this$props.onLeave;\n      return __jsx(\"div\", null, __jsx(OTSession, {\n        apiKey: process.env.NEXT_PUBLIC_VV_API_KEY,\n        sessionId: sessionId,\n        token: token,\n        eventHandlers: this.sessionEventHandlers,\n        onError: this.handleSessionError\n      }, __jsx(Publisher, null), sessionId.streams.map(function (stream) {\n        return __jsx(OTSubscriber, {\n          key: stream.id,\n          session: sessionId,\n          stream: stream,\n          properties: {\n            width: '100%',\n            height: '50vh'\n          },\n          onSubscribe: _this3.handleSubscribe,\n          onError: _this3.handleSubscribeError\n        });\n      }), this.screenShareButton(), __jsx(Button, {\n        onClick: onLeave,\n        color: \"red\",\n        icon: \"close\",\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Leave call\"\n      })));\n    }\n  }]);\n\n  return Vonage;\n}(React.Component);\n\nVonage.propTypes = {\n  sessionId: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  onLeave: PropTypes.func.isRequired\n};\nexport default Vonage;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/vonage.js"],"names":["React","PropTypes","Publisher","EventEmitter","OTSession","OTPublisher","OTStreams","OTSubscriber","Button","List","Vonage","props","console","log","parentNode","style","display","error","state","ssButton","sessionEventHandlers","sessionConnected","sessionDisconnected","sessionReconnected","sessionReconnecting","publishEventHandlers","accessDenied","streamCreated","streamDestroyed","subscribeEventHandlers","videoEnabled","videoDisabled","publish","setState","fontSize","sessionId","token","onLeave","process","env","NEXT_PUBLIC_VV_API_KEY","handleSessionError","streams","map","stream","id","width","height","handleSubscribe","handleSubscribeError","screenShareButton","Component","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Publisher from './publisher'\nimport { EventEmitter } from './util/EventEmitter'\nimport { OTSession, OTPublisher, OTStreams, OTSubscriber } from 'opentok-react'\nimport { Button, List } from 'semantic-ui-react'\n\nclass Vonage extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      ssButton: true\n    }\n\n    this.sessionEventHandlers = {\n      sessionConnected: () => {},\n      sessionDisconnected: () => {},\n      sessionReconnected: () => {},\n      sessionReconnecting: () => {},\n    }\n\n    this.publishEventHandlers = {\n      accessDenied: () => {},\n      streamCreated: () => {},\n      streamDestroyed: () => {},\n    }\n\n    this.subscribeEventHandlers = {\n      videoEnabled: () => {},\n      videoDisabled: () => {},\n    }\n  }\n\n  handlePublish = () => {\n    console.log('Successfully published!')\n  }\n\n  handleSubscribe = () => {\n    console.log('Subscribed!')\n    this.parentNode.style.display = 'inline-flex'\n    this.parentNode.parentNode.style.display = 'inline-flex'\n  }\n\n  handleSessionError = (error) => {\n    console.error(error)\n  }\n\n  handlePublishError = (error) => {\n    console.error(error)\n  }\n\n  handleSubscribeError = (error) => {\n    console.error(error)\n  }\n\n  screenShareButton() {\n    return this.state.ssButton === true ? (\n      <Button\n        onClick = {() => {\n          EventEmitter.publish('startScreenShare')\n          EventEmitter.publish('disableVideo')\n          this.setState({ssButton: false})\n          }\n        }\n        style = {{fontSize: '.8vw', display: 'inline-flex'}}\n        content = \"Share Screen\"\n      />\n    ) : (\n      <Button\n          onClick = {() => {\n              EventEmitter.publish('stopScreenShare')\n              EventEmitter.publish('enableVideo')\n              this.setState({ssButton: true})\n            }\n          }\n          style = {{fontSize: '.8vw', display: 'inline-flex'}}\n          content = \"Stop Screen Share\"\n        />\n    )\n  }\n\n  render() {\n    const { sessionId, token, onLeave } = this.props\n\n    return (\n      <div>\n        <OTSession\n          apiKey={process.env.NEXT_PUBLIC_VV_API_KEY}\n          sessionId={sessionId}\n          token={token}\n          eventHandlers={this.sessionEventHandlers}\n          onError={this.handleSessionError}\n        >\n          <Publisher />\n          {sessionId.streams.map(stream => (\n            <OTSubscriber\n              key={stream.id}\n              session={sessionId}\n              stream={stream}\n              properties={{ width: '100%', height: '50vh' }}\n              onSubscribe={this.handleSubscribe}\n              onError={this.handleSubscribeError}\n            />\n          ))}\n          {this.screenShareButton()}\n          <Button\n            onClick={onLeave}\n            color=\"red\"\n            icon=\"close\"\n            style = {{fontSize: '.8vw', display: 'inline-flex'}}\n            content=\"Leave call\"\n          />\n        </OTSession>\n      </div>\n    )\n  }\n}\n\nVonage.propTypes = {\n  sessionId: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  onLeave: PropTypes.func.isRequired,\n}\n\nexport default Vonage\n"]},"metadata":{},"sourceType":"module"}