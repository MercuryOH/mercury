{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Accordion, List, Button } from 'semantic-ui-react';\n\nvar DropDown = /*#__PURE__*/function (_Component) {\n  _inherits(DropDown, _Component);\n\n  var _super = _createSuper(DropDown);\n\n  function DropDown() {\n    var _this;\n\n    _classCallCheck(this, DropDown);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      activeIndexs: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e, titleProps) {\n      var index = titleProps.index;\n      var activeIndexs = _this.state.activeIndexs;\n      var newIndex = activeIndexs;\n      var currentIndexPosition = activeIndexs.indexOf(index);\n\n      if (currentIndexPosition > -1) {\n        newIndex.splice(currentIndexPosition, 1);\n      } else {\n        newIndex.push(index);\n      }\n\n      _this.setState({\n        activeIndexs: newIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(DropDown, [{\n    key: \"render\",\n    value: function render() {\n      var activeIndexs = this.state.activeIndexs;\n      var colors = ['red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown', 'gray', 'black'];\n      var sClasses = ['CS 2110', 'CS 2800', 'MATH 2940'];\n      var taClasses = ['CS 1110'];\n\n      function zip() {\n        var args = [].slice.call(arguments);\n        var shortest = args.length == 0 ? [] : args.reduce(function (a, b) {\n          return a.length < b.length ? a : b;\n        });\n        return shortest.map(function (_, i) {\n          return args.map(function (array) {\n            return array[i];\n          });\n        });\n      }\n\n      return __jsx(\"div\", null, __jsx(Accordion, {\n        fluid: true,\n        exclusive: false,\n        defaultActiveIndex: [0, 1],\n        panels: [{\n          key: 'student',\n          title: 'Student',\n          content: {\n            content: __jsx(\"div\", null, __jsx(List, {\n              relaxed: true\n            }, zip(colors, sClasses).map(function (zipped) {\n              return __jsx(List.Item, null, __jsx(List.Content, null, __jsx(Button, {\n                color: zipped[0],\n                content: zipped[1],\n                style: {\n                  fontSize: '1vw',\n                  width: '100%',\n                  minWidth: '41px'\n                }\n              })));\n            })))\n          }\n        }, {\n          key: 'ta',\n          title: 'TA',\n          content: {\n            content: __jsx(\"div\", null, __jsx(List, {\n              relaxed: true\n            }, zip(colors, taClasses).map(function (zipped) {\n              return __jsx(List.Item, null, __jsx(List.Content, null, __jsx(Button, {\n                color: zipped[0],\n                content: zipped[1],\n                style: {\n                  fontSize: '1vw',\n                  width: '100%',\n                  minWidth: '41px'\n                }\n              })));\n            })))\n          }\n        }]\n      }));\n    }\n  }]);\n\n  return DropDown;\n}(Component);\n\nexport { DropDown as default };","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/dropDown.js"],"names":["React","Component","Accordion","List","Button","DropDown","activeIndexs","e","titleProps","index","state","newIndex","currentIndexPosition","indexOf","splice","push","setState","colors","sClasses","taClasses","zip","args","slice","call","arguments","shortest","length","reduce","a","b","map","_","i","array","key","title","content","zipped","fontSize","width","minWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Accordion, List, Button} from 'semantic-ui-react'\r\n\r\nexport default class DropDown extends Component {\r\n  state = { activeIndexs: [] }\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps\r\n    const { activeIndexs } = this.state\r\n    const newIndex = activeIndexs\r\n\r\n    const currentIndexPosition = activeIndexs.indexOf(index)\r\n    if (currentIndexPosition > -1) {\r\n      newIndex.splice(currentIndexPosition, 1)\r\n    } else {\r\n      newIndex.push(index)\r\n    }\r\n\r\n    this.setState({ activeIndexs: newIndex })\r\n  }\r\n\r\n  render() {\r\n    const { activeIndexs } = this.state\r\n\r\n    const colors = [\r\n      'red',\r\n      'orange',\r\n      'yellow',\r\n      'olive',\r\n      'green',\r\n      'teal',\r\n      'blue',\r\n      'violet',\r\n      'purple',\r\n      'pink',\r\n      'brown',\r\n      'gray',\r\n      'black',\r\n    ]\r\n\r\n    const sClasses = [\r\n      'CS 2110',\r\n      'CS 2800',\r\n      'MATH 2940',\r\n    ]\r\n\r\n    const taClasses = [\r\n      'CS 1110',\r\n    ]\r\n\r\n    function zip() {\r\n      var args = [].slice.call(arguments);\r\n      var shortest = args.length==0 ? [] : args.reduce(function(a,b){\r\n        return a.length<b.length ? a : b\r\n      });\r\n\r\n      return shortest.map(function(_,i){\r\n        return args.map(function(array){return array[i]})\r\n      });\r\n\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {/* <Accordion>\r\n          <Accordion.Title\r\n            active={activeIndexs.includes(0)}\r\n            index={0}\r\n            onClick={this.handleClick}\r\n          >\r\n            <Icon name=\"dropdown\" style = {{fontSize: '1vw', width: '20%', float: 'left'}}/>\r\n            <p style = {{fontSize: '1vw', width: '75%', float: 'left', marginBottom: '4%'}}>Student</p>\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndexs.includes(0)}>\r\n            <div className=\"ui selection list\" style = {{fontSize: '1vw', width: '100%'}}>\r\n              <a className=\"item\">\r\n                <div style = {{fontSize: '1vw', width: '100%', marginBottom: '4%'}} className=\"ui blue horizontal label\">CS 2110</div>\r\n              </a>\r\n              <a className=\"item\">\r\n                <div style = {{fontSize: '1vw', width: '100%', marginBottom: '4%'}} className=\"ui green horizontal label\">CS 2800</div>\r\n              </a>\r\n              <a className=\"item\">\r\n                <div style = {{fontSize: '1vw', width: '100%', marginBottom: '4%'}} className=\"ui purple horizontal label\">Math 2940</div>\r\n              </a>\r\n            </div>\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndexs.includes(1)}\r\n            index={1}\r\n            onClick={this.handleClick}\r\n          >\r\n            <Icon style = {{fontSize: '1vw', width: '20%', float: 'left'}} name=\"dropdown\" />\r\n            <p style = {{fontSize: '1vw', width: '75%', float: 'left', marginBottom: '4%'}}>TA</p>\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndexs.includes(1)}>\r\n            <div style = {{fontSize: '1vw', width: '100%'}} className=\"ui selection list\">\r\n              <a className=\"item\">\r\n                <div style = {{fontSize: '1vw', width: '100%', marginBottom: '4%'}} className=\"ui orange horizontal label\">CS 1110</div>\r\n              </a>\r\n            </div>\r\n          </Accordion.Content>\r\n        </Accordion> */}\r\n        <Accordion\r\n          fluid\r\n          exclusive={false}\r\n          defaultActiveIndex={[0, 1]}\r\n          panels={[\r\n            {\r\n              key: 'student',\r\n              title: 'Student',\r\n              content: {\r\n                content: (\r\n                  <div>\r\n                    <List relaxed>\r\n                      {zip(colors, sClasses).map((zipped) => (\r\n                        <List.Item>\r\n                          <List.Content>\r\n                            <Button color={zipped[0]} content = {zipped[1]} style={{fontSize: '1vw', width: '100%', minWidth: '41px'}}></Button>\r\n                          </List.Content>\r\n                        </List.Item>\r\n                      ))}\r\n                    </List>\r\n                  </div>\r\n                ),\r\n              },\r\n            },\r\n            {\r\n              key: 'ta',\r\n              title: 'TA',\r\n              content: {\r\n                content: (\r\n                  <div>\r\n                    <List relaxed>\r\n                    {zip(colors, taClasses).map((zipped) => (\r\n                      <List.Item>\r\n                        <List.Content>\r\n                          <Button color={zipped[0]} content = {zipped[1]} style={{fontSize: '1vw', width: '100%', minWidth: '41px'}}></Button>\r\n                        </List.Content>\r\n                      </List.Item>\r\n                    ))}\r\n                    </List>\r\n                  </div>\r\n                ),\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}