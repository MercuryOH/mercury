{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Header, Search, Input } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { EventEmitter } from './util/EventEmitter';\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\n\nclass CreateGroupModal extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"formatAsResults\", user => {\n      console.log(_objectSpread({\n        title: user.email\n      }, user));\n      return {\n        title: user.email,\n        id: user.id,\n        description: user.firstName + ' ' + user.lastName\n      };\n    });\n\n    _defineProperty(this, \"handleResultSelect\", (e, {\n      result\n    }) => this.setState({\n      value: result.title\n    }));\n\n    _defineProperty(this, \"handleSearchChange\", (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.title);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(this.state.allUsers.map(this.formatAsResults), isMatch)\n        });\n      }, 300);\n    });\n\n    _defineProperty(this, \"createGroup\", () => {\n      if (!this.state.groupName) return;\n      this.setState({\n        modalState: false\n      });\n      this.props.onCreate({\n        name: this.state.groupName,\n        type: 'group'\n      });\n    });\n\n    this.state = {\n      modalState: false,\n      groupName: '',\n      isLoading: false,\n      results: [],\n      value: '',\n      allUsers: []\n    };\n    EventEmitter.subscribe('allUsersInClass', users => {\n      this.setState({\n        allUsers: users\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Modal, {\n      style: {\n        borderless: 'true',\n        width: '40%',\n        height: '40%'\n      },\n      trigger: __jsx(Button, {\n        color: \"teal\",\n        icon: \"add\",\n        content: \"New Group\",\n        fluid: true,\n        style: {\n          fontSize: '1vw'\n        },\n        onClick: () => this.setState({\n          modalState: true\n        })\n      }),\n      open: this.state.modalState,\n      onClose: () => this.setState({\n        modalState: false\n      }),\n      closeOnDimmerClick: false,\n      closeOnEscape: false,\n      closeIcon: true\n    }, __jsx(Modal.Content, {\n      style: {\n        borderless: 'true'\n      }\n    }, __jsx(Header, {\n      style: {\n        fontSize: '2vw',\n        textAlign: 'center',\n        width: '100%',\n        padding: '5%',\n        height: '50%',\n        margin: 'auto'\n      },\n      content: 'New Private Group'\n    }), __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '5%'\n      }\n    }, __jsx(Input, {\n      fluid: true,\n      placeholder: \"Group name\",\n      name: \"name\",\n      value: this.state.groupName,\n      onChange: e => this.setState({\n        groupName: e.target.value\n      })\n    }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Search, {\n      fluid: true,\n      placeholder: 'Add students to your group...',\n      input: {\n        fluid: true\n      },\n      loading: this.state.isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: this.state.results,\n      value: this.state.value\n    })), __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        width: '70%',\n        height: '70%',\n        margin: 'auto',\n        padding: '5%'\n      }\n    }, __jsx(Button, {\n      color: \"teal\",\n      style: {\n        width: '50%',\n        fontSize: '1vw'\n      },\n      onClick: this.createGroup,\n      content: 'Create'\n    })))));\n  }\n\n}\n\nCreateGroupModal.propTypes = {\n  onCreate: PropTypes.func.isRequired\n};\nexport default CreateGroupModal;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/createGroupModal.js"],"names":["React","Component","PropTypes","Modal","Button","Header","Search","Input","_","EventEmitter","initialState","isLoading","results","value","CreateGroupModal","constructor","props","user","console","log","title","email","id","description","firstName","lastName","e","result","setState","setTimeout","state","length","re","RegExp","escapeRegExp","isMatch","test","filter","allUsers","map","formatAsResults","groupName","modalState","onCreate","name","type","subscribe","users","render","borderless","width","height","fontSize","textAlign","padding","margin","target","fluid","handleResultSelect","debounce","handleSearchChange","leading","createGroup","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Modal, Button, Header, Search, Input } from 'semantic-ui-react'\r\nimport _ from 'lodash'\r\nimport { EventEmitter } from './util/EventEmitter'\r\n\r\nconst initialState = { isLoading: false, results: [], value: '' }\r\n\r\nclass CreateGroupModal extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      modalState: false,\r\n      groupName: '',\r\n      isLoading: false,\r\n      results: [],\r\n      value: '',\r\n      allUsers: [],\r\n    }\r\n\r\n    EventEmitter.subscribe('allUsersInClass', (users) => {\r\n      this.setState({ allUsers: users })\r\n    })\r\n  }\r\n\r\n  formatAsResults = (user) => {\r\n    console.log({ title: user.email, ...user })\r\n    return {\r\n      title: user.email,\r\n      id: user.id,\r\n      description: user.firstName + ' ' + user.lastName,\r\n    }\r\n  }\r\n\r\n  handleResultSelect = (e, { result }) => this.setState({ value: result.title })\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value })\r\n\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = (result) => re.test(result.title)\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(\r\n          this.state.allUsers.map(this.formatAsResults),\r\n          isMatch\r\n        ),\r\n      })\r\n    }, 300)\r\n  }\r\n\r\n  createGroup = () => {\r\n    if (!this.state.groupName) return\r\n\r\n    this.setState({ modalState: false })\r\n    this.props.onCreate({ name: this.state.groupName, type: 'group' })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          style={{ borderless: 'true', width: '40%', height: '40%' }}\r\n          trigger={\r\n            <Button\r\n              color=\"teal\"\r\n              icon=\"add\"\r\n              content=\"New Group\"\r\n              fluid\r\n              style={{ fontSize: '1vw' }}\r\n              onClick={() => this.setState({ modalState: true })}\r\n            />\r\n          }\r\n          open={this.state.modalState}\r\n          onClose={() => this.setState({ modalState: false })}\r\n          closeOnDimmerClick={false}\r\n          closeOnEscape={false}\r\n          closeIcon\r\n        >\r\n          <Modal.Content style={{ borderless: 'true' }}>\r\n            <Header\r\n              style={{\r\n                fontSize: '2vw',\r\n                textAlign: 'center',\r\n                width: '100%',\r\n                padding: '5%',\r\n                height: '50%',\r\n                margin: 'auto',\r\n              }}\r\n              content={'New Private Group'}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                padding: '5%',\r\n              }}\r\n            >\r\n              <Input\r\n                fluid\r\n                placeholder=\"Group name\"\r\n                name=\"name\"\r\n                value={this.state.groupName}\r\n                onChange={(e) => this.setState({ groupName: e.target.value })}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Search\r\n                fluid\r\n                placeholder={'Add students to your group...'}\r\n                input={{ fluid: true }}\r\n                loading={this.state.isLoading}\r\n                onResultSelect={this.handleResultSelect}\r\n                onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n                  leading: true,\r\n                })}\r\n                results={this.state.results}\r\n                value={this.state.value}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                width: '70%',\r\n                height: '70%',\r\n                margin: 'auto',\r\n                padding: '5%',\r\n              }}\r\n            >\r\n              <Button\r\n                color=\"teal\"\r\n                style={{ width: '50%', fontSize: '1vw' }}\r\n                onClick={this.createGroup}\r\n                content={'Create'}\r\n              />\r\n            </div>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nCreateGroupModal.propTypes = {\r\n  onCreate: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default CreateGroupModal\r\n"]},"metadata":{},"sourceType":"module"}