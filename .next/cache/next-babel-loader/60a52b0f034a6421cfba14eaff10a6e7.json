{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\n\nvar FormHTMLEditor = /*#__PURE__*/function (_Component) {\n  _inherits(FormHTMLEditor, _Component);\n\n  var _super = _createSuper(FormHTMLEditor);\n\n  function FormHTMLEditor(props) {\n    var _this;\n\n    _classCallCheck(this, FormHTMLEditor);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"modules\", {\n      toolbar: [[{\n        header: [1, 2, false]\n      }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n        list: 'ordered'\n      }, {\n        list: 'bullet'\n      }, {\n        indent: '-1'\n      }, {\n        indent: '+1'\n      }], ['link', 'image'], ['clean']],\n      clipboard: {\n        matchVisual: false\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formats\", ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image']);\n\n    if (true) {\n      _this.ReactQuill = require('react-quill');\n    }\n\n    return _this;\n  }\n\n  _createClass(FormHTMLEditor, [{\n    key: \"onChange\",\n    value: function onChange(event) {\n      console.log(event);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ReactQuill = this.ReactQuill;\n\n      if (true && ReactQuill) {\n        return __jsx(ReactQuill, {\n          modules: this.modules,\n          formats: this.formats,\n          defaultValue: this.props.defaultValue,\n          onChange: this.props.onChange,\n          placeholder: 'Enter Comment'\n        });\n      } else {\n        return __jsx(\"textarea\", null);\n      }\n    }\n  }]);\n\n  return FormHTMLEditor;\n}(Component);\n\nexport { FormHTMLEditor as default };","map":null,"metadata":{},"sourceType":"module"}