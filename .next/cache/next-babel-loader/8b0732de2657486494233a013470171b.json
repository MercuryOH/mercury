{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { OTSession, OTPublisher, OTStreams, OTSubscriber } from 'opentok-react';\nimport { Button } from 'semantic-ui-react';\n\nclass Vonage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handlePublish\", () => {\n      console.log('Successfully published!');\n    });\n\n    _defineProperty(this, \"handleSubscribe\", () => {\n      console.log('Subscribed!');\n    });\n\n    _defineProperty(this, \"handleSessionError\", error => {\n      console.error(error);\n    });\n\n    _defineProperty(this, \"handlePublishError\", error => {\n      console.error(error);\n    });\n\n    _defineProperty(this, \"handleSubscribeError\", error => {\n      console.error(error);\n    });\n\n    this.sessionEventHandlers = {\n      sessionConnected: () => {},\n      sessionDisconnected: () => {},\n      sessionReconnected: () => {},\n      sessionReconnecting: () => {}\n    };\n    this.publishEventHandlers = {\n      accessDenied: () => {},\n      streamCreated: () => {},\n      streamDestroyed: () => {}\n    };\n    this.subscribeEventHandlers = {\n      videoEnabled: () => {},\n      videoDisabled: () => {}\n    };\n  }\n\n  render() {\n    const {\n      sessionId,\n      token,\n      onLeave\n    } = this.props;\n    return __jsx(\"div\", null, __jsx(OTSession, {\n      apiKey: process.env.NEXT_PUBLIC_VV_API_KEY,\n      sessionId: sessionId,\n      token: token,\n      eventHandlers: this.sessionEventHandlers,\n      onError: this.handleSessionError\n    }, __jsx(OTPublisher, {\n      properties: {\n        publishAudio: true,\n        width: '100%',\n        height: '70vh'\n      },\n      onPublish: this.handlePublish,\n      eventHandlers: this.publishEventHandlers,\n      onError: this.handlePublishError\n    }), __jsx(OTStreams, null, __jsx(OTSubscriber, {\n      properties: {\n        width: '15%',\n        height: '15vh'\n      },\n      onSubscribe: this.handleSubscribe,\n      onError: this.handleSubscribeError\n    })), __jsx(Button, {\n      onClick: onLeave,\n      color: \"red\",\n      icon: \"close\",\n      content: \"Leave call\"\n    })));\n  }\n\n}\n\nVonage.propTypes = {\n  sessionId: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  onLeave: PropTypes.func.isRequired\n};\nexport default Vonage;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/vonage.js"],"names":["React","PropTypes","OTSession","OTPublisher","OTStreams","OTSubscriber","Button","Vonage","Component","constructor","props","console","log","error","sessionEventHandlers","sessionConnected","sessionDisconnected","sessionReconnected","sessionReconnecting","publishEventHandlers","accessDenied","streamCreated","streamDestroyed","subscribeEventHandlers","videoEnabled","videoDisabled","render","sessionId","token","onLeave","process","env","NEXT_PUBLIC_VV_API_KEY","handleSessionError","publishAudio","width","height","handlePublish","handlePublishError","handleSubscribe","handleSubscribeError","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { OTSession, OTPublisher, OTStreams, OTSubscriber } from 'opentok-react'\nimport { Button } from 'semantic-ui-react'\n\nclass Vonage extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.sessionEventHandlers = {\n      sessionConnected: () => {},\n      sessionDisconnected: () => {},\n      sessionReconnected: () => {},\n      sessionReconnecting: () => {},\n    }\n\n    this.publishEventHandlers = {\n      accessDenied: () => {},\n      streamCreated: () => {},\n      streamDestroyed: () => {},\n    }\n\n    this.subscribeEventHandlers = {\n      videoEnabled: () => {},\n      videoDisabled: () => {},\n    }\n  }\n\n  handlePublish = () => {\n    console.log('Successfully published!')\n  }\n\n  handleSubscribe = () => {\n    console.log('Subscribed!')\n  }\n\n  handleSessionError = (error) => {\n    console.error(error)\n  }\n\n  handlePublishError = (error) => {\n    console.error(error)\n  }\n\n  handleSubscribeError = (error) => {\n    console.error(error)\n  }\n\n  render() {\n    const { sessionId, token, onLeave } = this.props\n\n    return (\n      <div>\n        <OTSession\n          apiKey={process.env.NEXT_PUBLIC_VV_API_KEY}\n          sessionId={sessionId}\n          token={token}\n          eventHandlers={this.sessionEventHandlers}\n          onError={this.handleSessionError}\n        >\n          <OTPublisher\n            properties={{ publishAudio: true, width: '100%', height: '70vh'}}\n            onPublish={this.handlePublish}\n            eventHandlers={this.publishEventHandlers}\n            onError={this.handlePublishError}\n          />\n          <OTStreams>\n            <OTSubscriber\n              properties={{ width: '15%', height: '15vh' }}\n              onSubscribe={this.handleSubscribe}\n              onError={this.handleSubscribeError}\n            />\n          </OTStreams>\n          <Button\n            onClick={onLeave}\n            color=\"red\"\n            icon=\"close\"\n            content=\"Leave call\"\n          />\n        </OTSession>\n      </div>\n    )\n  }\n}\n\nVonage.propTypes = {\n  sessionId: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  onLeave: PropTypes.func.isRequired,\n}\n\nexport default Vonage\n"]},"metadata":{},"sourceType":"module"}