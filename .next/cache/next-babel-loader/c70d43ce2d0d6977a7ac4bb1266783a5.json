{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nexport default class FormHTMLEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"modules\", {\n      toolbar: [[{\n        header: [1, 2, false]\n      }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n        list: 'ordered'\n      }, {\n        list: 'bullet'\n      }, {\n        indent: '-1'\n      }, {\n        indent: '+1'\n      }], ['link', 'image'], ['clean']],\n      clipboard: {\n        matchVisual: false\n      }\n    });\n\n    _defineProperty(this, \"formats\", ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image']);\n\n    if (false) {\n      this.ReactQuill = require('react-quill');\n    }\n  }\n\n  onChange(event) {\n    console.log(event);\n  }\n\n  render() {\n    const ReactQuill = this.ReactQuill;\n\n    if (false && ReactQuill) {\n      return __jsx(ReactQuill, {\n        modules: this.modules,\n        formats: this.formats,\n        defaultValue: this.props.defaultValue,\n        onChange: this.props.onChange,\n        placeholder: 'Enter Comment'\n      });\n    } else {\n      return __jsx(\"textarea\", null);\n    }\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}