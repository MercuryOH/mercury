{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Accordion, List, Button } from 'semantic-ui-react';\nimport { withRouter } from 'next/router';\nimport { AuthRequired } from '../components/authProvider';\nimport { EventEmitter } from '../components/util/EventEmitter';\nimport * as api from '../util/mercuryService';\nimport _ from 'lodash';\nimport Link from 'next/Link';\nimport ModifyClassesModal from './modifyClassesModal';\n\nclass DropDown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: '',\n      classes: [],\n      colors: ['red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown', 'gray', 'black']\n    };\n  }\n\n  componentDidMount() {\n    api.getClasses().then(classes => this.setState({\n      classes\n    })).then(() => api.getMe()).then(me => {\n      this.setState({\n        userId: me.id\n      });\n    });\n    EventEmitter.subscribe('currentlyEnrolled', classes => {\n      this.setState({\n        classes\n      });\n    });\n    console.log(this.state.classes);\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Accordion, {\n      fluid: true,\n      exclusive: false,\n      defaultActiveIndex: [0, 1],\n      style: {\n        fontSize: '1vw'\n      },\n      panels: [{\n        key: 'student',\n        title: 'Student',\n        content: {\n          content: __jsx(\"div\", null, __jsx(List, {\n            relaxed: true\n          }, __jsx(React.Fragment, null, _.zip(_.dropRight(this.state.colors, this.state.colors.length - this.state.classes.length), this.state.classes).filter(zipped => zipped[1].role === 'Student').map(zipped => __jsx(List.Item, {\n            key: `class_${zipped[1].id}`\n          }, __jsx(List.Content, null, __jsx(Link, {\n            href: `/classes/${zipped[1].id}`\n          }, __jsx(Button, {\n            style: {\n              fontSize: '1vw',\n              width: '100%',\n              minWidth: '41px'\n            },\n            color: zipped[0],\n            content: zipped[1].name\n          }))))))))\n        }\n      }, {\n        key: 'ta',\n        title: 'TA',\n        content: {\n          content: __jsx(\"div\", null, __jsx(List, {\n            relaxed: true\n          }, _.zip(_.dropRight(this.state.colors, this.state.colors.length - this.state.classes.length), this.state.classes).filter(zipped => zipped[1].role === 'Professor').map(zipped => __jsx(List.Item, {\n            key: `class_${zipped[1].id}`\n          }, __jsx(List.Content, null, __jsx(Button, {\n            style: {\n              fontSize: '1vw',\n              width: '100%',\n              minWidth: '41px'\n            },\n            color: zipped[0],\n            content: zipped[1].name,\n            onClick: () => {\n              EventEmitter.publish('createTAOffice', {\n                classId: zipped[1].id,\n                userId: this.state.userId\n              });\n              this.props.router.push(`/classes/${zipped[1].id}`);\n            }\n          }))))))\n        }\n      }]\n    }), __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 68px)',\n        bottom: 14,\n        fontSize: '1vw',\n        minWidth: '41px'\n      }\n    }, __jsx(ModifyClassesModal, null)));\n  }\n\n}\n\nexport default withRouter(DropDown);","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/dropDown.js"],"names":["React","Component","Accordion","List","Button","withRouter","AuthRequired","EventEmitter","api","_","Link","ModifyClassesModal","DropDown","constructor","props","state","userId","classes","colors","componentDidMount","getClasses","then","setState","getMe","me","id","subscribe","console","log","render","fontSize","key","title","content","zip","dropRight","length","filter","zipped","role","map","width","minWidth","name","publish","classId","router","push","position","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Accordion, List, Button } from 'semantic-ui-react'\r\nimport { withRouter } from 'next/router'\r\nimport { AuthRequired } from '../components/authProvider'\r\nimport { EventEmitter } from '../components/util/EventEmitter'\r\nimport * as api from '../util/mercuryService'\r\nimport _ from 'lodash'\r\nimport Link from 'next/Link'\r\nimport ModifyClassesModal from './modifyClassesModal'\r\n\r\nclass DropDown extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      userId: '',\r\n      classes: [],\r\n      colors: [\r\n        'red',\r\n        'orange',\r\n        'yellow',\r\n        'olive',\r\n        'green',\r\n        'teal',\r\n        'blue',\r\n        'violet',\r\n        'purple',\r\n        'pink',\r\n        'brown',\r\n        'gray',\r\n        'black',\r\n      ],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    api\r\n      .getClasses()\r\n      .then((classes) => this.setState({classes}))\r\n\r\n      .then(()=>api.getMe())\r\n      .then((me) => {\r\n        this.setState({ userId: me.id })\r\n      })\r\n\r\n    EventEmitter.subscribe('currentlyEnrolled', (classes) =>{this.setState({ classes })\r\n    }\r\n      \r\n    )\r\n    console.log(this.state.classes)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Accordion\r\n          fluid\r\n          exclusive={false}\r\n          defaultActiveIndex={[0, 1]}\r\n          style={{ fontSize: '1vw' }}\r\n          panels={[\r\n            {\r\n              key: 'student',\r\n              title: 'Student',\r\n              content: {\r\n                content: (\r\n                  <div>\r\n                    <List relaxed>\r\n                      <>\r\n                        {_.zip(\r\n                          _.dropRight(\r\n                            this.state.colors,\r\n                            this.state.colors.length - this.state.classes.length\r\n                          ),\r\n                          this.state.classes\r\n                        )\r\n                          .filter((zipped) => zipped[1].role === 'Student')\r\n                          .map((zipped) => (\r\n                            <List.Item key={`class_${zipped[1].id}`}>\r\n                              <List.Content>\r\n                                <Link href={`/classes/${zipped[1].id}`}>\r\n                                  <Button\r\n                                    style={{\r\n                                      fontSize: '1vw',\r\n                                      width: '100%',\r\n                                      minWidth: '41px',\r\n                                    }}\r\n                                    color={zipped[0]}\r\n                                    content={zipped[1].name}\r\n                                  />\r\n                                </Link>\r\n                              </List.Content>\r\n                            </List.Item>\r\n                          ))}\r\n                      </>\r\n                    </List>\r\n                  </div>\r\n                ),\r\n              },\r\n            },\r\n            {\r\n              key: 'ta',\r\n              title: 'TA',\r\n              content: {\r\n                content: (\r\n                  <div>\r\n                    <List relaxed>\r\n                      {_.zip(\r\n                        _.dropRight(\r\n                          this.state.colors,\r\n                          this.state.colors.length - this.state.classes.length\r\n                        ),\r\n                        this.state.classes\r\n                      )\r\n                        .filter((zipped) => zipped[1].role === 'Professor')\r\n                        .map((zipped) => (\r\n                          <List.Item key={`class_${zipped[1].id}`}>\r\n                            <List.Content>\r\n                              <Button\r\n                                style={{\r\n                                  fontSize: '1vw',\r\n                                  width: '100%',\r\n                                  minWidth: '41px',\r\n                                }}\r\n                                color={zipped[0]}\r\n                                content={zipped[1].name}\r\n                                onClick={() => {\r\n                                  EventEmitter.publish('createTAOffice', {\r\n                                    classId: zipped[1].id,\r\n                                    userId: this.state.userId,\r\n                                  })\r\n                                  this.props.router.push(\r\n                                    `/classes/${zipped[1].id}`\r\n                                  )\r\n                                }}\r\n                              />\r\n                            </List.Content>\r\n                          </List.Item>\r\n                        ))}\r\n                    </List>\r\n                  </div>\r\n                ),\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            width: 'calc(100% - 68px)',\r\n            bottom: 14,\r\n            fontSize: '1vw',\r\n            minWidth: '41px',\r\n          }}\r\n        >\r\n          <ModifyClassesModal />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withRouter(DropDown)\r\n"]},"metadata":{},"sourceType":"module"}