{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../../util/mercuryService';\nimport StudentQueueView from './student/studentQueueView';\nimport TAQueueView from './ta/taQueueView';\n\nvar Queue = /*#__PURE__*/function (_Component) {\n  _inherits(Queue, _Component);\n\n  var _super = _createSuper(Queue);\n\n  function Queue(props) {\n    var _this;\n\n    _classCallCheck(this, Queue);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isDataLoaded: false,\n      me: {},\n      classData: [],\n      office: {}\n    };\n    return _this;\n  }\n\n  _createClass(Queue, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.courseId = Number(window.location.href.split('/')[4]);\n      var me = {};\n      var classData = {};\n      var office = {};\n      api.getMe().then(function (meData) {\n        me = meData;\n      }).then(function () {\n        return api.getClasses();\n      }).then(function (classPayload) {\n        classData = classPayload;\n      }).then(function () {\n        return api.getClass(_this2.courseId);\n      }).then(function (cclass) {\n        office = cclass.groups.find(function (group) {\n          return group.type === 'office';\n        });\n      }).then(function () {\n        return _this2.setState({\n          me: me,\n          classData: classData,\n          office: office,\n          isDataLoaded: true\n        });\n      });\n    }\n  }, {\n    key: \"getRoleForClass\",\n    value: function getRoleForClass() {\n      var _this3 = this;\n\n      var classData = this.state.classData;\n      var userRole = null;\n      classData.forEach(function (row) {\n        var id = row.id,\n            role = row.role;\n\n        if (_this3.courseId === Number(id)) {\n          userRole = role;\n        }\n      });\n      return userRole;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isDataLoaded = _this$state.isDataLoaded,\n          me = _this$state.me,\n          office = _this$state.office;\n\n      if (!isDataLoaded) {\n        return null;\n      }\n\n      if (this.getRoleForClass() === 'Student') {\n        return __jsx(StudentQueueView, {\n          me: me,\n          onJoin: this.props.onJoin,\n          office: office,\n          classId: this.courseId\n        });\n      }\n\n      return __jsx(TAQueueView, {\n        me: me,\n        onJoin: this.props.onJoin\n      });\n    }\n  }]);\n\n  return Queue;\n}(Component);\n\nQueue.propTypes = {\n  onJoin: PropTypes.func.isRequired\n};\nexport default Queue;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/queue/queue.js"],"names":["React","Component","PropTypes","api","StudentQueueView","TAQueueView","Queue","props","state","isDataLoaded","me","classData","office","courseId","Number","window","location","href","split","getMe","then","meData","getClasses","classPayload","getClass","cclass","groups","find","group","type","setState","userRole","forEach","row","id","role","getRoleForClass","onJoin","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport * as api from '../../util/mercuryService'\r\nimport StudentQueueView from './student/studentQueueView'\r\nimport TAQueueView from './ta/taQueueView'\r\n\r\nclass Queue extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isDataLoaded: false,\r\n      me: {},\r\n      classData: [],\r\n      office: {},\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.courseId = Number(window.location.href.split('/')[4])\r\n\r\n    let me = {}\r\n    let classData = {}\r\n    let office = {}\r\n\r\n    api\r\n      .getMe()\r\n      .then((meData) => {\r\n        me = meData\r\n      })\r\n      .then(() => api.getClasses())\r\n      .then((classPayload) => {\r\n        classData = classPayload\r\n      })\r\n\r\n      .then(() => api.getClass(this.courseId))\r\n      .then((cclass) => {\r\n        office = cclass.groups.find((group) => group.type === 'office')\r\n      })\r\n\r\n      .then(() => this.setState({ me, classData, office, isDataLoaded: true }))\r\n  }\r\n\r\n  getRoleForClass() {\r\n    const { classData } = this.state\r\n    let userRole = null\r\n\r\n    classData.forEach((row) => {\r\n      let { id, role } = row\r\n      if (this.courseId === Number(id)) {\r\n        userRole = role\r\n      }\r\n    })\r\n\r\n    return userRole\r\n  }\r\n\r\n  render() {\r\n    const { isDataLoaded, me, office } = this.state\r\n    if (!isDataLoaded) {\r\n      return null\r\n    }\r\n\r\n    if (this.getRoleForClass() === 'Student') {\r\n      return (\r\n        <StudentQueueView me={me} onJoin={this.props.onJoin} office={office} classId = {this.courseId}/>\r\n      )\r\n    }\r\n\r\n    return <TAQueueView me={me} onJoin={this.props.onJoin} />\r\n  }\r\n}\r\n\r\nQueue.propTypes = {\r\n  onJoin: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Queue\r\n"]},"metadata":{},"sourceType":"module"}