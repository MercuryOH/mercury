{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport Layout from '../../components/layout';\nimport { Button, Accordion, List } from 'semantic-ui-react';\nimport { AuthRequired } from '../../components/authProvider';\nimport Queue from '../../components/queue/queue';\nimport * as api from '../../util/mercuryService';\nimport CreateGroupModal from '../../components/createGroupModal';\nconst Vonage = dynamic(() => import('../../components/vonage'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/vonage')],\n    modules: ['../../components/vonage']\n  }\n});\n\nfunction ClassPage() {\n  const router = useRouter();\n  const {\n    0: groups,\n    1: setGroups\n  } = useState([]);\n  const {\n    0: currentClass,\n    1: setCurrentClass\n  } = useState({\n    id: \"\",\n    name: \"bob\",\n    groups: []\n  });\n  const {\n    0: vonageCred,\n    1: setVonageCred\n  } = useState(null);\n  const {\n    classId\n  } = router.query;\n  useEffect(() => {\n    if (!classId) return;\n    const c = api.getClassNG(classId);\n    setCurrentClasses(c);\n    console.log(currentClass.name);\n  }, [classId]);\n  useEffect(() => {\n    if (!classId) return;\n    api.getGroups(classId).then(groups => setGroups(groups)).catch(console.error);\n  }, [classId]);\n  /*useEffect(() => {\n    api\n      .getClasses()\n      .then((classes) => setClasses(groups))\n      .catch(console.error)\n  }, [])\n   function getClassName(classList) {\n    var correctClass = ''\n    classList.forEach((c) => {\n      if (c.id === classId) {\n        correctClass = c.name\n      }\n    })\n    return correctClass\n  }*/\n\n  const handleBack = () => {\n    router.push('/calendar');\n  };\n\n  const handleSelectGroup = group => {\n    api.postGroupToken(classId, group.id).then(({\n      token\n    }) => setVonageCred({\n      sessionId: group.sessionId,\n      token\n    })).catch(console.error);\n  };\n\n  return __jsx(Layout, {\n    left: __jsx(\"div\", {\n      style: {\n        height: '100%',\n        marginLeft: '2.5%'\n      }\n    }, __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 12,\n        width: '100%'\n      },\n      fluid: true\n    }, __jsx(Button, {\n      compact: true,\n      icon: \"angle left\" //content= \"class.name\"\n      ,\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'left',\n        width: '75%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      onClick: handleBack\n    }, currentClass.name), __jsx(Button, {\n      compact: true,\n      icon: \"setting\",\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'center',\n        width: '15%',\n        marginBottom: '2%',\n        minWidth: '14px'\n      }\n    })), __jsx(Accordion, {\n      fluid: true,\n      exclusive: false,\n      defaultActiveIndex: [0, 1],\n      style: {\n        fontSize: '1vw',\n        textAlign: 'left',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      panels: [{\n        key: 'discussions',\n        title: 'Discussions',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20\n            }\n          }, __jsx(List, {\n            relaxed: true\n          }, groups.filter(group => group.type === 'discussion').map(group => __jsx(List.Item, {\n            key: `discussion_${group.id}`,\n            onClick: () => handleSelectGroup(group),\n            style: {\n              fontSize: '.8vw',\n              textAlign: 'left',\n              width: '75%',\n              marginBottom: '2%',\n              minWidth: '41px'\n            }\n          }, __jsx(List.Icon, {\n            name: \"sound\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name))))))\n        }\n      }, {\n        key: 'private-groups',\n        title: 'Private Groups',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20\n            }\n          }, __jsx(List, {\n            relaxed: true\n          }, groups.filter(group => group.type === 'group').map(group => __jsx(List.Item, {\n            key: `private_group_${group.id}`,\n            onClick: () => handleSelectGroup(group),\n            style: {\n              fontSize: '.6vw',\n              textAlign: 'left',\n              width: '75%',\n              marginBottom: '2%',\n              minWidth: '41px'\n            }\n          }, __jsx(List.Icon, {\n            name: \"lock\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name))))))\n        }\n      }]\n    }), __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14\n      }\n    }, __jsx(CreateGroupModal, null))),\n    right: __jsx(Queue, null)\n  }, vonageCred && __jsx(Vonage, {\n    sessionId: vonageCred.sessionId,\n    token: vonageCred.token,\n    onLeave: () => setVonageCred(null)\n  }));\n}\n\nexport default AuthRequired(ClassPage);","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/pages/classes/[classId].js"],"names":["React","useEffect","useState","useRouter","dynamic","Layout","Button","Accordion","List","AuthRequired","Queue","api","CreateGroupModal","Vonage","ssr","ClassPage","router","groups","setGroups","currentClass","setCurrentClass","id","name","vonageCred","setVonageCred","classId","query","c","getClassNG","setCurrentClasses","console","log","getGroups","then","catch","error","handleBack","push","handleSelectGroup","group","postGroupToken","token","sessionId","height","marginLeft","marginBottom","width","fontSize","textAlign","minWidth","key","title","content","paddingLeft","filter","type","map","position","bottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport dynamic from 'next/dynamic'\nimport Layout from '../../components/layout'\nimport { Button, Accordion, List } from 'semantic-ui-react'\nimport { AuthRequired } from '../../components/authProvider'\nimport Queue from '../../components/queue/queue'\nimport * as api from '../../util/mercuryService'\nimport CreateGroupModal from '../../components/createGroupModal'\n\nconst Vonage = dynamic(() => import('../../components/vonage'), {\n  ssr: false,\n})\n\nfunction ClassPage() {\n  const router = useRouter()\n  const [groups, setGroups] = useState([])\n  const [currentClass, setCurrentClass] = useState({id: \"\", name: \"bob\", groups: []})\n  const [vonageCred, setVonageCred] = useState(null)\n  const { classId } = router.query\n\n  useEffect(() => {\n    if (!classId) return\n\n    const c = api.getClassNG(classId)\n    setCurrentClasses(c)\n    console.log(currentClass.name)\n  }, [classId])\n\n  useEffect(() => {\n    if (!classId) return\n\n    api\n      .getGroups(classId)\n      .then((groups) => setGroups(groups))\n      .catch(console.error)\n  }, [classId])\n\n  /*useEffect(() => {\n    api\n      .getClasses()\n      .then((classes) => setClasses(groups))\n      .catch(console.error)\n  }, [])\n\n  function getClassName(classList) {\n    var correctClass = ''\n    classList.forEach((c) => {\n      if (c.id === classId) {\n        correctClass = c.name\n      }\n    })\n    return correctClass\n  }*/\n\n  const handleBack = () => {\n    router.push('/calendar')\n  }\n\n  const handleSelectGroup = (group) => {\n    api\n      .postGroupToken(classId, group.id)\n      .then(({ token }) => setVonageCred({ sessionId: group.sessionId, token }))\n      .catch(console.error)\n  }\n\n  return (\n    <Layout\n      left={\n        <div style={{ height: '100%', marginLeft: '2.5%' }}>\n          <Button.Group\n            size=\"huge\"\n            style={{ marginBottom: 12, width: '100%'}}\n            fluid\n          >\n            <Button\n              compact\n              icon=\"angle left\"\n              //content= \"class.name\"\n              style={{\n                fontSize: '1.5vw',\n                textAlign: 'left',\n                width: '75%',\n                marginBottom: '2%',\n                minWidth: '41px',\n              }}\n              onClick={handleBack}\n            >\n            {currentClass.name}\n            </Button>\n            <Button\n              compact\n              icon=\"setting\"\n              style={{\n                fontSize: '1.5vw',\n                textAlign: 'center',\n                width: '15%',\n                marginBottom: '2%',\n                minWidth: '14px',\n              }}\n            />\n          </Button.Group>\n          <Accordion\n            fluid\n            exclusive={false}\n            defaultActiveIndex={[0, 1]}\n            style={{\n              fontSize: '1vw',\n              textAlign: 'left',\n              width: '100%',\n              marginBottom: '2%',\n              minWidth: '41px',\n            }}\n            panels={[\n              {\n                key: 'discussions',\n                title: 'Discussions',\n                content: {\n                  content: (\n                    <div style={{ paddingLeft: 20 }}>\n                      <List relaxed>\n                        {groups\n                          .filter((group) => group.type === 'discussion')\n                          .map((group) => (\n                            <List.Item\n                              key={`discussion_${group.id}`}\n                              onClick={() => handleSelectGroup(group)}\n                              style={{\n                                fontSize: '.8vw',\n                                textAlign: 'left',\n                                width: '75%',\n                                marginBottom: '2%',\n                                minWidth: '41px',\n                              }}\n                            >\n                              <List.Icon name=\"sound\" />\n                              <List.Content>\n                                <List.Header as=\"a\">{group.name}</List.Header>\n                              </List.Content>\n                            </List.Item>\n                          ))}\n                      </List>\n                    </div>\n                  ),\n                },\n              },\n              {\n                key: 'private-groups',\n                title: 'Private Groups',\n                content: {\n                  content: (\n                    <div style={{ paddingLeft: 20 }}>\n                      <List relaxed>\n                        {groups\n                          .filter((group) => group.type === 'group')\n                          .map((group) => (\n                            <List.Item\n                              key={`private_group_${group.id}`}\n                              onClick={() => handleSelectGroup(group)}\n                              style={{\n                                fontSize: '.6vw',\n                                textAlign: 'left',\n                                width: '75%',\n                                marginBottom: '2%',\n                                minWidth: '41px',\n                              }}\n                            >\n                              <List.Icon name=\"lock\" />\n                              <List.Content>\n                                <List.Header as=\"a\">{group.name}</List.Header>\n                              </List.Content>\n                            </List.Item>\n                          ))}\n                      </List>\n                    </div>\n                  ),\n                },\n              },\n            ]}\n          />\n          <div\n            style={{\n              position: 'absolute',\n              width: 'calc(100% - 38px)',\n              bottom: 14,\n            }}\n          >\n            <CreateGroupModal />\n          </div>\n        </div>\n      }\n      right={<Queue />}\n    >\n      {vonageCred && (\n        <Vonage\n          sessionId={vonageCred.sessionId}\n          token={vonageCred.token}\n          onLeave={() => setVonageCred(null)}\n        />\n      )}\n    </Layout>\n  )\n}\n\nexport default AuthRequired(ClassPage)\n"]},"metadata":{},"sourceType":"module"}