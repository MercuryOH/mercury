{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Label, Button } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport TaWaitingModal from './taWaitingModal';\nimport TAWebSocketController from './taWebSocket';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nconst QueueDiv = styled.div.withConfig({\n  displayName: \"taQueueView__QueueDiv\",\n  componentId: \"bjnqi0-0\"\n})([\"grid-gap:2vh;\"]);\nconst QueueLabel = styled(Label).withConfig({\n  displayName: \"taQueueView__QueueLabel\",\n  componentId: \"bjnqi0-1\"\n})([\"text-align:center;\"]);\nexport default class TAQueueView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayStudentsStyle: {\n        display: 'grid'\n      },\n      iconToDisplay: 'caret square down outline',\n      queueWebSocketController: new TAWebSocketController(this),\n      studentsInQueue: [],\n      me: this.props.me,\n      classData: this.props.classData,\n      inviteNextStudent: false,\n      nextStudentName: '',\n      isReadyToRender: false\n    };\n  }\n\n  createTimeoutNotification(studentName) {\n    NotificationManager.info(`${studentName}'s Invitation Has Expired`);\n  }\n\n  componentDidMount() {\n    this.courseId = Number(window.location.href.split('/')[4]);\n    const {\n      queueWebSocketController\n    } = this.state;\n    queueWebSocketController.start();\n    this.setState({\n      isReadyToRender: true\n    });\n  }\n\n  isStudentDisplayed() {\n    let {\n      display\n    } = this.state.displayStudentsStyle;\n    return display === 'grid';\n  }\n\n  alterStudentDisplay() {\n    let displayStudentsStyle = this.isStudentDisplayed() ? {\n      display: 'none'\n    } : {\n      display: 'grid'\n    };\n    let iconToDisplay = this.isStudentDisplayed() ? 'caret square up outline' : 'caret square down outline';\n    this.setState({\n      displayStudentsStyle,\n      iconToDisplay\n    });\n  }\n\n  getNextStudentInQueue() {\n    this.state.queueWebSocketController.getNextStudent();\n  }\n\n  getButtonToDisplay() {\n    return __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14,\n        display: 'inline-flex'\n      }\n    }, __jsx(Button, {\n      style: {\n        width: '100%',\n        fontSize: '1vw'\n      },\n      onClick: this.getNextStudentInQueue.bind(this),\n      primary: true\n    }, \"Next\"));\n  }\n\n  createQueueLabel(student) {\n    return __jsx(QueueLabel, {\n      style: {\n        fontSize: '1.2vw',\n        textAlign: 'center',\n        width: '95%',\n        marginBottom: '2%',\n        minWidth: '41px',\n        marginLeft: '.8%',\n        marginRight: '1%'\n      },\n      key: student\n    }, student);\n  }\n\n  render() {\n    const {\n      isReadyToRender\n    } = this.state;\n\n    if (!isReadyToRender) {\n      return null;\n    }\n\n    const queueLabels = this.state.displayStudentsStyle.display == 'none' ? __jsx(React.Fragment, null) : this.state.studentsInQueue.map(this.createQueueLabel);\n    return __jsx(QueueDiv, null, __jsx(TaWaitingModal, {\n      inviteNextStudent: this.state.inviteNextStudent,\n      studentName: this.state.nextStudentName\n    }), __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 12,\n        width: '95%'\n      },\n      fluid: true,\n      vertical: true\n    }, __jsx(Button, {\n      compact: true,\n      content: \"Queue\",\n      icon: this.state.iconToDisplay,\n      labelPosition: \"right\",\n      onClick: this.alterStudentDisplay.bind(this),\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'center',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      }\n    })), __jsx(QueueDiv, {\n      style: {\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      }\n    }, queueLabels), this.getButtonToDisplay(), __jsx(NotificationContainer, null));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/queue/ta/taQueueView.js"],"names":["React","Component","Label","Button","styled","TaWaitingModal","TAWebSocketController","NotificationContainer","NotificationManager","QueueDiv","div","QueueLabel","TAQueueView","constructor","props","state","displayStudentsStyle","display","iconToDisplay","queueWebSocketController","studentsInQueue","me","classData","inviteNextStudent","nextStudentName","isReadyToRender","createTimeoutNotification","studentName","info","componentDidMount","courseId","Number","window","location","href","split","start","setState","isStudentDisplayed","alterStudentDisplay","getNextStudentInQueue","getNextStudent","getButtonToDisplay","position","width","bottom","fontSize","bind","createQueueLabel","student","textAlign","marginBottom","minWidth","marginLeft","marginRight","render","queueLabels","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Label, Button } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\nimport TaWaitingModal from './taWaitingModal'\r\nimport TAWebSocketController from './taWebSocket'\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications'\r\n\r\nconst QueueDiv = styled.div`\r\n  grid-gap: 2vh;\r\n`\r\n\r\nconst QueueLabel = styled(Label)`\r\n  text-align: center;\r\n`\r\n\r\nexport default class TAQueueView extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      displayStudentsStyle: { display: 'grid' },\r\n      iconToDisplay: 'caret square down outline',\r\n      queueWebSocketController: new TAWebSocketController(this),\r\n      studentsInQueue: [],\r\n      me: this.props.me,\r\n      classData: this.props.classData,\r\n      inviteNextStudent: false,\r\n      nextStudentName: '',\r\n      isReadyToRender: false,\r\n    }\r\n  }\r\n\r\n  createTimeoutNotification(studentName) {\r\n    NotificationManager.info(`${studentName}'s Invitation Has Expired`)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.courseId = Number(window.location.href.split('/')[4])\r\n    const { queueWebSocketController } = this.state\r\n    queueWebSocketController.start()\r\n    this.setState({ isReadyToRender: true })\r\n  }\r\n\r\n  isStudentDisplayed() {\r\n    let { display } = this.state.displayStudentsStyle\r\n    return display === 'grid'\r\n  }\r\n\r\n  alterStudentDisplay() {\r\n    let displayStudentsStyle = this.isStudentDisplayed()\r\n      ? { display: 'none' }\r\n      : { display: 'grid' }\r\n\r\n    let iconToDisplay = this.isStudentDisplayed()\r\n      ? 'caret square up outline'\r\n      : 'caret square down outline'\r\n\r\n    this.setState({ displayStudentsStyle, iconToDisplay })\r\n  }\r\n\r\n  getNextStudentInQueue() {\r\n    this.state.queueWebSocketController.getNextStudent()\r\n  }\r\n\r\n  getButtonToDisplay() {\r\n    return (\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          width: 'calc(100% - 38px)',\r\n          bottom: 14,\r\n          display: 'inline-flex',\r\n        }}\r\n      >\r\n        <Button\r\n          style={{ width: '100%', fontSize: '1vw' }}\r\n          onClick={this.getNextStudentInQueue.bind(this)}\r\n          primary\r\n        >\r\n          Next\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  createQueueLabel(student) {\r\n    return (\r\n      <QueueLabel\r\n        style={{\r\n          fontSize: '1.2vw',\r\n          textAlign: 'center',\r\n          width: '95%',\r\n          marginBottom: '2%',\r\n          minWidth: '41px',\r\n          marginLeft: '.8%',\r\n          marginRight: '1%',\r\n        }}\r\n        key={student}\r\n      >\r\n        {student}\r\n      </QueueLabel>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { isReadyToRender } = this.state\r\n\r\n    if (!isReadyToRender) {\r\n      return null\r\n    }\r\n\r\n    const queueLabels =\r\n      this.state.displayStudentsStyle.display == 'none' ? (\r\n        <></>\r\n      ) : (\r\n        this.state.studentsInQueue.map(this.createQueueLabel)\r\n      )\r\n\r\n    return (\r\n      <QueueDiv>\r\n        <TaWaitingModal\r\n          inviteNextStudent={this.state.inviteNextStudent}\r\n          studentName={this.state.nextStudentName}\r\n        />\r\n\r\n        <Button.Group\r\n          size=\"huge\"\r\n          style={{ marginBottom: 12, width: '95%' }}\r\n          fluid\r\n          vertical\r\n        >\r\n          <Button\r\n            compact\r\n            content=\"Queue\"\r\n            icon={this.state.iconToDisplay}\r\n            labelPosition=\"right\"\r\n            onClick={this.alterStudentDisplay.bind(this)}\r\n            style={{\r\n              fontSize: '1.5vw',\r\n              textAlign: 'center',\r\n              width: '100%',\r\n              marginBottom: '2%',\r\n              minWidth: '41px',\r\n            }}\r\n          />\r\n        </Button.Group>\r\n\r\n        <QueueDiv\r\n          style={{ width: '100%', marginBottom: '2%', minWidth: '41px' }}\r\n        >\r\n          {queueLabels}\r\n        </QueueDiv>\r\n\r\n        {this.getButtonToDisplay()}\r\n\r\n        <NotificationContainer />\r\n      </QueueDiv>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}