{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport * as api from '../../util/mercuryService';\nimport StudentQueueView from './student/studentQueueView';\nimport TAQueueView from './ta/taQueueView';\n\nclass Queue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDataLoaded: false,\n      me: {},\n      classData: []\n    };\n  }\n\n  componentDidMount() {\n    this.courseId = Number(window.location.href.split('/')[4]);\n    let me = {};\n    let classData = {};\n    api.getMe().then(meData => {\n      me = meData;\n    }).then(() => api.getClasses()).then(classPayload => {\n      classData = classPayload;\n    }).then(() => this.setState({\n      me,\n      classData,\n      isDataLoaded: true\n    }));\n  }\n\n  getRoleForClass() {\n    const {\n      classData\n    } = this.state;\n    let userRole = null;\n    classData.forEach(row => {\n      let {\n        id,\n        role\n      } = row;\n\n      if (this.courseId === Number(id)) {\n        userRole = role;\n      }\n    });\n    return userRole;\n  }\n\n  render() {\n    const {\n      isDataLoaded,\n      me,\n      classData\n    } = this.state;\n\n    if (!isDataLoaded) {\n      return null;\n    }\n\n    if (this.getRoleForClass() === 'Student') {\n      return __jsx(StudentQueueView, {\n        me: me,\n        classData: classData\n      });\n    }\n\n    return __jsx(TAQueueView, {\n      me: me,\n      classData: classData\n    });\n  }\n\n}\n\nexport default Queue;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/queue/queue.js"],"names":["React","Component","api","StudentQueueView","TAQueueView","Queue","constructor","props","state","isDataLoaded","me","classData","componentDidMount","courseId","Number","window","location","href","split","getMe","then","meData","getClasses","classPayload","setState","getRoleForClass","userRole","forEach","row","id","role","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,2BAArB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC5BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,KADH;AAEXC,MAAAA,EAAE,EAAE,EAFO;AAGXC,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,GAAgBC,MAAM,CAACC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAD,CAAtB;AAEA,QAAIR,EAAE,GAAG,EAAT;AACA,QAAIC,SAAS,GAAG,EAAhB;AAEAT,IAAAA,GAAG,CACAiB,KADH,GAEGC,IAFH,CAESC,MAAD,IAAY;AAChBX,MAAAA,EAAE,GAAGW,MAAL;AACD,KAJH,EAKGD,IALH,CAKQ,MAAMlB,GAAG,CAACoB,UAAJ,EALd,EAMGF,IANH,CAMSG,YAAD,IAAkB;AACtBZ,MAAAA,SAAS,GAAGY,YAAZ;AACD,KARH,EASGH,IATH,CASQ,MAAM,KAAKI,QAAL,CAAc;AAAEd,MAAAA,EAAF;AAAMC,MAAAA,SAAN;AAAiBF,MAAAA,YAAY,EAAE;AAA/B,KAAd,CATd;AAUD;;AAEDgB,EAAAA,eAAe,GAAG;AAChB,UAAM;AAAEd,MAAAA;AAAF,QAAgB,KAAKH,KAA3B;AACA,QAAIkB,QAAQ,GAAG,IAAf;AAEAf,IAAAA,SAAS,CAACgB,OAAV,CAAmBC,GAAD,IAAS;AACzB,UAAI;AAAEC,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAeF,GAAnB;;AACA,UAAI,KAAKf,QAAL,KAAkBC,MAAM,CAACe,EAAD,CAA5B,EAAkC;AAChCH,QAAAA,QAAQ,GAAGI,IAAX;AACD;AACF,KALD;AAOA,WAAOJ,QAAP;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEtB,MAAAA,YAAF;AAAgBC,MAAAA,EAAhB;AAAoBC,MAAAA;AAApB,QAAkC,KAAKH,KAA7C;;AAEA,QAAI,CAACC,YAAL,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,QAAI,KAAKgB,eAAL,OAA2B,SAA/B,EAA0C;AACxC,aAAO,MAAC,gBAAD;AAAkB,QAAA,EAAE,EAAEf,EAAtB;AAA0B,QAAA,SAAS,EAAEC;AAArC,QAAP;AACD;;AAED,WAAO,MAAC,WAAD;AAAa,MAAA,EAAE,EAAED,EAAjB;AAAqB,MAAA,SAAS,EAAEC;AAAhC,MAAP;AACD;;AAtD2B;;AAyD9B,eAAeN,KAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport * as api from '../../util/mercuryService'\r\nimport StudentQueueView from './student/studentQueueView'\r\nimport TAQueueView from './ta/taQueueView'\r\n\r\nclass Queue extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      isDataLoaded: false,\r\n      me: {},\r\n      classData: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.courseId = Number(window.location.href.split('/')[4])\r\n\r\n    let me = {}\r\n    let classData = {}\r\n\r\n    api\r\n      .getMe()\r\n      .then((meData) => {\r\n        me = meData\r\n      })\r\n      .then(() => api.getClasses())\r\n      .then((classPayload) => {\r\n        classData = classPayload\r\n      })\r\n      .then(() => this.setState({ me, classData, isDataLoaded: true }))\r\n  }\r\n\r\n  getRoleForClass() {\r\n    const { classData } = this.state\r\n    let userRole = null\r\n\r\n    classData.forEach((row) => {\r\n      let { id, role } = row\r\n      if (this.courseId === Number(id)) {\r\n        userRole = role\r\n      }\r\n    })\r\n\r\n    return userRole\r\n  }\r\n\r\n  render() {\r\n    const { isDataLoaded, me, classData } = this.state\r\n\r\n    if (!isDataLoaded) {\r\n      return null\r\n    }\r\n\r\n    if (this.getRoleForClass() === 'Student') {\r\n      return <StudentQueueView me={me} classData={classData} />\r\n    }\r\n\r\n    return <TAQueueView me={me} classData={classData} />\r\n  }\r\n}\r\n\r\nexport default Queue\r\n"]},"metadata":{},"sourceType":"module"}