{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Header, Search, Input } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { EventEmitter } from './util/EventEmitter';\nimport SearchBar from './invite/searchBar';\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\n\nclass CreateGroupModal extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"formatAsResults\", user => {\n      return {\n        title: user.firstName + ' ' + user.lastName,\n        id: user.id,\n        description: user.email\n      };\n    });\n\n    _defineProperty(this, \"handleResultSelect\", (e, {\n      result\n    }) => {\n      this.setState({\n        value: result.title,\n        selectedUser: result\n      });\n    });\n\n    _defineProperty(this, \"handleSearchChange\", (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.title) || re.test(result.description);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(this.state.allUsers.map(this.formatAsResults), isMatch)\n        });\n      }, 300);\n    });\n\n    _defineProperty(this, \"createGroup\", () => {\n      if (!this.state.groupName) return;\n      this.props.onCreate({\n        name: this.state.groupName,\n        type: 'group'\n      }); //this.props.onInvite({ selectedUser: this.state.selectedUser })\n      // if (!this.state.selectedUser) return\n      // EventEmitter.publish('selectedUser', this.state.selectedUser)\n\n      this.setState({\n        modalState: false\n      });\n      this.props.onCreate({\n        name: this.state.groupName,\n        type: 'group'\n      });\n    });\n\n    this.state = {\n      modalState: false,\n      groupName: '',\n      isLoading: false,\n      results: [],\n      value: '',\n      allUsers: [],\n      selectedUser: {},\n      me: {},\n      currentGroup: {\n        id: '',\n        name: ''\n      }\n    };\n    this.defineEventEmitterCallbacks();\n  }\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('allOtherStudentsInClass', users => {\n      this.setState({\n        allUsers: users\n      });\n    });\n    EventEmitter.subscribe('me', me => {\n      this.setState({\n        me\n      });\n    });\n    EventEmitter.subscribe('currentGroupChange', currentGroup => {\n      this.setState({\n        currentGroup\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Modal, {\n      style: {\n        borderless: 'true',\n        width: '40%',\n        height: '40%'\n      },\n      trigger: __jsx(Button, {\n        color: \"teal\",\n        icon: \"add\",\n        content: \"New Group\",\n        fluid: true,\n        style: {\n          fontSize: '1vw'\n        },\n        onClick: () => this.setState({\n          groupName: '',\n          value: '',\n          modalState: true\n        })\n      }),\n      open: this.state.modalState,\n      onClose: () => this.setState({\n        modalState: false\n      }),\n      closeOnDimmerClick: false,\n      closeOnEscape: false,\n      closeIcon: true\n    }, __jsx(Modal.Content, {\n      style: {\n        borderless: 'true'\n      }\n    }, __jsx(Header, {\n      style: {\n        fontSize: '2vw',\n        textAlign: 'center',\n        width: '100%',\n        padding: '5%',\n        height: '50%',\n        margin: 'auto'\n      },\n      content: 'New Private Group'\n    }), __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '5%'\n      }\n    }, __jsx(Input, {\n      fluid: true,\n      placeholder: \"Group name\",\n      name: \"name\",\n      value: this.state.groupName,\n      onChange: e => this.setState({\n        groupName: e.target.value\n      })\n    }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(Search, {\n      fluid: true,\n      placeholder: \"Invite student...\",\n      input: {\n        fluid: true\n      },\n      loading: this.state.isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: this.state.results,\n      value: this.state.value\n    })), __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        width: '70%',\n        height: '70%',\n        margin: 'auto',\n        padding: '5%'\n      }\n    }, __jsx(Button, {\n      color: \"teal\",\n      style: {\n        width: '50%',\n        fontSize: '1vw'\n      },\n      onClick: this.createGroup,\n      content: 'Create'\n    })))));\n  }\n\n}\n\nCreateGroupModal.propTypes = {\n  onCreate: PropTypes.func.isRequired\n};\nexport default CreateGroupModal;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/createGroupModal.js"],"names":["React","Component","PropTypes","Modal","Button","Header","Search","Input","_","EventEmitter","SearchBar","initialState","isLoading","results","value","CreateGroupModal","constructor","props","user","title","firstName","lastName","id","description","email","e","result","setState","selectedUser","setTimeout","state","length","re","RegExp","escapeRegExp","isMatch","test","filter","allUsers","map","formatAsResults","groupName","onCreate","name","type","modalState","me","currentGroup","defineEventEmitterCallbacks","subscribe","users","render","borderless","width","height","fontSize","textAlign","padding","margin","target","fluid","handleResultSelect","debounce","handleSearchChange","leading","createGroup","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Modal, Button, Header, Search, Input } from 'semantic-ui-react'\r\nimport _ from 'lodash'\r\nimport { EventEmitter } from './util/EventEmitter'\r\nimport SearchBar from './invite/searchBar'\r\n\r\nconst initialState = { isLoading: false, results: [], value: '' }\r\n\r\nclass CreateGroupModal extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      modalState: false,\r\n      groupName: '',\r\n      isLoading: false,\r\n      results: [],\r\n      value: '',\r\n      allUsers: [],\r\n      selectedUser: {},\r\n      me: {},\r\n      currentGroup: { id: '', name: '' },\r\n    }\r\n\r\n    this.defineEventEmitterCallbacks()\r\n  }\r\n\r\n  defineEventEmitterCallbacks() {\r\n    EventEmitter.subscribe('allOtherStudentsInClass', (users) => {\r\n      this.setState({ allUsers: users })\r\n    })\r\n\r\n    EventEmitter.subscribe('me', (me) => {\r\n      this.setState({ me })\r\n    })\r\n\r\n    EventEmitter.subscribe('currentGroupChange', (currentGroup) => {\r\n      this.setState({ currentGroup })\r\n    })\r\n  }\r\n\r\n  formatAsResults = (user) => {\r\n    return {\r\n      title: user.firstName + ' ' + user.lastName,\r\n      id: user.id,\r\n      description: user.email,\r\n    }\r\n  }\r\n\r\n  handleResultSelect = (e, { result }) => {\r\n    this.setState({\r\n      value: result.title,\r\n      selectedUser: result,\r\n    })\r\n  }\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value })\r\n\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = (result) =>\r\n        re.test(result.title) || re.test(result.description)\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(\r\n          this.state.allUsers.map(this.formatAsResults),\r\n          isMatch\r\n        ),\r\n      })\r\n    }, 300)\r\n  }\r\n\r\n  createGroup = () => {\r\n    if (!this.state.groupName) return\r\n\r\n    this.props.onCreate({ name: this.state.groupName, type: 'group' })\r\n    //this.props.onInvite({ selectedUser: this.state.selectedUser })\r\n    // if (!this.state.selectedUser) return\r\n    // EventEmitter.publish('selectedUser', this.state.selectedUser)\r\n\r\n    this.setState({ modalState: false })\r\n    this.props.onCreate({ name: this.state.groupName, type: 'group' })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          style={{ borderless: 'true', width: '40%', height: '40%' }}\r\n          trigger={\r\n            <Button\r\n              color=\"teal\"\r\n              icon=\"add\"\r\n              content=\"New Group\"\r\n              fluid\r\n              style={{ fontSize: '1vw' }}\r\n              onClick={() =>\r\n                this.setState({ groupName: '', value: '', modalState: true })\r\n              }\r\n            />\r\n          }\r\n          open={this.state.modalState}\r\n          onClose={() => this.setState({ modalState: false })}\r\n          closeOnDimmerClick={false}\r\n          closeOnEscape={false}\r\n          closeIcon\r\n        >\r\n          <Modal.Content style={{ borderless: 'true' }}>\r\n            <Header\r\n              style={{\r\n                fontSize: '2vw',\r\n                textAlign: 'center',\r\n                width: '100%',\r\n                padding: '5%',\r\n                height: '50%',\r\n                margin: 'auto',\r\n              }}\r\n              content={'New Private Group'}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                padding: '5%',\r\n              }}\r\n            >\r\n              <Input\r\n                fluid\r\n                placeholder=\"Group name\"\r\n                name=\"name\"\r\n                value={this.state.groupName}\r\n                onChange={(e) => this.setState({ groupName: e.target.value })}\r\n              />\r\n              <br />\r\n              <br />\r\n              <Search\r\n                fluid\r\n                placeholder=\"Invite student...\"\r\n                input={{ fluid: true }}\r\n                loading={this.state.isLoading}\r\n                onResultSelect={this.handleResultSelect}\r\n                onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n                  leading: true,\r\n                })}\r\n                results={this.state.results}\r\n                value={this.state.value}\r\n              />\r\n              {/* <SearchBar /> */}\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                width: '70%',\r\n                height: '70%',\r\n                margin: 'auto',\r\n                padding: '5%',\r\n              }}\r\n            >\r\n              <Button\r\n                color=\"teal\"\r\n                style={{ width: '50%', fontSize: '1vw' }}\r\n                onClick={this.createGroup}\r\n                content={'Create'}\r\n              />\r\n            </div>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nCreateGroupModal.propTypes = {\r\n  onCreate: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default CreateGroupModal\r\n"]},"metadata":{},"sourceType":"module"}