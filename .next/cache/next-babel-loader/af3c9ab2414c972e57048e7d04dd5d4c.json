{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Modal, Button, Header, Search } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nfunction StudentInviteModal(_ref) {\n  _s();\n\n  var content = _ref.content,\n      buttonText = _ref.buttonText,\n      placeholder = _ref.placeholder;\n\n  var _useState = useState(false),\n      modalState = _useState[0],\n      toggleModal = _useState[1];\n\n  return __jsx(\"div\", null, __jsx(Modal, {\n    style: {\n      borderless: 'true',\n      width: '40%',\n      height: '40%'\n    },\n    trigger: __jsx(Button, {\n      onClick: function onClick() {\n        return toggleModal(true);\n      }\n    }, \"Invite to Group\"),\n    open: modalState,\n    onClose: function onClose() {\n      return toggleModal(false);\n    },\n    closeOnDimmerClick: false,\n    closeOnEscape: false,\n    closeIcon: true\n  }, __jsx(Modal.Content, {\n    style: {\n      borderless: 'true'\n    }\n  }, __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: 80\n    }\n  }, __jsx(Search, {\n    fluid: true,\n    placeholder: placeholder,\n    input: {\n      fluid: true\n    }\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '70%',\n      height: '70%',\n      margin: 'auto',\n      padding: 30\n    }\n  }, __jsx(Button, {\n    color: \"teal\",\n    style: {\n      width: '50%',\n      fontSize: '1vw'\n    },\n    onClick: function onClick() {\n      return toggleModal(false);\n    }\n  }, buttonText)))));\n}\n\n_s(StudentInviteModal, \"SMTHiyYmud8lCehkwzId6P6ztm8=\");\n\n_c = StudentInviteModal;\nStudentInviteModal.propTypes = {\n  content: PropTypes.node,\n  buttonText: PropTypes.string,\n  placeholder: PropTypes.string\n};\nexport default StudentInviteModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentInviteModal\");","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/StudentInviteModal.js"],"names":["React","useState","Modal","Button","Header","Search","PropTypes","StudentInviteModal","content","buttonText","placeholder","modalState","toggleModal","borderless","width","height","textAlign","padding","fluid","margin","fontSize","propTypes","node","string"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,kBAAT,OAAkE;AAAA;;AAAA,MAApCC,OAAoC,QAApCA,OAAoC;AAAA,MAA3BC,UAA2B,QAA3BA,UAA2B;AAAA,MAAfC,WAAe,QAAfA,WAAe;;AAAA,kBAC9BT,QAAQ,CAAC,KAAD,CADsB;AAAA,MACzDU,UADyD;AAAA,MAC7CC,WAD6C;;AAGhE,SACE,mBACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE,KAA7B;AAAoCC,MAAAA,MAAM,EAAE;AAA5C,KADT;AAEE,IAAA,OAAO,EAAE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMH,WAAW,CAAC,IAAD,CAAjB;AAAA;AAAjB,yBAFX;AAGE,IAAA,IAAI,EAAED,UAHR;AAIE,IAAA,OAAO,EAAE;AAAA,aAAMC,WAAW,CAAC,KAAD,CAAjB;AAAA,KAJX;AAKE,IAAA,kBAAkB,EAAE,KALtB;AAME,IAAA,aAAa,EAAE,KANjB;AAOE,IAAA,SAAS;AAPX,KASE,MAAC,KAAD,CAAO,OAAP;AAAe,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd;AAAtB,KACE;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,SAAS,EAAE,QADN;AAELC,MAAAA,OAAO,EAAE;AAFJ;AADT,KAME,MAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,WAAW,EAAEP,WAA3B;AAAwC,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAE;AAAT;AAA/C,IANF,CADF,EAUE;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,SAAS,EAAE,QADN;AAELF,MAAAA,KAAK,EAAE,KAFF;AAGLC,MAAAA,MAAM,EAAE,KAHH;AAILI,MAAAA,MAAM,EAAE,MAJH;AAKLF,MAAAA,OAAO,EAAE;AALJ;AADT,KASE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,KAAK,EAAE;AAAEH,MAAAA,KAAK,EAAE,KAAT;AAAgBM,MAAAA,QAAQ,EAAE;AAA1B,KAFT;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMR,WAAW,CAAC,KAAD,CAAjB;AAAA;AAHX,KAKGH,UALH,CATF,CAVF,CATF,CADF,CADF;AA0CD;;GA7CQF,kB;;KAAAA,kB;AA+CTA,kBAAkB,CAACc,SAAnB,GAA+B;AAC7Bb,EAAAA,OAAO,EAAEF,SAAS,CAACgB,IADU;AAE7Bb,EAAAA,UAAU,EAAEH,SAAS,CAACiB,MAFO;AAG7Bb,EAAAA,WAAW,EAAEJ,SAAS,CAACiB;AAHM,CAA/B;AAMA,eAAehB,kBAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Modal, Button, Header, Search } from 'semantic-ui-react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction StudentInviteModal({ content, buttonText, placeholder }) {\r\n  const [modalState, toggleModal] = useState(false)\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        style={{ borderless: 'true', width: '40%', height: '40%' }}\r\n        trigger={<Button onClick={() => toggleModal(true)}>Invite to Group</Button>}\r\n        open={modalState}\r\n        onClose={() => toggleModal(false)}\r\n        closeOnDimmerClick={false}\r\n        closeOnEscape={false}\r\n        closeIcon\r\n      >\r\n        <Modal.Content style={{ borderless: 'true' }}>\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              padding: 80,\r\n            }}\r\n          >\r\n            <Search fluid placeholder={placeholder} input={{ fluid: true }} />\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              width: '70%',\r\n              height: '70%',\r\n              margin: 'auto',\r\n              padding: 30,\r\n            }}\r\n          >\r\n            <Button\r\n              color=\"teal\"\r\n              style={{ width: '50%', fontSize: '1vw' }}\r\n              onClick={() => toggleModal(false)}\r\n            >\r\n              {buttonText}\r\n            </Button>\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nStudentInviteModal.propTypes = {\r\n  content: PropTypes.node,\r\n  buttonText: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n}\r\n\r\nexport default StudentInviteModal\r\n"]},"metadata":{},"sourceType":"module"}