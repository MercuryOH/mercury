{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/layout';\nimport { Button, Accordion, List } from 'semantic-ui-react';\nimport { AuthRequired } from '../../components/authProvider';\nimport Queue from '../../components/queue/queue';\nimport * as api from '../../util/mercuryService';\nimport CreateGroupModal from '../../components/createGroupModal';\n\nfunction ClassPage() {\n  const router = useRouter();\n  const {\n    0: groups,\n    1: setGroups,\n    2: classes,\n    3: setClasses\n  } = useState([]);\n  const {\n    classId\n  } = router.query;\n  useEffect(() => {\n    if (!classId) return;\n    api.getGroups(classId).then(groups => setGroups(groups)).catch(console.error);\n  }, [classId]);\n\n  function getClassName(classList) {\n    var correctClass = \"\";\n    classList.forEach(c => {\n      if (c.id = classId) {\n        correctClass = c.name;\n      }\n    });\n    return correctClass;\n  }\n\n  return __jsx(Layout, {\n    left: __jsx(\"div\", {\n      style: {\n        height: '100%'\n      }\n    }, __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 20,\n        width: '100%'\n      },\n      fluid: true\n    }, __jsx(Button, {\n      compact: true,\n      icon: \"angle left\",\n      content: \"Class.name\",\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'left',\n        width: '75%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      }\n    }), __jsx(Button, {\n      compact: true,\n      icon: \"setting\",\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'center',\n        width: '15%',\n        marginBottom: '2%',\n        minWidth: '14px'\n      }\n    })), __jsx(Accordion, {\n      fluid: true,\n      exclusive: false,\n      defaultActiveIndex: [0, 1],\n      style: {\n        fontSize: '1vw',\n        textAlign: 'left',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      panels: [{\n        key: 'discussions',\n        title: 'Discussions',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20\n            }\n          }, __jsx(List, {\n            relaxed: true\n          }, groups.filter(group => group.type === 'discussion').map(group => __jsx(List.Item, {\n            key: `discussion_${group.id}`,\n            style: {\n              fontSize: '1vw',\n              textAlign: 'left',\n              width: '75%',\n              marginBottom: '2%',\n              minWidth: '41px'\n            }\n          }, __jsx(List.Icon, {\n            name: \"sound\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name))))))\n        }\n      }, {\n        key: 'private-groups',\n        title: 'Private Groups',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20\n            }\n          }, __jsx(List, {\n            relaxed: true\n          }, groups.filter(group => group.type === 'group').map(group => __jsx(List.Item, {\n            key: `private_group_${group.id}`\n          }, __jsx(List.Icon, {\n            name: \"lock\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name))))))\n        }\n      }]\n    }), __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14\n      }\n    }, __jsx(CreateGroupModal, null))),\n    right: __jsx(Queue, null)\n  }, __jsx(Button.Group, null, __jsx(Button, {\n    icon: 'headphones',\n    content: \"Join Meeting\",\n    primary: true\n  })));\n}\n\nexport default AuthRequired(ClassPage);","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/pages/classes/[classId].js"],"names":["React","useEffect","useState","useRouter","Layout","Button","Accordion","List","AuthRequired","Queue","api","CreateGroupModal","ClassPage","router","groups","setGroups","classes","setClasses","classId","query","getGroups","then","catch","console","error","getClassName","classList","correctClass","forEach","c","id","name","height","marginBottom","width","fontSize","textAlign","minWidth","key","title","content","paddingLeft","filter","group","type","map","position","bottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport Layout from '../../components/layout'\nimport { Button, Accordion, List } from 'semantic-ui-react'\nimport { AuthRequired } from '../../components/authProvider'\nimport Queue from '../../components/queue/queue'\nimport * as api from '../../util/mercuryService'\nimport CreateGroupModal from '../../components/createGroupModal'\n\nfunction ClassPage() {\n  const router = useRouter()\n  const [groups, setGroups, classes, setClasses] = useState([])\n  const { classId } = router.query\n\n  useEffect(() => {\n    if (!classId) return\n\n    api\n      .getGroups(classId)\n      .then((groups) => setGroups(groups))\n      .catch(console.error)\n  }, [classId])\n\nfunction getClassName(classList){\n  var correctClass = \"\"\n  classList.forEach((c) => {\n    if (c.id = classId){\n      correctClass = c.name\n    }\n  })\n  return correctClass\n}\n\n\n  return (\n    <Layout\n      left={\n        <div style={{ height: '100%' }}>\n          <Button.Group size=\"huge\" style={{ marginBottom: 20, width: '100%' }} fluid>\n            <Button compact icon=\"angle left\" content= \"Class.name\" style = {{fontSize: '1.5vw', textAlign: 'left', width: '75%', marginBottom: '2%', minWidth: '41px'}}/>\n            <Button compact icon=\"setting\" style = {{fontSize: '1.5vw', textAlign: 'center', width: '15%', marginBottom: '2%', minWidth: '14px'}}/>\n          </Button.Group>\n          <Accordion\n            fluid\n            exclusive={false}\n            defaultActiveIndex={[0, 1]}\n            style = {{fontSize: '1vw', textAlign: 'left', width: '100%', marginBottom: '2%', minWidth: '41px'}}\n            panels={[\n              {\n                key: 'discussions',\n                title: 'Discussions',\n                content: {\n                  content: (\n                    <div style={{ paddingLeft: 20 }}>\n                      <List relaxed>\n                        {groups\n                          .filter((group) => group.type === 'discussion')\n                          .map((group) => (\n                            <List.Item key={`discussion_${group.id}`} style = {{fontSize: '1vw', textAlign: 'left', width: '75%', marginBottom: '2%', minWidth: '41px'}}>\n                              <List.Icon name=\"sound\" />\n                              <List.Content>\n                                <List.Header as=\"a\">{group.name}</List.Header>\n                              </List.Content>\n                            </List.Item>\n                          ))}\n                      </List>\n                    </div>\n                  ),\n                },\n              },\n              {\n                key: 'private-groups',\n                title: 'Private Groups',\n                content: {\n                  content: (\n                    <div style={{ paddingLeft: 20 }}>\n                      <List relaxed>\n                        {groups\n                          .filter((group) => group.type === 'group')\n                          .map((group) => (\n                            <List.Item key={`private_group_${group.id}`}>\n                              <List.Icon name=\"lock\" />\n                              <List.Content>\n                                <List.Header as=\"a\">{group.name}</List.Header>\n                              </List.Content>\n                            </List.Item>\n                          ))}\n                      </List>\n                    </div>\n                  ),\n                },\n              },\n            ]}\n          />\n          <div\n            style={{\n              position: 'absolute',\n              width: 'calc(100% - 38px)',\n              bottom: 14,\n            }}\n          >\n            <CreateGroupModal />\n          </div>\n        </div>\n      }\n      right={<Queue />}\n    >\n      <Button.Group>\n        <Button icon={'headphones'} content=\"Join Meeting\" primary />\n      </Button.Group>\n    </Layout>\n  )\n}\n\nexport default AuthRequired(ClassPage)\n"]},"metadata":{},"sourceType":"module"}