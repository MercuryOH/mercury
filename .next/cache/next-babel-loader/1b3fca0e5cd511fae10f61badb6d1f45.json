{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Modal, Button, Search, Label, Icon } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { EventEmitter } from '../util/EventEmitter';\nimport SearchBar from './searchBar';\nvar initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\n\nvar StudentInviteModal = /*#__PURE__*/function (_Component) {\n  _inherits(StudentInviteModal, _Component);\n\n  var _super = _createSuper(StudentInviteModal);\n\n  function StudentInviteModal(props) {\n    var _this;\n\n    _classCallCheck(this, StudentInviteModal);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"formatAsResults\", function (user) {\n      return {\n        title: user.firstName + ' ' + user.lastName,\n        id: user.id,\n        description: user.email\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInvite\", function () {\n      EventEmitter.publish('openInviteModal', false);\n      if (_.isEmpty(_this.state.selectedUser)) return;\n      console.log(_.map(_this.state.selectedUser, 'id'));\n      EventEmitter.publish('sendOutInvite', {\n        sender: _this.state.me,\n        recepientIds: _.map(_this.state.selectedUser, 'id'),\n        group: _this.state.currentGroup\n      });\n\n      _this.setState({\n        value: '',\n        selectedUser: [],\n        modalState: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.setState({\n        value: '',\n        selectedUser: [],\n        modalState: false\n      });\n\n      EventEmitter.publish('openInviteModal', false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleResultSelect\", function (e, _ref) {\n      var result = _ref.result;\n\n      var filtered = _this.state.selectedUser.filter(function (user) {\n        return user.id !== result.id;\n      });\n\n      filtered.push(result);\n\n      _this.setState({\n        value: '',\n        selectedUser: filtered\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSearchChange\", function (e, _ref2) {\n      var value = _ref2.value;\n\n      _this.setState({\n        isLoading: true,\n        value: value\n      });\n\n      setTimeout(function () {\n        if (_this.state.value.length < 1) return _this.setState(initialState);\n        var re = new RegExp(_.escapeRegExp(_this.state.value), 'i');\n\n        var isMatch = function isMatch(result) {\n          return re.test(result.title) || re.test(result.description);\n        };\n\n        _this.setState({\n          isLoading: false,\n          results: _.filter(_this.state.allUsers.map(_this.formatAsResults), isMatch)\n        });\n      }, 300);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeSelected\", function (user) {\n      _this.setState({\n        selectedUser: _this.state.selectedUser.filter(function (u) {\n          return u.id !== user.id;\n        }) // selectedUser: {},\n\n      });\n    });\n\n    _this.state = {\n      modalState: false,\n      isLoading: false,\n      results: [],\n      value: '',\n      allUsers: [],\n      selectedUser: [],\n      me: {},\n      currentGroup: {\n        id: '',\n        name: ''\n      }\n    };\n\n    _this.defineEventEmitterCallbacks();\n\n    return _this;\n  }\n\n  _createClass(StudentInviteModal, [{\n    key: \"defineEventEmitterCallbacks\",\n    value: function defineEventEmitterCallbacks() {\n      var _this2 = this;\n\n      EventEmitter.subscribe('openInviteModal', function (openInviteModal) {\n        _this2.setState({\n          modalState: openInviteModal\n        });\n      });\n      EventEmitter.subscribe('me', function (me) {\n        _this2.setState({\n          me: me\n        });\n      });\n      EventEmitter.subscribe('allOtherStudentsInClass', function (users) {\n        _this2.setState({\n          allUsers: users\n        });\n      });\n      EventEmitter.subscribe('currentGroupChange', function (currentGroup) {\n        _this2.setState({\n          currentGroup: currentGroup\n        });\n      });\n    }\n  }, {\n    key: \"getSelectedLabels\",\n    value: function getSelectedLabels() {\n      var _this3 = this;\n\n      // if (_.isEmpty(this.state.selectedUser)) {\n      //   return <></>\n      // }\n      // return (\n      //   <div\n      //     style={{\n      //       textAlign: 'left',\n      //       paddingLeft: 80,\n      //       paddingRight: 80,\n      //     }}\n      //   >\n      //     <Label>\n      //       {this.state.selectedUser.title}\n      //       <Icon\n      //         name=\"delete\"\n      //         onClick={() => this.removeSelected(this.state.selectedUser)}\n      //       />\n      //     </Label>\n      //   </div>\n      // )\n      if (_.isEmpty(this.state.selectedUser)) {\n        return __jsx(React.Fragment, null);\n      }\n\n      return __jsx(\"div\", {\n        style: {\n          textAlign: 'left',\n          paddingLeft: 80,\n          paddingRight: 80\n        }\n      }, this.state.selectedUser.map(function (user) {\n        return __jsx(Label, null, user.title, __jsx(Icon, {\n          name: \"delete\",\n          onClick: function onClick() {\n            return _this3.removeSelected(user);\n          }\n        }));\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(Modal, {\n        style: {\n          borderless: 'true',\n          width: '40%',\n          height: '40%'\n        },\n        open: this.state.modalState,\n        onClose: this.handleClose,\n        closeOnDimmerClick: false,\n        closeOnEscape: false,\n        closeIcon: true\n      }, __jsx(Modal.Content, {\n        style: {\n          borderless: 'true'\n        }\n      }, __jsx(\"div\", {\n        style: {\n          textAlign: 'center',\n          paddingTop: 80,\n          paddingLeft: 80,\n          paddingRight: 80,\n          paddingBottom: 20\n        }\n      }, __jsx(Search, {\n        fluid: true,\n        placeholder: \"Invite student...\",\n        input: {\n          fluid: true\n        },\n        loading: this.state.isLoading,\n        onResultSelect: this.handleResultSelect,\n        onSearchChange: _.debounce(this.handleSearchChange, 500, {\n          leading: true\n        }),\n        results: this.state.results,\n        value: this.state.value\n      })), this.getSelectedLabels(), __jsx(\"div\", {\n        style: {\n          textAlign: 'center',\n          width: '70%',\n          height: '70%',\n          margin: 'auto',\n          padding: 30\n        }\n      }, __jsx(Button, {\n        color: \"teal\",\n        style: {\n          width: '50%',\n          fontSize: '1vw'\n        },\n        onClick: this.handleInvite\n      }, \"Invite\")))));\n    }\n  }]);\n\n  return StudentInviteModal;\n}(Component);\n\nexport default StudentInviteModal;","map":null,"metadata":{},"sourceType":"module"}