{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport Layout from '../../components/layout';\nimport { Button, Accordion, List, Icon } from 'semantic-ui-react';\nimport { AuthRequired, useAuth } from '../../components/authProvider';\nimport Queue from '../../components/queue/queue';\nimport * as api from '../../util/mercuryService';\nimport CreateGroupModal from '../../components/createGroupModal';\nimport StudentInviteModal from '../../components/studentInviteModal';\nimport { EventEmitter } from '../../components/util/EventEmitter'; // import { render } from 'nprogress'\n\nconst CreateDiscussionModal = dynamic(() => import('../../components/createDiscussionModal'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/createDiscussionModal')],\n    modules: ['../../components/createDiscussionModal']\n  }\n});\nconst Vonage = dynamic(() => import('../../components/vonage'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/vonage')],\n    modules: ['../../components/vonage']\n  }\n});\nconst unClickedGroupsStyle = {\n  fontSize: '.8vw',\n  textAlign: 'left',\n  width: '80%',\n  marginBottom: '2%',\n  minWidth: '41px',\n  display: 'inline-block'\n};\nconst clickedGroupsStyle = {\n  fontSize: '.8vw',\n  textAlign: 'left',\n  width: '80%',\n  marginBottom: '2%',\n  minWidth: '41px',\n  background: '#e0e1e2',\n  borderRadius: 10,\n  borderWidth: 1,\n  borderColor: '#fff',\n  display: 'inline-block'\n};\n\nclass ClassPage extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"fetchCurrentClass\", () => {\n      api.getClass(this.classId).then(c => {\n        const userRole = c.users.find(u => u.id === this.user.id);\n        if (!userRole) this.props.router.push('/calendar');\n        this.setState({\n          currentClass: _objectSpread(_objectSpread({}, c), {}, {\n            role: userRole.role\n          })\n        });\n      }).catch(console.error);\n    });\n\n    _defineProperty(this, \"handleBack\", async () => {\n      await this.props.router.push('/calendar');\n    });\n\n    _defineProperty(this, \"handleSelectGroup\", group => {\n      api.postGroupToken(this.classId, group.id).then(({\n        token\n      }) => {\n        this.setState({\n          vonageCred: null\n        });\n        this.setState({\n          vonageCred: {\n            sessionId: group.sessionId,\n            token\n          }\n        });\n      }).catch(console.error);\n    });\n\n    _defineProperty(this, \"handleJoinTA\", group => {\n      this.handleSelectGroup(group);\n      this.setState({\n        currentGroup: group\n      });\n    });\n\n    _defineProperty(this, \"handleCreateGroup\", async group => {\n      await api.postGroup(this.classId, group.name, group.type).then(group => {\n        this.fetchCurrentClass();\n        this.handleSelectGroup(group);\n        this.setState({\n          currentGroup: group\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleInvite\", () => {\n      this.setState({\n        openInviteModal: false\n      });\n    });\n\n    this.state = {\n      clicked: 'none',\n      currentGroup: {\n        id: '',\n        name: ''\n      },\n      currentClass: {\n        id: '',\n        name: '',\n        groups: [],\n        users: [],\n        role: 'Student'\n      },\n      vonageCred: null,\n      openInviteModal: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      classId\n    } = this.props.router.query;\n    this.classId = classId;\n    if (!this.classId) return;\n    api.getMe().then(meData => {\n      this.user = meData;\n    }).then(() => api.getClass(this.classId)).then(c => {\n      const userRole = c.users.find(u => u.id === this.user.id);\n      if (!userRole) this.props.router.push('/calendar');\n      this.setState({\n        currentClass: _objectSpread(_objectSpread({}, c), {}, {\n          role: userRole.role\n        })\n      });\n    }).catch(console.error);\n  }\n\n  getButtonToDisplay() {\n    return this.state.currentClass.role === 'Student' ? __jsx(CreateGroupModal, {\n      onCreate: this.handleCreateGroup\n    }) : this.state.clicked === 'none' ? __jsx(Button, {\n      color: \"teal\",\n      content: \"Modify Discussions\",\n      fluid: true,\n      style: {\n        fontSize: '1vw'\n      },\n      onClick: () => {\n        this.setState({\n          clicked: 'inline'\n        });\n      }\n    }) : __jsx(React.Fragment, null, __jsx(CreateDiscussionModal, {\n      id: \"createDiscussionModal\",\n      onCreate: this.handleCreateGroup\n    }), __jsx(Button, {\n      color: \"red\",\n      content: \"Done\",\n      fluid: true,\n      style: {\n        fontSize: '1vw',\n        marginTop: '2%'\n      },\n      onClick: () => {\n        this.setState({\n          clicked: 'none'\n        });\n      }\n    }));\n  }\n\n  getDeleteButton(group) {\n    return __jsx(Button, {\n      id: `deletebutton${group.id}`,\n      compact: true,\n      icon: true,\n      size: \"mini\",\n      floated: \"right\",\n      style: {\n        display: `${this.state.clicked}`,\n        fontSize: '.6vw',\n        textAlign: 'center',\n        width: '10%',\n        marginBottom: '2%',\n        minWidth: '10px',\n        backgroundColor: 'transparent'\n      },\n      onClick: () => {\n        api.deleteGroup(this.classId, group.id);\n      }\n    }, __jsx(Icon, {\n      name: \"delete\",\n      color: \"red\"\n    }));\n  }\n\n  showInviteButton(group) {\n    const plusIcon = __jsx(List.Icon, {\n      name: \"user plus\",\n      size: \"med\"\n    });\n\n    const noPlusIcon = __jsx(\"div\", null);\n\n    return this.state.currentGroup.id == group.id && this.state.vonageCred !== null ? plusIcon : noPlusIcon;\n  }\n\n  showOffice() {\n    console.log(this.state.currentClass.role !== 'Student');\n    console.log(this.state.currentClass);\n    return (this.state.currentClass.role !== 'Student' || this.state.currentGroup.type === 'office') && __jsx(\"div\", {\n      style: {\n        paddingLeft: 20\n      }\n    }, __jsx(List, {\n      relaxed: true,\n      selection: true,\n      verticalAlign: \"middle\"\n    }, this.state.currentClass.groups.filter(group => group.type === 'office').map(group => __jsx(List.Item, {\n      key: `office`,\n      onClick: () => {\n        if (this.state.currentGroup.id !== group.id) {\n          this.handleSelectGroup(group);\n          this.setState({\n            currentGroup: group\n          });\n        } else {\n          this.setState({\n            openInviteModal: true\n          });\n        }\n      },\n      style: this.state.currentGroup.id == group.id && this.state.vonageCred !== null ? clickedGroupsStyle : unClickedGroupsStyle\n    }, __jsx(List.Icon, {\n      name: \"graduation cap\"\n    }), __jsx(List.Content, null, __jsx(List.Header, {\n      as: \"a\"\n    }, \"TA Office\")), this.showInviteButton(group)))));\n  }\n\n  leftDisplay() {\n    return __jsx(\"div\", {\n      style: {\n        height: '100%',\n        marginLeft: '2.5%'\n      }\n    }, __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 12,\n        width: '100%'\n      },\n      fluid: true\n    }, __jsx(Button, {\n      compact: true,\n      icon: \"angle left\",\n      content: this.state.currentClass.name,\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'left',\n        width: '75%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      onClick: this.handleBack\n    }), __jsx(Button, {\n      compact: true,\n      icon: \"setting\",\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'center',\n        width: '15%',\n        marginBottom: '2%',\n        minWidth: '14px'\n      }\n    })), this.showOffice(), __jsx(Accordion, {\n      fluid: true,\n      exclusive: false,\n      defaultActiveIndex: [0, 1],\n      style: {\n        fontSize: '1vw',\n        textAlign: 'left',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      panels: [{\n        key: 'discussions',\n        title: 'Discussions',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20,\n              height: 200,\n              overflow: 'auto'\n            }\n          }, __jsx(List, {\n            relaxed: true,\n            selection: true\n          }, this.state.currentClass.groups.filter(group => group.type === 'discussion').map(group => __jsx(React.Fragment, null, __jsx(List.Item, {\n            key: `discussion_${group.id}`,\n            onClick: () => {\n              if (this.state.currentGroup.id !== group.id) {\n                this.handleSelectGroup(group);\n                this.setState({\n                  currentGroup: group\n                });\n              }\n            },\n            style: this.state.currentGroup.id == group.id && this.state.vonageCred !== null ? clickedGroupsStyle : unClickedGroupsStyle\n          }, __jsx(List.Icon, {\n            name: \"sound\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name)), this.showInviteButton(group)), this.getDeleteButton(group)))))\n        }\n      }, {\n        key: 'private-groups',\n        title: 'Private Groups',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20,\n              height: 200,\n              overflow: 'auto'\n            }\n          }, __jsx(List, {\n            relaxed: true,\n            selection: true\n          }, this.state.currentClass.groups.filter(group => group.type === 'group').map(group => __jsx(List.Item, {\n            key: `private_group_${group.id}`,\n            onClick: () => {\n              if (this.state.currentGroup.id !== group.id) {\n                this.handleSelectGroup(group);\n                this.setState({\n                  currentGroup: group\n                });\n              }\n            },\n            style: this.state.currentGroup.id == group.id && this.state.vonageCred !== null ? clickedGroupsStyle : unClickedGroupsStyle\n          }, __jsx(List.Icon, {\n            name: \"lock\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name)), this.showInviteButton(group)))))\n        }\n      }]\n    }), __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14\n      }\n    }, this.getButtonToDisplay()));\n  }\n\n  render() {\n    return __jsx(Layout, {\n      left: this.leftDisplay(),\n      right: __jsx(Queue, {\n        onJoin: this.handleJoinTA\n      })\n    }, this.state.vonageCred && __jsx(Vonage, {\n      sessionId: this.state.vonageCred.sessionId,\n      token: this.state.vonageCred.token,\n      onLeave: () => {\n        this.setState({\n          vonageCred: null\n        });\n        this.setState({\n          currentGroup: {\n            id: '',\n            name: ''\n          }\n        });\n        EventEmitter.publish('callOver');\n      }\n    }), __jsx(StudentInviteModal, {\n      isOpen: this.openInviteModal,\n      onInvite: this.handleInvite\n    }));\n  }\n\n}\n\nexport default AuthRequired(withRouter(ClassPage));","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/pages/classes/[classId].js"],"names":["React","Component","withRouter","dynamic","Layout","Button","Accordion","List","Icon","AuthRequired","useAuth","Queue","api","CreateGroupModal","StudentInviteModal","EventEmitter","CreateDiscussionModal","ssr","Vonage","unClickedGroupsStyle","fontSize","textAlign","width","marginBottom","minWidth","display","clickedGroupsStyle","background","borderRadius","borderWidth","borderColor","ClassPage","constructor","props","getClass","classId","then","c","userRole","users","find","u","id","user","router","push","setState","currentClass","role","catch","console","error","group","postGroupToken","token","vonageCred","sessionId","handleSelectGroup","currentGroup","postGroup","name","type","fetchCurrentClass","openInviteModal","state","clicked","groups","componentDidMount","query","getMe","meData","getButtonToDisplay","handleCreateGroup","marginTop","getDeleteButton","backgroundColor","deleteGroup","showInviteButton","plusIcon","noPlusIcon","showOffice","log","paddingLeft","filter","map","leftDisplay","height","marginLeft","handleBack","key","title","content","overflow","position","bottom","render","handleJoinTA","publish","handleInvite"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { withRouter } from 'next/router'\r\nimport dynamic from 'next/dynamic'\r\nimport Layout from '../../components/layout'\r\nimport { Button, Accordion, List, Icon } from 'semantic-ui-react'\r\nimport { AuthRequired, useAuth } from '../../components/authProvider'\r\nimport Queue from '../../components/queue/queue'\r\nimport * as api from '../../util/mercuryService'\r\nimport CreateGroupModal from '../../components/createGroupModal'\r\nimport StudentInviteModal from '../../components/studentInviteModal'\r\nimport { EventEmitter } from '../../components/util/EventEmitter'\r\n// import { render } from 'nprogress'\r\n\r\nconst CreateDiscussionModal = dynamic(\r\n  () => import('../../components/createDiscussionModal'),\r\n  {\r\n    ssr: false,\r\n  }\r\n)\r\nconst Vonage = dynamic(() => import('../../components/vonage'), {\r\n  ssr: false,\r\n})\r\n\r\nconst unClickedGroupsStyle = {\r\n  fontSize: '.8vw',\r\n  textAlign: 'left',\r\n  width: '80%',\r\n  marginBottom: '2%',\r\n  minWidth: '41px',\r\n  display: 'inline-block',\r\n}\r\n\r\nconst clickedGroupsStyle = {\r\n  fontSize: '.8vw',\r\n  textAlign: 'left',\r\n  width: '80%',\r\n  marginBottom: '2%',\r\n  minWidth: '41px',\r\n  background: '#e0e1e2',\r\n  borderRadius: 10,\r\n  borderWidth: 1,\r\n  borderColor: '#fff',\r\n  display: 'inline-block',\r\n}\r\n\r\nclass ClassPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      clicked: 'none',\r\n      currentGroup: { id: '', name: '' },\r\n      currentClass: {\r\n        id: '',\r\n        name: '',\r\n        groups: [],\r\n        users: [],\r\n        role: 'Student',\r\n      },\r\n      vonageCred: null,\r\n      openInviteModal: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { classId } = this.props.router.query\r\n    this.classId = classId\r\n    if (!this.classId) return\r\n\r\n    api\r\n      .getMe()\r\n      .then((meData) => {\r\n        this.user = meData\r\n      })\r\n      .then(() => api.getClass(this.classId))\r\n      .then((c) => {\r\n        const userRole = c.users.find((u) => u.id === this.user.id)\r\n        if (!userRole) this.props.router.push('/calendar')\r\n        this.setState({\r\n          currentClass: {\r\n            ...c,\r\n            role: userRole.role,\r\n          },\r\n        })\r\n      })\r\n      .catch(console.error)\r\n  }\r\n\r\n  fetchCurrentClass = () => {\r\n    api\r\n      .getClass(this.classId)\r\n      .then((c) => {\r\n        const userRole = c.users.find((u) => u.id === this.user.id)\r\n        if (!userRole) this.props.router.push('/calendar')\r\n        this.setState({\r\n          currentClass: {\r\n            ...c,\r\n            role: userRole.role,\r\n          },\r\n        })\r\n      })\r\n      .catch(console.error)\r\n  }\r\n\r\n  handleBack = async () => {\r\n    await this.props.router.push('/calendar')\r\n  }\r\n\r\n  handleSelectGroup = (group) => {\r\n    api\r\n      .postGroupToken(this.classId, group.id)\r\n      .then(({ token }) => {\r\n        this.setState({ vonageCred: null })\r\n        this.setState({ vonageCred: { sessionId: group.sessionId, token } })\r\n      })\r\n      .catch(console.error)\r\n  }\r\n\r\n  handleJoinTA = (group) => {\r\n    this.handleSelectGroup(group)\r\n    this.setState({ currentGroup: group })\r\n  }\r\n\r\n  getButtonToDisplay() {\r\n    return this.state.currentClass.role === 'Student' ? (\r\n      <CreateGroupModal onCreate={this.handleCreateGroup} />\r\n    ) : this.state.clicked === 'none' ? (\r\n      <Button\r\n        color=\"teal\"\r\n        content=\"Modify Discussions\"\r\n        fluid\r\n        style={{ fontSize: '1vw' }}\r\n        onClick={() => {\r\n          this.setState({ clicked: 'inline' })\r\n        }}\r\n      />\r\n    ) : (\r\n      <>\r\n        <CreateDiscussionModal\r\n          id=\"createDiscussionModal\"\r\n          onCreate={this.handleCreateGroup}\r\n        />\r\n        <Button\r\n          color=\"red\"\r\n          content=\"Done\"\r\n          fluid\r\n          style={{ fontSize: '1vw', marginTop: '2%' }}\r\n          onClick={() => {\r\n            this.setState({ clicked: 'none' })\r\n          }}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n\r\n  getDeleteButton(group) {\r\n    return (\r\n      <Button\r\n        id={`deletebutton${group.id}`}\r\n        compact\r\n        icon\r\n        size=\"mini\"\r\n        floated=\"right\"\r\n        style={{\r\n          display: `${this.state.clicked}`,\r\n          fontSize: '.6vw',\r\n          textAlign: 'center',\r\n          width: '10%',\r\n          marginBottom: '2%',\r\n          minWidth: '10px',\r\n          backgroundColor: 'transparent',\r\n        }}\r\n        onClick={() => {\r\n          api.deleteGroup(this.classId, group.id)\r\n        }}\r\n      >\r\n        <Icon name=\"delete\" color=\"red\" />\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  handleCreateGroup = async (group) => {\r\n    await api.postGroup(this.classId, group.name, group.type).then((group) => {\r\n      this.fetchCurrentClass()\r\n      this.handleSelectGroup(group)\r\n      this.setState({ currentGroup: group })\r\n    })\r\n  }\r\n\r\n  showInviteButton(group) {\r\n    const plusIcon = <List.Icon name=\"user plus\" size=\"med\" />\r\n    const noPlusIcon = <div></div>\r\n\r\n    return this.state.currentGroup.id == group.id &&\r\n      this.state.vonageCred !== null\r\n      ? plusIcon\r\n      : noPlusIcon\r\n  }\r\n\r\n  handleInvite = () => {\r\n    this.setState({ openInviteModal: false })\r\n  }\r\n\r\n  showOffice() {\r\n    console.log(this.state.currentClass.role !== 'Student')\r\n    console.log(this.state.currentClass)\r\n    return (\r\n      (this.state.currentClass.role !== 'Student' ||\r\n        this.state.currentGroup.type === 'office') && (\r\n        <div style={{ paddingLeft: 20 }}>\r\n          <List relaxed selection verticalAlign=\"middle\">\r\n            {this.state.currentClass.groups\r\n              .filter((group) => group.type === 'office')\r\n              .map((group) => (\r\n                <List.Item\r\n                  key={`office`}\r\n                  onClick={() => {\r\n                    if (this.state.currentGroup.id !== group.id) {\r\n                      this.handleSelectGroup(group)\r\n                      this.setState({ currentGroup: group })\r\n                    } else {\r\n                      this.setState({ openInviteModal: true })\r\n                    }\r\n                  }}\r\n                  style={\r\n                    this.state.currentGroup.id == group.id &&\r\n                    this.state.vonageCred !== null\r\n                      ? clickedGroupsStyle\r\n                      : unClickedGroupsStyle\r\n                  }\r\n                >\r\n                  <List.Icon name=\"graduation cap\" />\r\n                  <List.Content>\r\n                    <List.Header as=\"a\">TA Office</List.Header>\r\n                  </List.Content>\r\n                  {this.showInviteButton(group)}\r\n                </List.Item>\r\n              ))}\r\n          </List>\r\n        </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  leftDisplay() {\r\n    return (\r\n      <div style={{ height: '100%', marginLeft: '2.5%' }}>\r\n        <Button.Group\r\n          size=\"huge\"\r\n          style={{ marginBottom: 12, width: '100%' }}\r\n          fluid\r\n        >\r\n          <Button\r\n            compact\r\n            icon=\"angle left\"\r\n            content={this.state.currentClass.name}\r\n            style={{\r\n              fontSize: '1.5vw',\r\n              textAlign: 'left',\r\n              width: '75%',\r\n              marginBottom: '2%',\r\n              minWidth: '41px',\r\n            }}\r\n            onClick={this.handleBack}\r\n          />\r\n          <Button\r\n            compact\r\n            icon=\"setting\"\r\n            style={{\r\n              fontSize: '1.5vw',\r\n              textAlign: 'center',\r\n              width: '15%',\r\n              marginBottom: '2%',\r\n              minWidth: '14px',\r\n            }}\r\n          />\r\n        </Button.Group>\r\n        {this.showOffice()}\r\n        <Accordion\r\n          fluid\r\n          exclusive={false}\r\n          defaultActiveIndex={[0, 1]}\r\n          style={{\r\n            fontSize: '1vw',\r\n            textAlign: 'left',\r\n            width: '100%',\r\n            marginBottom: '2%',\r\n            minWidth: '41px',\r\n          }}\r\n          panels={[\r\n            {\r\n              key: 'discussions',\r\n              title: 'Discussions',\r\n              content: {\r\n                content: (\r\n                  <div\r\n                    style={{ paddingLeft: 20, height: 200, overflow: 'auto' }}\r\n                  >\r\n                    <List relaxed selection>\r\n                      {this.state.currentClass.groups\r\n                        .filter((group) => group.type === 'discussion')\r\n                        .map((group) => (\r\n                          <>\r\n                            <List.Item\r\n                              key={`discussion_${group.id}`}\r\n                              onClick={() => {\r\n                                if (this.state.currentGroup.id !== group.id) {\r\n                                  this.handleSelectGroup(group)\r\n                                  this.setState({ currentGroup: group })\r\n                                }\r\n                              }}\r\n                              style={\r\n                                this.state.currentGroup.id == group.id &&\r\n                                this.state.vonageCred !== null\r\n                                  ? clickedGroupsStyle\r\n                                  : unClickedGroupsStyle\r\n                              }\r\n                            >\r\n                              <List.Icon name=\"sound\" />\r\n                              <List.Content>\r\n                                <List.Header as=\"a\">{group.name}</List.Header>\r\n                              </List.Content>\r\n                              {this.showInviteButton(group)}\r\n                            </List.Item>\r\n                            {this.getDeleteButton(group)}\r\n                          </>\r\n                        ))}\r\n                    </List>\r\n                  </div>\r\n                ),\r\n              },\r\n            },\r\n            {\r\n              key: 'private-groups',\r\n              title: 'Private Groups',\r\n              content: {\r\n                content: (\r\n                  <div\r\n                    style={{ paddingLeft: 20, height: 200, overflow: 'auto' }}\r\n                  >\r\n                    <List relaxed selection>\r\n                      {this.state.currentClass.groups\r\n                        .filter((group) => group.type === 'group')\r\n                        .map((group) => (\r\n                          <List.Item\r\n                            key={`private_group_${group.id}`}\r\n                            onClick={() => {\r\n                              if (this.state.currentGroup.id !== group.id) {\r\n                                this.handleSelectGroup(group)\r\n                                this.setState({ currentGroup: group })\r\n                              }\r\n                            }}\r\n                            style={\r\n                              this.state.currentGroup.id == group.id &&\r\n                              this.state.vonageCred !== null\r\n                                ? clickedGroupsStyle\r\n                                : unClickedGroupsStyle\r\n                            }\r\n                          >\r\n                            <List.Icon name=\"lock\" />\r\n                            <List.Content>\r\n                              <List.Header as=\"a\">{group.name}</List.Header>\r\n                            </List.Content>\r\n                            {this.showInviteButton(group)}\r\n                          </List.Item>\r\n                        ))}\r\n                    </List>\r\n                  </div>\r\n                ),\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            width: 'calc(100% - 38px)',\r\n            bottom: 14,\r\n          }}\r\n        >\r\n          {this.getButtonToDisplay()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout\r\n        left={this.leftDisplay()}\r\n        right={<Queue onJoin={this.handleJoinTA} />}\r\n      >\r\n        {this.state.vonageCred && (\r\n          <Vonage\r\n            sessionId={this.state.vonageCred.sessionId}\r\n            token={this.state.vonageCred.token}\r\n            onLeave={() => {\r\n              this.setState({ vonageCred: null })\r\n              this.setState({ currentGroup: { id: '', name: '' } })\r\n              EventEmitter.publish('callOver')\r\n            }}\r\n          />\r\n        )}\r\n        <StudentInviteModal\r\n          isOpen={this.openInviteModal}\r\n          onInvite={this.handleInvite}\r\n        />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\nexport default AuthRequired(withRouter(ClassPage))\r\n"]},"metadata":{},"sourceType":"module"}