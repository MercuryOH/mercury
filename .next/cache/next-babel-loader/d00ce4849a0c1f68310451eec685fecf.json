{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport LargeLabel from '../components/largeLabel';\nimport DropDown from '../components/dropDown';\nimport Layout from '../components/layout';\nimport HeadComponent from '../components/headComponent';\nimport { EventEmitter } from '../components/util/EventEmitter';\nimport { AuthRequired } from '../components/authProvider';\nimport * as api from '../util/mercuryService';\nconst colors = ['D50000', 'F4511E', 'F6BF26', 'C0CA33', '0B8043', '009688'];\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classes: []\n    };\n  }\n\n  componentDidMount() {\n    api.getClasses().then(classes => this.setState({\n      classes\n    }));\n    EventEmitter.subscribe('currentlyEnrolled', classes => {\n      this.setState({\n        classes\n      });\n    });\n    console.log(this.state.classes);\n  }\n\n  mergeCal(classList) {\n    var src = 'https://calendar.google.com/calendar/embed?mode=WEEK&showTitle=0';\n    classList.filter(cc => cc.role !== '').forEach(c => {\n      src = src + '&src=' + c.calendarId + '&color=%23' + colors[(c.id - 2) % colors.length];\n    });\n    return src;\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(HeadComponent, null), __jsx(Layout, {\n      left: __jsx(\"div\", {\n        style: {\n          paddingLeft: 20,\n          paddingRight: 20\n        }\n      }, __jsx(LargeLabel, {\n        content: __jsx(\"p\", null, \"Classes\")\n      }), __jsx(DropDown, null))\n    }, __jsx(\"iframe\", {\n      src: this.mergeCal(this.state.classes),\n      style: {\n        border: '0'\n      },\n      width: '100%',\n      height: '100%',\n      frameBorder: 0,\n      scrolling: \"no\"\n    })));\n  }\n\n}\n\nexport default AuthRequired(Calendar);","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/pages/calendar.js"],"names":["React","Component","LargeLabel","DropDown","Layout","HeadComponent","EventEmitter","AuthRequired","api","colors","Calendar","constructor","props","state","classes","componentDidMount","getClasses","then","setState","subscribe","console","log","mergeCal","classList","src","filter","cc","role","forEach","c","calendarId","id","length","render","paddingLeft","paddingRight","border"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,YAAT,QAA6B,iCAA7B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,wBAArB;AAEA,MAAMC,MAAM,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,QAAnD,CAAf;;AAEA,MAAMC,QAAN,SAAuBT,SAAvB,CAAiC;AAC/BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBP,IAAAA,GAAG,CAACQ,UAAJ,GAAiBC,IAAjB,CAAuBH,OAAD,IAAa,KAAKI,QAAL,CAAc;AAAEJ,MAAAA;AAAF,KAAd,CAAnC;AAEAR,IAAAA,YAAY,CAACa,SAAb,CAAuB,mBAAvB,EAA6CL,OAAD,IAAa;AACvD,WAAKI,QAAL,CAAc;AAAEJ,QAAAA;AAAF,OAAd;AACD,KAFD;AAGAM,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,OAAvB;AACD;;AAEDQ,EAAAA,QAAQ,CAACC,SAAD,EAAY;AAClB,QAAIC,GAAG,GAAG,kEAAV;AACAD,IAAAA,SAAS,CACNE,MADH,CACWC,EAAD,IAAQA,EAAE,CAACC,IAAH,KAAY,EAD9B,EAEGC,OAFH,CAEYC,CAAD,IAAO;AACdL,MAAAA,GAAG,GACDA,GAAG,GACH,OADA,GAEAK,CAAC,CAACC,UAFF,GAGA,YAHA,GAIArB,MAAM,CAAC,CAACoB,CAAC,CAACE,EAAF,GAAO,CAAR,IAAatB,MAAM,CAACuB,MAArB,CALR;AAMD,KATH;AAWA,WAAOR,GAAP;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,WACE,4BACE,MAAC,aAAD,OADF,EAEE,MAAC,MAAD;AACE,MAAA,IAAI,EACF;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAE,EAAf;AAAmBC,UAAAA,YAAY,EAAE;AAAjC;AAAZ,SACE,MAAC,UAAD;AAAY,QAAA,OAAO,EAAE;AAArB,QADF,EAEE,MAAC,QAAD,OAFF;AAFJ,OAQE;AACE,MAAA,GAAG,EAAE,KAAKb,QAAL,CAAc,KAAKT,KAAL,CAAWC,OAAzB,CADP;AAEE,MAAA,KAAK,EAAE;AAAEsB,QAAAA,MAAM,EAAE;AAAV,OAFT;AAGE,MAAA,KAAK,EAAE,MAHT;AAIE,MAAA,MAAM,EAAE,MAJV;AAKE,MAAA,WAAW,EAAE,CALf;AAME,MAAA,SAAS,EAAC;AANZ,MARF,CAFF,CADF;AAsBD;;AAvD8B;;AA0DjC,eAAe7B,YAAY,CAACG,QAAD,CAA3B","sourcesContent":["import React, { Component } from 'react'\r\nimport LargeLabel from '../components/largeLabel'\r\nimport DropDown from '../components/dropDown'\r\nimport Layout from '../components/layout'\r\nimport HeadComponent from '../components/headComponent'\r\nimport { EventEmitter } from '../components/util/EventEmitter'\r\nimport { AuthRequired } from '../components/authProvider'\r\nimport * as api from '../util/mercuryService'\r\n\r\nconst colors = ['D50000', 'F4511E', 'F6BF26', 'C0CA33', '0B8043', '009688']\r\n\r\nclass Calendar extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      classes: [],\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    api.getClasses().then((classes) => this.setState({ classes }))\r\n\r\n    EventEmitter.subscribe('currentlyEnrolled', (classes) => {\r\n      this.setState({ classes })\r\n    })\r\n    console.log(this.state.classes)\r\n  }\r\n\r\n  mergeCal(classList) {\r\n    var src = 'https://calendar.google.com/calendar/embed?mode=WEEK&showTitle=0'\r\n    classList\r\n      .filter((cc) => cc.role !== '')\r\n      .forEach((c) => {\r\n        src =\r\n          src +\r\n          '&src=' +\r\n          c.calendarId +\r\n          '&color=%23' +\r\n          colors[(c.id - 2) % colors.length]\r\n      })\r\n\r\n    return src\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n        <HeadComponent />\r\n        <Layout\r\n          left={\r\n            <div style={{ paddingLeft: 20, paddingRight: 20 }}>\r\n              <LargeLabel content={<p>Classes</p>}></LargeLabel>\r\n              <DropDown></DropDown>\r\n            </div>\r\n          }\r\n        >\r\n          <iframe\r\n            src={this.mergeCal(this.state.classes)}\r\n            style={{ border: '0' }}\r\n            width={'100%'}\r\n            height={'100%'}\r\n            frameBorder={0}\r\n            scrolling=\"no\"\r\n          ></iframe>\r\n        </Layout>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AuthRequired(Calendar)\r\n"]},"metadata":{},"sourceType":"module"}