{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Cookies from 'js-cookie';\nimport * as api from '../util/mercuryService';\nimport { Segment } from 'semantic-ui-react';\nconst MERCURY_TOKEN = 'mercury-token';\nconst AuthContext = createContext({});\nexport function AuthProvider({\n  children\n}) {\n  const router = useRouter();\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n\n  const loadUserFromCookies = async () => {\n    const token = Cookies.get(MERCURY_TOKEN);\n\n    if (token) {\n      api.setToken(`Bearer ${token}`);\n      const currentUser = await api.getMe();\n      if (currentUser) setUser(currentUser);\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    loadUserFromCookies();\n  }, []);\n\n  const login = async (email, password) => {\n    const loginResponse = await api.postLogin(email, password);\n    if (!loginResponse || !loginResponse.token) return null;\n    Cookies.set(MERCURY_TOKEN, loginResponse.token, {\n      expires: 60\n    });\n    api.setToken(`Bearer ${loginResponse.token}`);\n    const currentUser = await api.getMe();\n    if (currentUser) setUser(currentUser);\n    return currentUser;\n  };\n\n  const logout = async () => {\n    Cookies.remove(MERCURY_TOKEN);\n    setUser(null);\n    await router.push('/login');\n  };\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout,\n      isAuthenticated: !!user\n    }\n  }, children);\n}\nexport function AuthRequired(Component) {\n  return () => {\n    const router = useRouter();\n    const {\n      isAuthenticated,\n      loading\n    } = useAuth();\n    useEffect(() => {\n      if (!isAuthenticated && !loading) router.push('/login');\n    }, [loading, isAuthenticated]);\n    return loading ? __jsx(Segment, {\n      style: {\n        height: '100vh'\n      },\n      loading: true\n    }) : __jsx(Component, arguments);\n  };\n}\nexport function useAuth() {\n  return useContext(AuthContext);\n}","map":null,"metadata":{},"sourceType":"module"}