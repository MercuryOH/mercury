{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport Layout from '../../components/layout';\nimport { Button, Accordion, List } from 'semantic-ui-react';\nimport { AuthRequired } from '../../components/authProvider';\nimport Queue from '../../components/queue/queue';\nimport * as api from '../../util/mercuryService';\nimport CreateGroupModal from '../../components/createGroupModal';\nvar Vonage = dynamic(_c = function _c() {\n  return import('../../components/vonage');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../components/vonage')];\n    },\n    modules: ['../../components/vonage']\n  }\n});\n_c2 = Vonage;\n\nfunction ClassPage() {\n  _s();\n\n  var router = useRouter(); //const [groups, setGroups, classes, setClasses] = useState([])\n\n  var _useState = useState({\n    id: \"\",\n    name: \"\"\n  }),\n      currentClass = _useState[0],\n      setCurrentClass = _useState[1]; //const [vonageCred, setVonageCred] = useState(null)\n\n\n  var classId = router.query.classId;\n  useEffect(function () {\n    if (!classId) return;\n    api.getClassNG(classId).then(function (currentClass) {\n      return setCurrentClasses(currentClass);\n    })[\"catch\"](console.error);\n  }, [classId]);\n  /*useEffect(() => {\n    if (!classId) return\n     api\n      .getGroups(classId)\n      .then((groups) => setGroups(groups))\n      .catch(console.error)\n  }, [classId])\n   useEffect(() => {\n    api\n      .getClasses()\n      .then((classes) => setClasses(groups))\n      .catch(console.error)\n  }, [])\n   function getClassName(classList) {\n    var correctClass = ''\n    classList.forEach((c) => {\n      if (c.id === classId) {\n        correctClass = c.name\n      }\n    })\n    return correctClass\n  }*/\n\n  var handleBack = function handleBack() {\n    router.push('/calendar');\n  };\n  /*const handleSelectGroup = (group) => {\n    api\n      .postGroupToken(classId, group.id)\n      .then(({ token }) => setVonageCred({ sessionId: group.sessionId, token }))\n      .catch(console.error)\n  }*/\n\n\n  return __jsx(Layout, {\n    left: __jsx(\"div\", {\n      style: {\n        height: '100%',\n        marginLeft: '2.5%'\n      }\n    }, __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 12,\n        width: '100%'\n      },\n      fluid: true\n    }, __jsx(Button, {\n      compact: true,\n      icon: \"angle left\" //content= \"class.name\"\n      ,\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'left',\n        width: '75%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      onClick: handleBack\n    }, currentClass.name), __jsx(Button, {\n      compact: true,\n      icon: \"setting\",\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'center',\n        width: '15%',\n        marginBottom: '2%',\n        minWidth: '14px'\n      }\n    })), \"/*\", __jsx(Accordion, {\n      fluid: true,\n      exclusive: false,\n      defaultActiveIndex: [0, 1],\n      style: {\n        fontSize: '1vw',\n        textAlign: 'left',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      panels: [{\n        key: 'discussions',\n        title: 'Discussions',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20\n            }\n          }, __jsx(List, {\n            relaxed: true\n          }, groups.filter(function (group) {\n            return group.type === 'discussion';\n          }).map(function (group) {\n            return __jsx(List.Item, {\n              key: \"discussion_\".concat(group.id),\n              onClick: function onClick() {\n                return handleSelectGroup(group);\n              },\n              style: {\n                fontSize: '.8vw',\n                textAlign: 'left',\n                width: '75%',\n                marginBottom: '2%',\n                minWidth: '41px'\n              }\n            }, __jsx(List.Icon, {\n              name: \"sound\"\n            }), __jsx(List.Content, null, __jsx(List.Header, {\n              as: \"a\"\n            }, group.name)));\n          })))\n        }\n      }, {\n        key: 'private-groups',\n        title: 'Private Groups',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20\n            }\n          }, __jsx(List, {\n            relaxed: true\n          }, groups.filter(function (group) {\n            return group.type === 'group';\n          }).map(function (group) {\n            return __jsx(List.Item, {\n              key: \"private_group_\".concat(group.id),\n              onClick: function onClick() {\n                return handleSelectGroup(group);\n              },\n              style: {\n                fontSize: '.6vw',\n                textAlign: 'left',\n                width: '75%',\n                marginBottom: '2%',\n                minWidth: '41px'\n              }\n            }, __jsx(List.Icon, {\n              name: \"lock\"\n            }), __jsx(List.Content, null, __jsx(List.Header, {\n              as: \"a\"\n            }, group.name)));\n          })))\n        }\n      }]\n    }), __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14\n      }\n    }, __jsx(CreateGroupModal, null)), \"*/\"),\n    right: __jsx(Queue, null)\n  }, \"/*\", vonageCred && __jsx(Vonage, {\n    sessionId: vonageCred.sessionId,\n    token: vonageCred.token,\n    onLeave: function onLeave() {\n      return setVonageCred(null);\n    }\n  }), \"*/\");\n}\n\n_s(ClassPage, \"0IczmuQyUiTmRr5GeRhpL2m2yIY=\", false, function () {\n  return [useRouter];\n});\n\n_c3 = ClassPage;\nexport default _c4 = AuthRequired(ClassPage);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Vonage$dynamic\");\n$RefreshReg$(_c2, \"Vonage\");\n$RefreshReg$(_c3, \"ClassPage\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/pages/classes/[classId].js"],"names":["React","useEffect","useState","useRouter","dynamic","Layout","Button","Accordion","List","AuthRequired","Queue","api","CreateGroupModal","Vonage","ssr","ClassPage","router","id","name","currentClass","setCurrentClass","classId","query","getClassNG","then","setCurrentClasses","console","error","handleBack","push","height","marginLeft","marginBottom","width","fontSize","textAlign","minWidth","key","title","content","paddingLeft","groups","filter","group","type","map","handleSelectGroup","position","bottom","vonageCred","sessionId","token","setVonageCred"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport dynamic from 'next/dynamic'\nimport Layout from '../../components/layout'\nimport { Button, Accordion, List } from 'semantic-ui-react'\nimport { AuthRequired } from '../../components/authProvider'\nimport Queue from '../../components/queue/queue'\nimport * as api from '../../util/mercuryService'\nimport CreateGroupModal from '../../components/createGroupModal'\n\nconst Vonage = dynamic(() => import('../../components/vonage'), {\n  ssr: false,\n})\n\nfunction ClassPage() {\n  const router = useRouter()\n  //const [groups, setGroups, classes, setClasses] = useState([])\n  const [currentClass, setCurrentClass] = useState({id: \"\", name: \"\"})\n  //const [vonageCred, setVonageCred] = useState(null)\n  const { classId } = router.query\n\n  useEffect(() => {\n    if (!classId) return\n\n    api\n      .getClassNG(classId)\n      .then((currentClass) => setCurrentClasses(currentClass))\n      .catch(console.error)\n  }, [classId])\n\n  /*useEffect(() => {\n    if (!classId) return\n\n    api\n      .getGroups(classId)\n      .then((groups) => setGroups(groups))\n      .catch(console.error)\n  }, [classId])\n\n  useEffect(() => {\n    api\n      .getClasses()\n      .then((classes) => setClasses(groups))\n      .catch(console.error)\n  }, [])\n\n  function getClassName(classList) {\n    var correctClass = ''\n    classList.forEach((c) => {\n      if (c.id === classId) {\n        correctClass = c.name\n      }\n    })\n    return correctClass\n  }*/\n\n  const handleBack = () => {\n    router.push('/calendar')\n  }\n\n  /*const handleSelectGroup = (group) => {\n    api\n      .postGroupToken(classId, group.id)\n      .then(({ token }) => setVonageCred({ sessionId: group.sessionId, token }))\n      .catch(console.error)\n  }*/\n\n  return (\n    <Layout\n      left={\n        <div style={{ height: '100%', marginLeft: '2.5%' }}>\n          <Button.Group\n            size=\"huge\"\n            style={{ marginBottom: 12, width: '100%'}}\n            fluid\n          >\n            <Button\n              compact\n              icon=\"angle left\"\n              //content= \"class.name\"\n              style={{\n                fontSize: '1.5vw',\n                textAlign: 'left',\n                width: '75%',\n                marginBottom: '2%',\n                minWidth: '41px',\n              }}\n              onClick={handleBack}\n            >\n            {currentClass.name}\n            </Button>\n            <Button\n              compact\n              icon=\"setting\"\n              style={{\n                fontSize: '1.5vw',\n                textAlign: 'center',\n                width: '15%',\n                marginBottom: '2%',\n                minWidth: '14px',\n              }}\n            />\n          </Button.Group>\n          /*<Accordion\n            fluid\n            exclusive={false}\n            defaultActiveIndex={[0, 1]}\n            style={{\n              fontSize: '1vw',\n              textAlign: 'left',\n              width: '100%',\n              marginBottom: '2%',\n              minWidth: '41px',\n            }}\n            panels={[\n              {\n                key: 'discussions',\n                title: 'Discussions',\n                content: {\n                  content: (\n                    <div style={{ paddingLeft: 20 }}>\n                      <List relaxed>\n                        {groups\n                          .filter((group) => group.type === 'discussion')\n                          .map((group) => (\n                            <List.Item\n                              key={`discussion_${group.id}`}\n                              onClick={() => handleSelectGroup(group)}\n                              style={{\n                                fontSize: '.8vw',\n                                textAlign: 'left',\n                                width: '75%',\n                                marginBottom: '2%',\n                                minWidth: '41px',\n                              }}\n                            >\n                              <List.Icon name=\"sound\" />\n                              <List.Content>\n                                <List.Header as=\"a\">{group.name}</List.Header>\n                              </List.Content>\n                            </List.Item>\n                          ))}\n                      </List>\n                    </div>\n                  ),\n                },\n              },\n              {\n                key: 'private-groups',\n                title: 'Private Groups',\n                content: {\n                  content: (\n                    <div style={{ paddingLeft: 20 }}>\n                      <List relaxed>\n                        {groups\n                          .filter((group) => group.type === 'group')\n                          .map((group) => (\n                            <List.Item\n                              key={`private_group_${group.id}`}\n                              onClick={() => handleSelectGroup(group)}\n                              style={{\n                                fontSize: '.6vw',\n                                textAlign: 'left',\n                                width: '75%',\n                                marginBottom: '2%',\n                                minWidth: '41px',\n                              }}\n                            >\n                              <List.Icon name=\"lock\" />\n                              <List.Content>\n                                <List.Header as=\"a\">{group.name}</List.Header>\n                              </List.Content>\n                            </List.Item>\n                          ))}\n                      </List>\n                    </div>\n                  ),\n                },\n              },\n            ]}\n          />\n          <div\n            style={{\n              position: 'absolute',\n              width: 'calc(100% - 38px)',\n              bottom: 14,\n            }}\n          >\n            <CreateGroupModal />\n          </div>*/\n        </div>\n      }\n      right={<Queue />}\n    >\n      /*{vonageCred && (\n        <Vonage\n          sessionId={vonageCred.sessionId}\n          token={vonageCred.token}\n          onLeave={() => setVonageCred(null)}\n        />\n      )}*/\n    </Layout>\n  )\n}\n\nexport default AuthRequired(ClassPage)\n"]},"metadata":{},"sourceType":"module"}