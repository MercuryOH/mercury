{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Layout from '../../components/layout';\nimport { Button, Accordion, List } from 'semantic-ui-react';\nimport { AuthRequired } from '../../components/authProvider';\nimport Queue from '../../components/queue/queue';\nimport * as api from '../../util/mercuryService';\nimport CreateGroupModal from '../../components/createGroupModal';\n\nfunction ClassPage() {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState([]),\n      groups = _useState[0],\n      setGroups = _useState[1];\n\n  var classId = router.query.classId;\n  useEffect(function () {\n    if (!classId) return;\n    api.getGroups(classId).then(function (groups) {\n      return setGroups(groups);\n    })[\"catch\"](console.error);\n  }, [classId]);\n  return __jsx(Layout, {\n    left: __jsx(\"div\", {\n      style: {\n        height: '100%'\n      }\n    }, __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 20\n      },\n      fluid: true\n    }, __jsx(Button, {\n      icon: \"angle left\",\n      content: \"CS-101\"\n    }), __jsx(Button, {\n      icon: \"setting\"\n    })), __jsx(Accordion, {\n      fluid: true,\n      exclusive: false,\n      defaultActiveIndex: [0, 1],\n      panels: [{\n        key: 'discussions',\n        title: 'Discussions',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20\n            }\n          }, __jsx(List, {\n            relaxed: true\n          }, groups.filter(function (group) {\n            return group.type === 'discussion';\n          }).map(function (group) {\n            return __jsx(List.Item, {\n              key: \"discussion_\".concat(group.id)\n            }, __jsx(List.Icon, {\n              name: \"sound\"\n            }), __jsx(List.Content, null, __jsx(List.Header, {\n              as: \"a\"\n            }, group.name)));\n          })))\n        }\n      }, {\n        key: 'private-groups',\n        title: 'Private Groups',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20\n            }\n          }, __jsx(List, {\n            relaxed: true\n          }, groups.filter(function (group) {\n            return group.type === 'group';\n          }).map(function (group) {\n            return __jsx(List.Item, {\n              key: \"private_group_\".concat(group.id)\n            }, __jsx(List.Icon, {\n              name: \"lock\"\n            }), __jsx(List.Content, null, __jsx(List.Header, {\n              as: \"a\"\n            }, group.name)));\n          })))\n        }\n      }]\n    }), __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14\n      }\n    }, __jsx(CreateGroupModal, null))),\n    right: __jsx(Queue, null)\n  }, __jsx(Button.Group, null, __jsx(Button, {\n    icon: 'headphones',\n    content: \"Join Meeting\",\n    primary: true\n  })));\n}\n\n_s(ClassPage, \"qswLdlpiRiAr5OGrkACLXepyxx0=\", false, function () {\n  return [useRouter];\n});\n\n_c = ClassPage;\nexport default _c2 = AuthRequired(ClassPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ClassPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/pages/classes/[classId].js"],"names":["React","useEffect","useState","useRouter","Layout","Button","Accordion","List","AuthRequired","Queue","api","CreateGroupModal","ClassPage","router","groups","setGroups","classId","query","getGroups","then","console","error","height","marginBottom","key","title","content","paddingLeft","filter","group","type","map","id","name","position","width","bottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport Layout from '../../components/layout'\r\nimport { Button, Accordion, List } from 'semantic-ui-react'\r\nimport { AuthRequired } from '../../components/authProvider'\r\nimport Queue from '../../components/queue/queue'\r\nimport * as api from '../../util/mercuryService'\r\nimport CreateGroupModal from '../../components/createGroupModal'\r\n\r\nfunction ClassPage() {\r\n  const router = useRouter()\r\n  const [groups, setGroups] = useState([])\r\n  const { classId } = router.query\r\n\r\n  useEffect(() => {\r\n    if (!classId) return\r\n\r\n    api\r\n      .getGroups(classId)\r\n      .then((groups) => setGroups(groups))\r\n      .catch(console.error)\r\n  }, [classId])\r\n\r\n  return (\r\n    <Layout\r\n      left={\r\n        <div style={{ height: '100%' }}>\r\n          <Button.Group size=\"huge\" style={{ marginBottom: 20 }} fluid>\r\n            <Button icon=\"angle left\" content=\"CS-101\" />\r\n            <Button icon=\"setting\" />\r\n          </Button.Group>\r\n          <Accordion\r\n            fluid\r\n            exclusive={false}\r\n            defaultActiveIndex={[0, 1]}\r\n            panels={[\r\n              {\r\n                key: 'discussions',\r\n                title: 'Discussions',\r\n                content: {\r\n                  content: (\r\n                    <div style={{ paddingLeft: 20 }}>\r\n                      <List relaxed>\r\n                        {groups\r\n                          .filter((group) => group.type === 'discussion')\r\n                          .map((group) => (\r\n                            <List.Item key={`discussion_${group.id}`}>\r\n                              <List.Icon name=\"sound\" />\r\n                              <List.Content>\r\n                                <List.Header as=\"a\">{group.name}</List.Header>\r\n                              </List.Content>\r\n                            </List.Item>\r\n                          ))}\r\n                      </List>\r\n                    </div>\r\n                  ),\r\n                },\r\n              },\r\n              {\r\n                key: 'private-groups',\r\n                title: 'Private Groups',\r\n                content: {\r\n                  content: (\r\n                    <div style={{ paddingLeft: 20 }}>\r\n                      <List relaxed>\r\n                        {groups\r\n                          .filter((group) => group.type === 'group')\r\n                          .map((group) => (\r\n                            <List.Item key={`private_group_${group.id}`}>\r\n                              <List.Icon name=\"lock\" />\r\n                              <List.Content>\r\n                                <List.Header as=\"a\">{group.name}</List.Header>\r\n                              </List.Content>\r\n                            </List.Item>\r\n                          ))}\r\n                      </List>\r\n                    </div>\r\n                  ),\r\n                },\r\n              },\r\n            ]}\r\n          />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              width: 'calc(100% - 38px)',\r\n              bottom: 14,\r\n            }}\r\n          >\r\n            <CreateGroupModal />\r\n          </div>\r\n        </div>\r\n      }\r\n      right={<Queue />}\r\n    >\r\n      <Button.Group>\r\n        <Button icon={'headphones'} content=\"Join Meeting\" primary />\r\n      </Button.Group>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default AuthRequired(ClassPage)\r\n"]},"metadata":{},"sourceType":"module"}