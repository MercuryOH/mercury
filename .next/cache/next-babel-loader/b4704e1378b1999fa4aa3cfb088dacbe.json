{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, useState } from 'react';\nimport { Label, Button } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport QueueWebSocket from './queuews';\nimport * as api from '../../util/mercuryService';\nimport { AuthRequired } from '../../components/authProvider';\nconst QueueDiv = styled.div.withConfig({\n  displayName: \"queue__QueueDiv\",\n  componentId: \"sc-1vy3urw-0\"\n})([\"grid-gap:2vh;\"]);\nconst QueueLabel = styled(Label).withConfig({\n  displayName: \"queue__QueueLabel\",\n  componentId: \"sc-1vy3urw-1\"\n})([\"text-align:center;\"]);\n\nclass Queue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayStudentsStyle: {\n        display: 'grid'\n      },\n      iconToDisplay: 'caret square down outline',\n      connection: null,\n      studentsInQueue: [],\n      me: {},\n      classData: [],\n      inQueue: false\n    };\n    this.getRoleForClass.bind(this);\n  }\n\n  async componentDidMount() {\n    this.courseId = Number(window.location.href.split('/')[4]);\n    const connection = new QueueWebSocket(this);\n    let me = {};\n    let classData = {};\n    api.getMe().then(meData => {\n      me = meData;\n    }).then(() => api.getClasses()).then(classPayload => {\n      classData = classPayload;\n    }).then(() => this.setState({\n      me,\n      classData,\n      connection\n    }));\n  }\n\n  isStudentDisplayed() {\n    let {\n      display\n    } = this.state.displayStudentsStyle;\n    return display === 'grid';\n  }\n\n  alterStudentDisplay() {\n    let displayStudentsStyle = this.isStudentDisplayed() ? {\n      display: 'none'\n    } : {\n      display: 'grid'\n    };\n    let iconToDisplay = this.isStudentDisplayed() ? 'caret square up outline' : 'caret square down outline';\n    this.setState({\n      displayStudentsStyle,\n      iconToDisplay\n    });\n  }\n\n  addMeToQueue() {\n    const {\n      firstName,\n      lastName\n    } = this.state.me;\n    const fullName = `${firstName} ${lastName}`;\n\n    if (this.state.studentsInQueue.indexOf(fullName) >= 0) {\n      return;\n    }\n\n    this.state.connection.addMeToQueue();\n  }\n\n  removeMeFromQueue() {\n    const {\n      firstName,\n      lastName\n    } = this.state.me;\n    const fullName = `${firstName} ${lastName}`;\n\n    if (this.state.studentsInQueue.indexOf(fullName) < 0) {\n      return;\n    }\n\n    this.state.connection.removeMeFromQueue();\n  }\n\n  getRoleForClass() {\n    const {\n      classData\n    } = this.state;\n    let userRole = null;\n    classData.forEach(row => {\n      let {\n        id,\n        role\n      } = row;\n\n      if (this.courseId === Number(id)) {\n        userRole = role;\n      }\n    });\n    return userRole;\n  }\n\n  render() {\n    const {\n      connection\n    } = this.state;\n\n    if (!connection) {\n      return null;\n    }\n\n    const userRole = this.getRoleForClass();\n\n    let buttonToDisplay = __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14,\n        display: 'inline-flex'\n      }\n    }, __jsx(Button, {\n      onClick: this.addMeToQueue.bind(this),\n      primary: true\n    }, \"Join Queue\"), __jsx(Button, {\n      onClick: this.removeMeFromQueue.bind(this),\n      secondary: true\n    }, \"Leave Queue\"));\n\n    if (userRole !== 'Student') {\n      buttonToDisplay = __jsx(\"div\", {\n        style: {\n          position: 'absolute',\n          width: 'calc(100% - 38px)',\n          bottom: 14,\n          display: 'inline-flex'\n        }\n      }, __jsx(Button, {\n        primary: true\n      }, \"Next\"));\n    }\n\n    const queueLabels = this.state.displayStudentsStyle.display == 'none' ? __jsx(React.Fragment, null) : this.state.studentsInQueue.map(student => __jsx(QueueLabel, {\n      vertical: true,\n      style: {\n        fontSize: '1.2vw',\n        textAlign: 'center',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px',\n        marginLeft: '.8%',\n        marginRight: '1%'\n      },\n      key: student\n    }, student));\n    return __jsx(QueueDiv, null, __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 12,\n        width: '100%'\n      },\n      fluid: true\n    }, __jsx(Button, {\n      compact: true,\n      content: \"Queue\",\n      icon: this.state.iconToDisplay,\n      labelPosition: \"right\",\n      onClick: this.alterStudentDisplay.bind(this),\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'center',\n        width: '75%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      }\n    })), __jsx(QueueDiv, {\n      style: {\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px',\n        marginRight: '2.5%'\n      }\n    }, queueLabels), buttonToDisplay);\n  }\n\n}\n\nexport default AuthRequired(Queue);","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/queue/queue.js"],"names":["React","Component","useState","Label","Button","styled","QueueWebSocket","api","AuthRequired","QueueDiv","div","QueueLabel","Queue","constructor","props","state","displayStudentsStyle","display","iconToDisplay","connection","studentsInQueue","me","classData","inQueue","getRoleForClass","bind","componentDidMount","courseId","Number","window","location","href","split","getMe","then","meData","getClasses","classPayload","setState","isStudentDisplayed","alterStudentDisplay","addMeToQueue","firstName","lastName","fullName","indexOf","removeMeFromQueue","userRole","forEach","row","id","role","render","buttonToDisplay","position","width","bottom","queueLabels","map","student","fontSize","textAlign","marginBottom","minWidth","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Label, Button } from 'semantic-ui-react'\nimport styled from 'styled-components'\nimport QueueWebSocket from './queuews'\nimport * as api from '../../util/mercuryService'\nimport { AuthRequired } from '../../components/authProvider'\n\nconst QueueDiv = styled.div`\n  grid-gap: 2vh;\n`\n\nconst QueueLabel = styled(Label)`\n  text-align: center;\n`\n\nclass Queue extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      displayStudentsStyle: { display: 'grid' },\n      iconToDisplay: 'caret square down outline',\n      connection: null,\n      studentsInQueue: [],\n      me: {},\n      classData: [],\n      inQueue: false,\n    }\n\n    this.getRoleForClass.bind(this)\n  }\n\n  async componentDidMount() {\n    this.courseId = Number(window.location.href.split('/')[4])\n    const connection = new QueueWebSocket(this)\n\n    let me = {}\n    let classData = {}\n\n    api\n      .getMe()\n      .then((meData) => {\n        me = meData\n      })\n      .then(() => api.getClasses())\n      .then((classPayload) => {\n        classData = classPayload\n      })\n      .then(() => this.setState({ me, classData, connection }))\n  }\n\n  isStudentDisplayed() {\n    let { display } = this.state.displayStudentsStyle\n    return display === 'grid'\n  }\n\n  alterStudentDisplay() {\n    let displayStudentsStyle = this.isStudentDisplayed()\n      ? { display: 'none' }\n      : { display: 'grid' }\n\n    let iconToDisplay = this.isStudentDisplayed()\n      ? 'caret square up outline'\n      : 'caret square down outline'\n\n    this.setState({ displayStudentsStyle, iconToDisplay })\n  }\n\n  addMeToQueue() {\n    const { firstName, lastName } = this.state.me\n    const fullName = `${firstName} ${lastName}`\n\n    if (this.state.studentsInQueue.indexOf(fullName) >= 0) {\n      return\n    }\n\n    this.state.connection.addMeToQueue()\n  }\n\n  removeMeFromQueue() {\n    const { firstName, lastName } = this.state.me\n    const fullName = `${firstName} ${lastName}`\n\n    if (this.state.studentsInQueue.indexOf(fullName) < 0) {\n      return\n    }\n\n    this.state.connection.removeMeFromQueue()\n  }\n\n  getRoleForClass() {\n    const { classData } = this.state\n    let userRole = null\n\n    classData.forEach((row) => {\n      let { id, role } = row\n      if (this.courseId === Number(id)) {\n        userRole = role\n      }\n    })\n\n    return userRole\n  }\n\n  render() {\n    const { connection } = this.state\n\n    if (!connection) {\n      return null\n    }\n\n    const userRole = this.getRoleForClass()\n\n    let buttonToDisplay = (\n      <div\n        style={{\n          position: 'absolute',\n          width: 'calc(100% - 38px)',\n          bottom: 14,\n          display: 'inline-flex',\n        }}\n      >\n        <Button onClick={this.addMeToQueue.bind(this)} primary>\n          Join Queue\n        </Button>\n        <Button onClick={this.removeMeFromQueue.bind(this)} secondary>\n          Leave Queue\n        </Button>\n      </div>\n    )\n\n    if (userRole !== 'Student') {\n      buttonToDisplay = (\n        <div\n          style={{\n            position: 'absolute',\n            width: 'calc(100% - 38px)',\n            bottom: 14,\n            display: 'inline-flex',\n          }}\n        >\n          <Button primary>Next</Button>\n        </div>\n      )\n    }\n\n    const queueLabels =\n    this.state.displayStudentsStyle.display == 'none' ? (\n      <></>\n    ) : (\n      this.state.studentsInQueue.map((student) => (\n        <QueueLabel\n          vertical\n          style={{\n            fontSize: '1.2vw',\n            textAlign: 'center',\n            width: '100%',\n            marginBottom: '2%',\n            minWidth: '41px',\n            marginLeft: '.8%',\n            marginRight: '1%',\n          }}\n          key={student}\n        >\n          {student}\n        </QueueLabel>\n      ))\n    )\n\n    return (\n      <QueueDiv>\n        <Button.Group\n          size=\"huge\"\n          style={{ marginBottom: 12, width: '100%' }}\n          fluid\n        >\n          <Button\n            compact\n            content=\"Queue\"\n            icon={this.state.iconToDisplay}\n            labelPosition=\"right\"\n            onClick={this.alterStudentDisplay.bind(this)}\n            style={{\n              fontSize: '1.5vw',\n              textAlign: 'center',\n              width: '75%',\n              marginBottom: '2%',\n              minWidth: '41px',\n            }}\n          />\n        </Button.Group>\n\n        <QueueDiv\n          style={{ width: '100%', marginBottom: '2%', minWidth: '41px', marginRight: '2.5%' }}\n        >\n          {queueLabels}\n        </QueueDiv>\n\n        {buttonToDisplay}\n      </QueueDiv>\n    )\n  }\n}\n\nexport default AuthRequired(Queue)\n"]},"metadata":{},"sourceType":"module"}