{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Label, Button } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport QueueWebSocket from './queuews';\nconst QueueDiv = styled.div.withConfig({\n  displayName: \"queue__QueueDiv\",\n  componentId: \"sc-1vy3urw-0\"\n})([\"grid-gap:2vh;\"]);\nconst QueueLabel = styled(Label).withConfig({\n  displayName: \"queue__QueueLabel\",\n  componentId: \"sc-1vy3urw-1\"\n})([\"text-align:center;\"]);\nexport default class Queue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayStudentsStyle: {\n        display: 'grid'\n      },\n      iconToDisplay: 'caret square down outline',\n      connection: null,\n      studentsInQueue: []\n    };\n  }\n\n  componentDidMount() {\n    let url = window.location.href;\n    this.courseId = Number(url.split('/')[4]);\n    const connection = new QueueWebSocket(this);\n    this.setState({\n      connection\n    });\n  }\n\n  isStudentDisplayed() {\n    let {\n      display\n    } = this.state.displayStudentsStyle;\n    return display === 'grid';\n  }\n\n  alterStudentDisplay() {\n    let displayStudentsStyle = this.isStudentDisplayed() ? {\n      display: 'none'\n    } : {\n      display: 'grid'\n    };\n    let iconToDisplay = this.isStudentDisplayed() ? 'caret square up outline' : 'caret square down outline';\n    this.setState({\n      displayStudentsStyle,\n      iconToDisplay\n    });\n  }\n\n  render() {\n    const queueLabels = this.state.studentsInQueue.map(student => __jsx(QueueLabel, {\n      key: student\n    }, student));\n    return __jsx(QueueDiv, {\n      style: {\n        display: 'grid'\n      }\n    }, __jsx(Button.Group, {\n      size: \"huge\",\n      fluid: true\n    }, __jsx(Button, {\n      icon: 'angle left',\n      content: \"Queue\"\n    }), __jsx(Button, {\n      icon: this.state.iconToDisplay,\n      onClick: this.alterStudentDisplay.bind(this)\n    })), __jsx(\"br\", null), __jsx(QueueDiv, {\n      style: this.state.displayStudentsStyle\n    }, queueLabels));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/queue/queue.js"],"names":["React","Component","Label","Button","styled","QueueWebSocket","QueueDiv","div","QueueLabel","Queue","constructor","props","state","displayStudentsStyle","display","iconToDisplay","connection","studentsInQueue","componentDidMount","url","window","location","href","courseId","Number","split","setState","isStudentDisplayed","alterStudentDisplay","render","queueLabels","map","student","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,cAAP,MAA2B,WAA3B;AAEA,MAAMC,QAAQ,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,qBAAd;AAIA,MAAMC,UAAU,GAAGJ,MAAM,CAACF,KAAD,CAAT;AAAA;AAAA;AAAA,0BAAhB;AAIA,eAAe,MAAMO,KAAN,SAAoBR,SAApB,CAA8B;AAC3CS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,oBAAoB,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADX;AAEXC,MAAAA,aAAa,EAAE,2BAFJ;AAGXC,MAAAA,UAAU,EAAE,IAHD;AAIXC,MAAAA,eAAe,EAAE;AAJN,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA1B;AACA,SAAKC,QAAL,GAAgBC,MAAM,CAACL,GAAG,CAACM,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAD,CAAtB;AACA,UAAMT,UAAU,GAAG,IAAIX,cAAJ,CAAmB,IAAnB,CAAnB;AACA,SAAKqB,QAAL,CAAc;AAAEV,MAAAA;AAAF,KAAd;AACD;;AAEDW,EAAAA,kBAAkB,GAAG;AACnB,QAAI;AAAEb,MAAAA;AAAF,QAAc,KAAKF,KAAL,CAAWC,oBAA7B;AACA,WAAOC,OAAO,KAAK,MAAnB;AACD;;AAEDc,EAAAA,mBAAmB,GAAG;AACpB,QAAIf,oBAAoB,GAAG,KAAKc,kBAAL,KACvB;AAAEb,MAAAA,OAAO,EAAE;AAAX,KADuB,GAEvB;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAFJ;AAIA,QAAIC,aAAa,GAAG,KAAKY,kBAAL,KAChB,yBADgB,GAEhB,2BAFJ;AAIA,SAAKD,QAAL,CAAc;AAAEb,MAAAA,oBAAF;AAAwBE,MAAAA;AAAxB,KAAd;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,KAAKlB,KAAL,CAAWK,eAAX,CAA2Bc,GAA3B,CAAgCC,OAAD,IACjD,MAAC,UAAD;AAAY,MAAA,GAAG,EAAEA;AAAjB,OAA2BA,OAA3B,CADkB,CAApB;AAIA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAElB,QAAAA,OAAO,EAAE;AAAX;AAAjB,OACE,MAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,KAAK;AAA/B,OACE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,YAAd;AAA4B,MAAA,OAAO,EAAC;AAApC,MADF,EAEE,MAAC,MAAD;AACE,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWG,aADnB;AAEE,MAAA,OAAO,EAAE,KAAKa,mBAAL,CAAyBK,IAAzB,CAA8B,IAA9B;AAFX,MAFF,CADF,EASE,iBATF,EAUE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC;AAA5B,OACGiB,WADH,CAVF,CADF;AAgBD;;AAxD0C","sourcesContent":["import React, { Component } from 'react'\r\nimport { Label, Button } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\nimport QueueWebSocket from './queuews'\r\n\r\nconst QueueDiv = styled.div`\r\n  grid-gap: 2vh;\r\n`\r\n\r\nconst QueueLabel = styled(Label)`\r\n  text-align: center;\r\n`\r\n\r\nexport default class Queue extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      displayStudentsStyle: { display: 'grid' },\r\n      iconToDisplay: 'caret square down outline',\r\n      connection: null,\r\n      studentsInQueue: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let url = window.location.href\r\n    this.courseId = Number(url.split('/')[4])\r\n    const connection = new QueueWebSocket(this)\r\n    this.setState({ connection })\r\n  }\r\n\r\n  isStudentDisplayed() {\r\n    let { display } = this.state.displayStudentsStyle\r\n    return display === 'grid'\r\n  }\r\n\r\n  alterStudentDisplay() {\r\n    let displayStudentsStyle = this.isStudentDisplayed()\r\n      ? { display: 'none' }\r\n      : { display: 'grid' }\r\n\r\n    let iconToDisplay = this.isStudentDisplayed()\r\n      ? 'caret square up outline'\r\n      : 'caret square down outline'\r\n\r\n    this.setState({ displayStudentsStyle, iconToDisplay })\r\n  }\r\n\r\n  render() {\r\n    const queueLabels = this.state.studentsInQueue.map((student) => (\r\n      <QueueLabel key={student}>{student}</QueueLabel>\r\n    ))\r\n\r\n    return (\r\n      <QueueDiv style={{ display: 'grid' }}>\r\n        <Button.Group size=\"huge\" fluid>\r\n          <Button icon={'angle left'} content=\"Queue\" />\r\n          <Button\r\n            icon={this.state.iconToDisplay}\r\n            onClick={this.alterStudentDisplay.bind(this)}\r\n          />\r\n        </Button.Group>\r\n\r\n        <br></br>\r\n        <QueueDiv style={this.state.displayStudentsStyle}>\r\n          {queueLabels}\r\n        </QueueDiv>\r\n      </QueueDiv>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}