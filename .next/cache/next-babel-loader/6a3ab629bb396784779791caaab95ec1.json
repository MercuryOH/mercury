{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport YourTurnModal from './yourTurnModal';\nimport StudentWebSocketController from './studentWebSocket';\nimport { Label, Button } from 'semantic-ui-react';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nvar QueueDiv = styled.div.withConfig({\n  displayName: \"studentQueueView__QueueDiv\",\n  componentId: \"sc-1qcvoz5-0\"\n})([\"grid-gap:2vh;\"]);\n_c = QueueDiv;\nvar QueueLabel = styled(Label).withConfig({\n  displayName: \"studentQueueView__QueueLabel\",\n  componentId: \"sc-1qcvoz5-1\"\n})([\"text-align:center;\"]);\n/**\r\n * This is how the student views the Queue\r\n */\n\n_c2 = QueueLabel;\n\nvar StudentQueueView = /*#__PURE__*/function (_Component) {\n  _inherits(StudentQueueView, _Component);\n\n  var _super = _createSuper(StudentQueueView);\n\n  function StudentQueueView(props) {\n    var _this;\n\n    _classCallCheck(this, StudentQueueView);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      displayStudentsStyle: {\n        display: 'grid'\n      },\n      iconToDisplay: 'caret square down outline',\n      queueWebSocketController: new StudentWebSocketController(_assertThisInitialized(_this)),\n      studentsInQueue: [],\n      me: _this.props.me,\n      classData: _this.props.classData,\n      inQueue: false,\n      isYourTurn: false,\n      nextStudentName: '',\n      TAName: '',\n      isReadyToRender: false\n    };\n    return _this;\n  }\n\n  _createClass(StudentQueueView, [{\n    key: \"createTimeoutNotification\",\n    value: function createTimeoutNotification() {\n      NotificationManager.info('Your Invitation Has Expired');\n    }\n  }, {\n    key: \"isStudentDisplayed\",\n    value: function isStudentDisplayed() {\n      var display = this.state.displayStudentsStyle.display;\n      return display === 'grid';\n    }\n  }, {\n    key: \"alterStudentDisplay\",\n    value: function alterStudentDisplay() {\n      var displayStudentsStyle = this.isStudentDisplayed() ? {\n        display: 'none'\n      } : {\n        display: 'grid'\n      };\n      var iconToDisplay = this.isStudentDisplayed() ? 'caret square up outline' : 'caret square down outline';\n      this.setState({\n        displayStudentsStyle: displayStudentsStyle,\n        iconToDisplay: iconToDisplay\n      });\n    }\n  }, {\n    key: \"addMeToQueue\",\n    value: function addMeToQueue() {\n      var _this$state$me = this.state.me,\n          firstName = _this$state$me.firstName,\n          lastName = _this$state$me.lastName;\n      var fullName = \"\".concat(firstName, \" \").concat(lastName);\n\n      if (this.state.studentsInQueue.indexOf(fullName) >= 0) {\n        return;\n      }\n\n      this.state.queueWebSocketController.addMeToQueue();\n    }\n  }, {\n    key: \"removeMeFromQueue\",\n    value: function removeMeFromQueue() {\n      var _this$state$me2 = this.state.me,\n          firstName = _this$state$me2.firstName,\n          lastName = _this$state$me2.lastName;\n      var fullName = \"\".concat(firstName, \" \").concat(lastName);\n\n      if (this.state.studentsInQueue.indexOf(fullName) < 0) {\n        return;\n      }\n\n      this.state.queueWebSocketController.removeMeFromQueue();\n    }\n  }, {\n    key: \"getButtonToDisplay\",\n    value: function getButtonToDisplay() {\n      var buttonToDisplay = this.state.inQueue ? __jsx(Button, {\n        onClick: this.removeMeFromQueue.bind(this),\n        style: {\n          width: '100%',\n          fontSize: '1vw'\n        },\n        secondary: true\n      }, \"Leave Queue\") : __jsx(Button, {\n        onClick: this.addMeToQueue.bind(this),\n        style: {\n          width: '100%',\n          fontSize: '1vw'\n        },\n        primary: true\n      }, \"Join Queue\");\n      return __jsx(\"div\", {\n        style: {\n          position: 'absolute',\n          width: 'calc(100% - 38px)',\n          bottom: 14,\n          display: 'inline-flex'\n        }\n      }, buttonToDisplay);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.courseId = Number(window.location.href.split('/')[4]);\n      var queueWebSocketController = this.state.queueWebSocketController;\n      queueWebSocketController.start();\n      this.setState({\n        isReadyToRender: true\n      });\n    }\n  }, {\n    key: \"createQueueLabel\",\n    value: function createQueueLabel(student) {\n      return __jsx(QueueLabel, {\n        style: {\n          fontSize: '1.2vw',\n          textAlign: 'center',\n          width: '95%',\n          marginBottom: '2%',\n          minWidth: '41px',\n          marginLeft: '.8%',\n          marginRight: '1%'\n        },\n        key: student\n      }, student);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isReadyToRender = this.state.isReadyToRender;\n\n      if (!isReadyToRender) {\n        return null;\n      }\n\n      var queueLabels = this.state.displayStudentsStyle.display == 'none' ? [] : this.state.studentsInQueue.map(this.createQueueLabel);\n      return __jsx(QueueDiv, null, __jsx(YourTurnModal, {\n        isYourTurn: this.state.isYourTurn,\n        queueComponent: this,\n        onJoin: this.props.onJoin,\n        group: {}\n      }), __jsx(Button.Group, {\n        size: \"huge\",\n        style: {\n          marginBottom: 12,\n          width: '95%'\n        },\n        fluid: true,\n        vertical: true\n      }, __jsx(Button, {\n        compact: true,\n        content: \"Queue\",\n        icon: this.state.iconToDisplay,\n        labelPosition: \"right\",\n        onClick: this.alterStudentDisplay.bind(this),\n        style: {\n          fontSize: '1.5vw',\n          textAlign: 'center',\n          width: '100%',\n          marginBottom: '2%',\n          minWidth: '41px'\n        }\n      })), __jsx(QueueDiv, {\n        style: {\n          width: '100%',\n          marginBottom: '2%',\n          minWidth: '41px'\n        }\n      }, queueLabels), this.getButtonToDisplay(), __jsx(NotificationContainer, null));\n    }\n  }]);\n\n  return StudentQueueView;\n}(Component);\n\nStudentQueueView.propTypes = {\n  onJoin: PropTypes.func.isRequired\n};\nexport default StudentQueueView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QueueDiv\");\n$RefreshReg$(_c2, \"QueueLabel\");","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/queue/student/studentQueueView.js"],"names":["React","Component","PropTypes","styled","YourTurnModal","StudentWebSocketController","Label","Button","NotificationContainer","NotificationManager","QueueDiv","div","QueueLabel","StudentQueueView","props","state","displayStudentsStyle","display","iconToDisplay","queueWebSocketController","studentsInQueue","me","classData","inQueue","isYourTurn","nextStudentName","TAName","isReadyToRender","info","isStudentDisplayed","setState","firstName","lastName","fullName","indexOf","addMeToQueue","removeMeFromQueue","buttonToDisplay","bind","width","fontSize","position","bottom","courseId","Number","window","location","href","split","start","student","textAlign","marginBottom","minWidth","marginLeft","marginRight","queueLabels","map","createQueueLabel","onJoin","alterStudentDisplay","getButtonToDisplay","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport YourTurnModal from './yourTurnModal'\r\nimport StudentWebSocketController from './studentWebSocket'\r\nimport { Label, Button } from 'semantic-ui-react'\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications'\r\n\r\nconst QueueDiv = styled.div`\r\n  grid-gap: 2vh;\r\n`\r\n\r\nconst QueueLabel = styled(Label)`\r\n  text-align: center;\r\n`\r\n\r\n/**\r\n * This is how the student views the Queue\r\n */\r\n\r\nclass StudentQueueView extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      displayStudentsStyle: { display: 'grid' },\r\n      iconToDisplay: 'caret square down outline',\r\n      queueWebSocketController: new StudentWebSocketController(this),\r\n      studentsInQueue: [],\r\n      me: this.props.me,\r\n      classData: this.props.classData,\r\n      inQueue: false,\r\n      isYourTurn: false,\r\n      nextStudentName: '',\r\n      TAName: '',\r\n      isReadyToRender: false,\r\n    }\r\n  }\r\n\r\n  createTimeoutNotification() {\r\n    NotificationManager.info('Your Invitation Has Expired')\r\n  }\r\n\r\n  isStudentDisplayed() {\r\n    let { display } = this.state.displayStudentsStyle\r\n    return display === 'grid'\r\n  }\r\n\r\n  alterStudentDisplay() {\r\n    let displayStudentsStyle = this.isStudentDisplayed()\r\n      ? { display: 'none' }\r\n      : { display: 'grid' }\r\n\r\n    let iconToDisplay = this.isStudentDisplayed()\r\n      ? 'caret square up outline'\r\n      : 'caret square down outline'\r\n\r\n    this.setState({ displayStudentsStyle, iconToDisplay })\r\n  }\r\n\r\n  addMeToQueue() {\r\n    const { firstName, lastName } = this.state.me\r\n    const fullName = `${firstName} ${lastName}`\r\n\r\n    if (this.state.studentsInQueue.indexOf(fullName) >= 0) {\r\n      return\r\n    }\r\n\r\n    this.state.queueWebSocketController.addMeToQueue()\r\n  }\r\n\r\n  removeMeFromQueue() {\r\n    const { firstName, lastName } = this.state.me\r\n    const fullName = `${firstName} ${lastName}`\r\n\r\n    if (this.state.studentsInQueue.indexOf(fullName) < 0) {\r\n      return\r\n    }\r\n\r\n    this.state.queueWebSocketController.removeMeFromQueue()\r\n  }\r\n\r\n  getButtonToDisplay() {\r\n    const buttonToDisplay = this.state.inQueue ? (\r\n      <Button\r\n        onClick={this.removeMeFromQueue.bind(this)}\r\n        style={{ width: '100%', fontSize: '1vw' }}\r\n        secondary\r\n      >\r\n        Leave Queue\r\n      </Button>\r\n    ) : (\r\n      <Button\r\n        onClick={this.addMeToQueue.bind(this)}\r\n        style={{ width: '100%', fontSize: '1vw' }}\r\n        primary\r\n      >\r\n        Join Queue\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          width: 'calc(100% - 38px)',\r\n          bottom: 14,\r\n          display: 'inline-flex',\r\n        }}\r\n      >\r\n        {buttonToDisplay}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.courseId = Number(window.location.href.split('/')[4])\r\n    const { queueWebSocketController } = this.state\r\n    queueWebSocketController.start()\r\n    this.setState({ isReadyToRender: true })\r\n  }\r\n\r\n  createQueueLabel(student) {\r\n    return (\r\n      <QueueLabel\r\n        style={{\r\n          fontSize: '1.2vw',\r\n          textAlign: 'center',\r\n          width: '95%',\r\n          marginBottom: '2%',\r\n          minWidth: '41px',\r\n          marginLeft: '.8%',\r\n          marginRight: '1%',\r\n        }}\r\n        key={student}\r\n      >\r\n        {student}\r\n      </QueueLabel>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { isReadyToRender } = this.state\r\n\r\n    if (!isReadyToRender) {\r\n      return null\r\n    }\r\n\r\n    const queueLabels =\r\n      this.state.displayStudentsStyle.display == 'none'\r\n        ? []\r\n        : this.state.studentsInQueue.map(this.createQueueLabel)\r\n\r\n    return (\r\n      <QueueDiv>\r\n        <YourTurnModal\r\n          isYourTurn={this.state.isYourTurn}\r\n          queueComponent={this}\r\n          onJoin={this.props.onJoin}\r\n          group={{}}\r\n        />\r\n\r\n        <Button.Group\r\n          size=\"huge\"\r\n          style={{ marginBottom: 12, width: '95%' }}\r\n          fluid\r\n          vertical\r\n        >\r\n          <Button\r\n            compact\r\n            content=\"Queue\"\r\n            icon={this.state.iconToDisplay}\r\n            labelPosition=\"right\"\r\n            onClick={this.alterStudentDisplay.bind(this)}\r\n            style={{\r\n              fontSize: '1.5vw',\r\n              textAlign: 'center',\r\n              width: '100%',\r\n              marginBottom: '2%',\r\n              minWidth: '41px',\r\n            }}\r\n          />\r\n        </Button.Group>\r\n\r\n        <QueueDiv\r\n          style={{ width: '100%', marginBottom: '2%', minWidth: '41px' }}\r\n        >\r\n          {queueLabels}\r\n        </QueueDiv>\r\n        {this.getButtonToDisplay()}\r\n\r\n        <NotificationContainer />\r\n      </QueueDiv>\r\n    )\r\n  }\r\n}\r\n\r\nStudentQueueView.propTypes = {\r\n  onJoin: PropTypes.func.isRequired\r\n}\r\n\r\nexport default StudentQueueView\r\n"]},"metadata":{},"sourceType":"module"}