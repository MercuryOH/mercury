{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react'; //import ScreenPublisher from './screenPublisher'\n\nimport { OTPublisher } from 'opentok-react';\nimport { Button } from 'semantic-ui-react';\nimport { EventEmitter } from './util/EventEmitter';\nexport default class Publisher extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onError\", err => {\n      this.setState({\n        error: `Failed to publish: ${err.message}`\n      });\n    });\n\n    this.state = {\n      error: null,\n      audio: true,\n      video: true,\n      videoSource: 'camera'\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", null, this.state.error ? __jsx(\"div\", null, this.state.error) : null, __jsx(OTPublisher, {\n      properties: {\n        width: '100%',\n        height: '50vh'\n      },\n      onError: this.onError\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/publisher.js"],"names":["React","Component","OTPublisher","Button","EventEmitter","Publisher","constructor","props","err","setState","error","message","state","audio","video","videoSource","render","width","height","onError"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,eAAe,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAC/CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,qCAWRC,GAAD,IAAS;AACjB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAG,sBAAqBF,GAAG,CAACG,OAAQ;AAA3C,OAAd;AACD,KAbkB;;AAGjB,SAAKC,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,IADI;AAEXG,MAAAA,KAAK,EAAE,IAFI;AAGXC,MAAAA,KAAK,EAAE,IAHI;AAIXC,MAAAA,WAAW,EAAE;AAJF,KAAb;AAMD;;AAMDC,EAAAA,MAAM,GAAG;AACP,WACE,mBACG,KAAKJ,KAAL,CAAWF,KAAX,GAAmB,mBAAM,KAAKE,KAAL,CAAWF,KAAjB,CAAnB,GAAmD,IADtD,EAEE,MAAC,WAAD;AACE,MAAA,UAAU,EAAE;AACVO,QAAAA,KAAK,EAAE,MADG;AAEVC,QAAAA,MAAM,EAAE;AAFE,OADd;AAKE,MAAA,OAAO,EAAE,KAAKC;AALhB,MAFF,CADF;AAYD;;AA7B8C","sourcesContent":["import React, { Component } from 'react'\n//import ScreenPublisher from './screenPublisher'\nimport { OTPublisher } from 'opentok-react'\nimport { Button } from 'semantic-ui-react'\nimport { EventEmitter } from './util/EventEmitter'\n\nexport default class Publisher extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      audio: true,\n      video: true,\n      videoSource: 'camera'\n    };\n  }\n\n  onError = (err) => {\n    this.setState({ error: `Failed to publish: ${err.message}` });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.error ? <div>{this.state.error}</div> : null}\n        <OTPublisher\n          properties={{\n            width: '100%',\n            height: '50vh',\n          }}\n          onError={this.onError}\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}