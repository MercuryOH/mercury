{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport Layout from '../../components/layout';\nimport { Button, Accordion, List, Icon } from 'semantic-ui-react';\nimport { AuthRequired } from '../../components/authProvider';\nimport Queue from '../../components/queue/queue';\nimport * as api from '../../util/mercuryService';\nimport CreateGroupModal from '../../components/createGroupModal';\nimport StudentInviteModal from '../../components/invite/studentInviteModal';\nimport GroupLeaderModal from '../../components/groupLeaderModal';\nimport { EventEmitter } from '../../components/util/EventEmitter';\nimport FeedbackModal from '../../components/feedbackModal';\nimport StudentWebSocketClient from '../../util/studentWebSocket';\nimport TAWebSocketClient from '../../util/taWebSocket';\nimport ReceiveInviteModal from '../../components/invite/receiveInviteModal';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport GroupJoinRequestModal from '../../components/invite/groupJoinRequestModal';\nimport WaitingForRequestApprovalModal from '../../components/invite/WaitingForRequestApprovalModal';\n\nconst {\n  groupManager\n} = require('../../websocket/util/groupmanager');\n\nconst ScreenContainer = dynamic(() => import('../../components/screenContainer'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/screenContainer')],\n    modules: ['../../components/screenContainer']\n  }\n});\nconst CreateDiscussionModal = dynamic(() => import('../../components/createDiscussionModal'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/createDiscussionModal')],\n    modules: ['../../components/createDiscussionModal']\n  }\n});\n\nclass ClassPage extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"leaveGroupNormal\", () => {\n      this.setState({\n        vonageCred: null,\n        currentGroup: {\n          id: '',\n          name: ''\n        },\n        withTa: false\n      });\n      EventEmitter.publish('currentGroupChange', {\n        id: '',\n        name: ''\n      });\n      EventEmitter.publish('callOver', this.classId);\n    });\n\n    _defineProperty(this, \"leaveGroup\", () => {\n      if (this.state.currentGroup.UserId === this.user.id && this.state.currentGroup.type === 'group') {\n        this.setState({\n          vonageCred: null,\n          currentGroup: {\n            id: '',\n            name: ''\n          },\n          withTa: false\n        });\n        EventEmitter.publish('currentGroupChange', {\n          id: '',\n          name: ''\n        });\n        EventEmitter.publish('callOver', this.classId);\n      } else {\n        this.setState({\n          vonageCred: null,\n          currentGroup: {\n            id: '',\n            name: ''\n          },\n          withTa: false\n        });\n        EventEmitter.publish('currentGroupChange', {\n          id: '',\n          name: ''\n        });\n        EventEmitter.publish('callOver', this.classId);\n      }\n    });\n\n    _defineProperty(this, \"fetchCurrentClass\", () => {\n      api.getClass(this.classId).then(c => {\n        const userRole = c.users.find(u => u.id === this.user.id);\n        if (!userRole) this.props.router.push('/calendar');\n        this.setState({\n          currentClass: _objectSpread(_objectSpread({}, c), {}, {\n            role: userRole.role\n          })\n        });\n      }).catch(console.error);\n    });\n\n    _defineProperty(this, \"handleBack\", async () => {\n      await this.props.router.push('/calendar');\n    });\n\n    _defineProperty(this, \"handleSelectGroup\", async group => {\n      const {\n        role\n      } = this.state.currentClass;\n\n      if (group.type === 'office' || group.type === 'discussion' || role === 'Professor') {\n        // you are popped off the waiting queue or you are a TA or you are joining a public discussion\n        this.joinGroup(group);\n        return;\n      }\n      /**\n       * First, check if you are the leader of the group\n       */\n\n\n      const currGroup = await api.getGroupByID(this.classId, group.id);\n      const {\n        UserId\n      } = currGroup;\n      const {\n        id\n      } = this.user;\n\n      if (UserId === id) {\n        // you are the leader of the group, no need for authentication\n        this.joinGroup(group);\n      } else {\n        /**\n         * Ping group leader to let you into the group\n         */\n        EventEmitter.publish('activateWaitingForRequestApprovalModal', group);\n        EventEmitter.publish('requestJoinGroup', {\n          userId: id,\n          group: group\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleDeleteGroup\", async group => {\n      api.deleteGroup(this.classId, group.id).then(() => this.fetchCurrentClass());\n    });\n\n    _defineProperty(this, \"handleCreateGroup\", async group => {\n      const groupData = await api.postGroup(this.classId, group.name, group.type, this.user.id);\n      this.fetchCurrentClass();\n      EventEmitter.publish('newGroupCreated', this.classId);\n      await this.handleSelectGroup(groupData);\n    });\n\n    this.state = {\n      withTa: false,\n      clicked: 'none',\n      currentGroup: {\n        id: '',\n        name: ''\n      },\n      currentClass: {\n        id: '',\n        name: '',\n        groups: [],\n        users: [],\n        role: 'Student'\n      },\n      vonageCred: null,\n      isMounted: false\n    };\n    this.defineEventEmitterCallbacks();\n  }\n\n  joinGroup(group) {\n    if (this.state.currentGroup.UserId === this.user.id && this.state.currentGroup.type === 'group') {\n      console.log('1');\n      EventEmitter.publish('leaderNeedsChange', group);\n      EventEmitter.publish('openGroupLeaderModal', true);\n      api.postGroupToken(this.classId, group.id).then(({\n        token\n      }) => {\n        if (this.state.currentGroup.id != '') {\n          //the user is currently in a call, leave the call first\n          this.leaveGroupNormal();\n        }\n\n        this.setState({\n          vonageCred: {\n            sessionId: group.sessionId,\n            token\n          }\n        });\n        this.setState({\n          currentGroup: group\n        });\n        EventEmitter.publish('currentGroupChange', group);\n      }).catch(console.error);\n    } else {\n      console.log(`${this.state.currentGroup.UserId}`);\n      console.log(`${this.user.id}`);\n      api.postGroupToken(this.classId, group.id).then(({\n        token\n      }) => {\n        if (this.state.currentGroup.id != '') {\n          //the user is currently in a call, leave the call first\n          this.leaveGroupNormal();\n        }\n\n        this.setState({\n          vonageCred: {\n            sessionId: group.sessionId,\n            token\n          },\n          currentGroup: group\n        });\n        EventEmitter.publish('currentGroupChange', group);\n      }).catch(console.error);\n    }\n  }\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('clearLeftSide', () => {\n      this.setState({\n        withTa: true\n      });\n    });\n    EventEmitter.subscribe('joinPrivateGroupOnApproval', group => {\n      EventEmitter.publish('removeWaitingForRequestApprovalModal');\n      this.joinGroup(group);\n    });\n    EventEmitter.subscribe('notifyJoinRequestDeclined', group => {\n      NotificationManager.info(`Your Request To Join ${group.name} Was Declined`);\n      EventEmitter.publish('removeWaitingForRequestApprovalModal');\n    });\n    EventEmitter.subscribe('fetchGroups', () => {\n      this.fetchCurrentClass();\n    });\n  }\n\n  componentDidMount() {\n    const {\n      classId\n    } = this.props.router.query;\n    if (!classId) return;\n    this.classId = Number(classId);\n    api.getMe().then(meData => {\n      this.user = meData;\n    }).then(() => api.getClass(this.classId)).then(c => {\n      const userRole = c.users.find(u => u.id === this.user.id);\n      if (!userRole) this.props.router.push('/calendar');\n      const {\n        role\n      } = userRole;\n      /**\n       * Start the appropriate web socket handler depending on the user role\n       */\n\n      if (role === 'Student') {\n        /**\n         * Start student web socket handler\n         */\n        new StudentWebSocketClient().start({\n          me: this.user,\n          courseId: this.classId\n        });\n      } else {\n        /**\n         * Start TA web socket handler\n         */\n        new TAWebSocketClient().start({\n          me: this.user,\n          courseId: this.classId,\n          onJoin: this.handleSelectGroup\n        });\n      }\n\n      this.setState({\n        currentClass: _objectSpread(_objectSpread({}, c), {}, {\n          role: userRole.role\n        }),\n        isMounted: true\n      });\n      EventEmitter.publish('allOtherStudentsInClass', this.state.currentClass.users.filter(user => user.id !== this.user.id && user.role === 'Student'));\n      EventEmitter.publish('me', this.user);\n    }).catch(console.error);\n  }\n\n  getButtonToDisplay() {\n    return this.state.currentClass.role === 'Student' ? __jsx(CreateGroupModal, {\n      onCreate: this.handleCreateGroup\n    }) : this.state.clicked === 'none' ? __jsx(Button, {\n      color: \"teal\",\n      content: \"Modify Discussions\",\n      fluid: true,\n      style: {\n        fontSize: '1vw'\n      },\n      onClick: () => {\n        this.setState({\n          clicked: 'inline'\n        });\n      }\n    }) : __jsx(React.Fragment, null, __jsx(CreateDiscussionModal, {\n      id: \"createDiscussionModal\",\n      onCreate: this.handleCreateGroup\n    }), __jsx(Button, {\n      color: \"red\",\n      content: \"Done\",\n      fluid: true,\n      style: {\n        fontSize: '1vw',\n        marginTop: '2%'\n      },\n      onClick: () => {\n        this.setState({\n          clicked: 'none'\n        });\n      }\n    }));\n  }\n\n  getDeleteButton(group) {\n    return __jsx(Button, {\n      id: `deletebutton${group.id}`,\n      compact: true,\n      icon: true,\n      size: \"mini\",\n      floated: \"right\",\n      style: {\n        display: `${this.state.clicked}`,\n        fontSize: '.6vw',\n        textAlign: 'center',\n        width: '10%',\n        marginBottom: '2%',\n        minWidth: '10px',\n        backgroundColor: 'transparent'\n      },\n      onClick: this.handleDeleteGroup\n    }, __jsx(Icon, {\n      name: \"delete\",\n      color: \"red\"\n    }));\n  }\n\n  showInviteButton(group) {\n    const plusIcon = __jsx(List.Icon, {\n      name: \"user plus\",\n      onClick: () => {\n        EventEmitter.publish('openInviteModal', true);\n      }\n    });\n\n    const noPlusIcon = __jsx(\"div\", null);\n\n    return this.state.currentGroup.id == group.id && this.state.vonageCred !== null ? plusIcon : noPlusIcon;\n  }\n\n  getListItemStyle(group) {\n    const unClickedGroupsStyle = {\n      fontSize: '.8vw',\n      textAlign: 'left',\n      width: '80%',\n      marginBottom: '2%',\n      minWidth: '41px',\n      display: 'inline-block'\n    };\n    const clickedGroupsStyle = {\n      fontSize: '.8vw',\n      textAlign: 'left',\n      width: '80%',\n      marginBottom: '2%',\n      minWidth: '41px',\n      background: '#e0e1e2',\n      borderRadius: 10,\n      borderWidth: 1,\n      borderColor: '#fff',\n      display: 'inline-block'\n    };\n    return this.state.currentGroup.id == group.id && this.state.vonageCred !== null ? clickedGroupsStyle : unClickedGroupsStyle;\n  }\n\n  showOffice() {\n    return (this.state.currentClass.role !== 'Student' || this.state.currentGroup.type === 'office') && __jsx(\"div\", {\n      style: {\n        paddingLeft: 20\n      }\n    }, __jsx(List, {\n      relaxed: true,\n      selection: true,\n      verticalAlign: \"middle\"\n    }, this.state.currentClass.groups.filter(group => group.type === 'office').map(group => __jsx(List.Item, {\n      key: `office`,\n      onClick: () => {\n        if (this.state.currentGroup.id !== group.id) {\n          this.handleSelectGroup(group);\n        }\n      },\n      style: this.getListItemStyle(group)\n    }, __jsx(List.Icon, {\n      name: \"graduation cap\"\n    }), __jsx(List.Content, null, __jsx(List.Header, {\n      as: \"a\"\n    }, \"TA Office\")), this.showInviteButton(group)))));\n  }\n\n  leftDisplay() {\n    return this.state.withTa === false ? __jsx(\"div\", {\n      style: {\n        height: '100%',\n        marginLeft: '2.5%'\n      }\n    }, __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 12,\n        width: '100%'\n      },\n      fluid: true\n    }, __jsx(Button, {\n      compact: true,\n      icon: \"angle left\",\n      content: this.state.currentClass.name,\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'left',\n        width: '75%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      onClick: this.handleBack\n    })), this.showOffice(), __jsx(Accordion, {\n      fluid: true,\n      exclusive: false,\n      defaultActiveIndex: [0, 1],\n      style: {\n        fontSize: '1vw',\n        textAlign: 'left',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      panels: [{\n        key: 'discussions',\n        title: 'Discussions',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20,\n              height: 200,\n              overflow: 'auto'\n            }\n          }, __jsx(List, {\n            relaxed: true,\n            selection: true\n          }, this.state.currentClass.groups.filter(group => group.type === 'discussion').map(group => __jsx(React.Fragment, null, __jsx(List.Item, {\n            key: `discussion_${group.id}`,\n            onClick: () => {\n              if (this.state.currentGroup.id !== group.id) {\n                this.handleSelectGroup(group);\n              }\n            },\n            style: this.getListItemStyle(group)\n          }, __jsx(List.Icon, {\n            name: \"sound\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name)), this.showInviteButton(group)), this.getDeleteButton(group)))))\n        }\n      }, {\n        key: 'private-groups',\n        title: 'Private Groups',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20,\n              height: 200,\n              overflow: 'auto'\n            }\n          }, __jsx(List, {\n            relaxed: true,\n            selection: true\n          }, this.state.currentClass.groups.filter(group => group.type === 'group').map(group => __jsx(List.Item, {\n            key: `private_group_${group.id}`,\n            onClick: () => {\n              if (this.state.currentGroup.id !== group.id) {\n                this.handleSelectGroup(group);\n              }\n            },\n            style: this.getListItemStyle(group)\n          }, __jsx(List.Icon, {\n            name: \"lock\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name)), this.showInviteButton(group)))))\n        }\n      }]\n    }), __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14\n      }\n    }, this.getButtonToDisplay())) : __jsx(\"div\", null, \" \");\n  }\n\n  render() {\n    if (!this.state.isMounted) {\n      return null;\n    }\n\n    return __jsx(Layout, {\n      left: this.leftDisplay(),\n      right: __jsx(Queue, {\n        onJoin: this.handleSelectGroup\n      })\n    }, this.state.vonageCred && __jsx(ScreenContainer, {\n      style: {\n        width: '100%',\n        maxHeight: '75vh'\n      },\n      sessionId: this.state.vonageCred.sessionId,\n      token: this.state.vonageCred.token,\n      onLeave: this.leaveGroup\n    }), __jsx(StudentInviteModal, null), __jsx(GroupLeaderModal, null), __jsx(FeedbackModal, null), __jsx(ReceiveInviteModal, {\n      onJoin: this.handleSelectGroup\n    }), __jsx(GroupJoinRequestModal, null), __jsx(WaitingForRequestApprovalModal, null), __jsx(NotificationContainer, null));\n  }\n\n}\n\nexport default AuthRequired(withRouter(ClassPage));","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/pages/classes/[classId].js"],"names":["React","Component","withRouter","dynamic","Layout","Button","Accordion","List","Icon","AuthRequired","Queue","api","CreateGroupModal","StudentInviteModal","GroupLeaderModal","EventEmitter","FeedbackModal","StudentWebSocketClient","TAWebSocketClient","ReceiveInviteModal","NotificationContainer","NotificationManager","GroupJoinRequestModal","WaitingForRequestApprovalModal","groupManager","require","ScreenContainer","ssr","CreateDiscussionModal","ClassPage","constructor","props","setState","vonageCred","currentGroup","id","name","withTa","publish","classId","state","UserId","user","type","getClass","then","c","userRole","users","find","u","router","push","currentClass","role","catch","console","error","group","joinGroup","currGroup","getGroupByID","userId","deleteGroup","fetchCurrentClass","groupData","postGroup","handleSelectGroup","clicked","groups","isMounted","defineEventEmitterCallbacks","log","postGroupToken","token","leaveGroupNormal","sessionId","subscribe","info","componentDidMount","query","Number","getMe","meData","start","me","courseId","onJoin","filter","getButtonToDisplay","handleCreateGroup","fontSize","marginTop","getDeleteButton","display","textAlign","width","marginBottom","minWidth","backgroundColor","handleDeleteGroup","showInviteButton","plusIcon","noPlusIcon","getListItemStyle","unClickedGroupsStyle","clickedGroupsStyle","background","borderRadius","borderWidth","borderColor","showOffice","paddingLeft","map","leftDisplay","height","marginLeft","handleBack","key","title","content","overflow","position","bottom","render","maxHeight","leaveGroup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'next/router'\nimport dynamic from 'next/dynamic'\nimport Layout from '../../components/layout'\nimport { Button, Accordion, List, Icon } from 'semantic-ui-react'\nimport { AuthRequired } from '../../components/authProvider'\nimport Queue from '../../components/queue/queue'\nimport * as api from '../../util/mercuryService'\nimport CreateGroupModal from '../../components/createGroupModal'\nimport StudentInviteModal from '../../components/invite/studentInviteModal'\nimport GroupLeaderModal from '../../components/groupLeaderModal'\nimport { EventEmitter } from '../../components/util/EventEmitter'\nimport FeedbackModal from '../../components/feedbackModal'\nimport StudentWebSocketClient from '../../util/studentWebSocket'\nimport TAWebSocketClient from '../../util/taWebSocket'\nimport ReceiveInviteModal from '../../components/invite/receiveInviteModal'\nimport { NotificationContainer, NotificationManager } from 'react-notifications'\nimport GroupJoinRequestModal from '../../components/invite/groupJoinRequestModal'\nimport WaitingForRequestApprovalModal from '../../components/invite/WaitingForRequestApprovalModal'\n\nconst { groupManager } = require('../../websocket/util/groupmanager')\n\nconst ScreenContainer = dynamic(\n  () => import('../../components/screenContainer'),\n  {\n    ssr: false,\n  }\n)\n\nconst CreateDiscussionModal = dynamic(\n  () => import('../../components/createDiscussionModal'),\n  {\n    ssr: false,\n  }\n)\n\nclass ClassPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      withTa: false,\n      clicked: 'none',\n      currentGroup: { id: '', name: '' },\n      currentClass: {\n        id: '',\n        name: '',\n        groups: [],\n        users: [],\n        role: 'Student',\n      },\n      vonageCred: null,\n      isMounted: false,\n    }\n    this.defineEventEmitterCallbacks()\n  }\n\n  joinGroup(group) {\n    if (this.state.currentGroup.UserId === this.user.id && this.state.currentGroup.type === 'group') {\n      console.log('1')\n      EventEmitter.publish('leaderNeedsChange', group)\n      EventEmitter.publish('openGroupLeaderModal', true)\n      api\n        .postGroupToken(this.classId, group.id)\n        .then(({ token }) => {\n          if (this.state.currentGroup.id != '') {\n            //the user is currently in a call, leave the call first\n            this.leaveGroupNormal()\n          }\n          this.setState({ vonageCred: { sessionId: group.sessionId, token } })\n          this.setState({ currentGroup: group })\n          EventEmitter.publish('currentGroupChange', group)\n        })\n        .catch(console.error)\n    }\n    else {\n      console.log(`${this.state.currentGroup.UserId}`)\n      console.log(`${this.user.id}`)\n    api\n      .postGroupToken(this.classId, group.id)\n      .then(({ token }) => {\n        if (this.state.currentGroup.id != '') {\n          //the user is currently in a call, leave the call first\n          this.leaveGroupNormal()\n        }\n        this.setState({\n          vonageCred: { sessionId: group.sessionId, token },\n          currentGroup: group,\n        })\n        EventEmitter.publish('currentGroupChange', group)\n      })\n      .catch(console.error)\n    }\n  }\n\n  leaveGroupNormal = () => {\n    this.setState({\n      vonageCred: null,\n      currentGroup: { id: '', name: '' },\n      withTa: false,\n    })\n    EventEmitter.publish('currentGroupChange', { id: '', name: '' })\n    EventEmitter.publish('callOver', this.classId)\n  }\n\n  leaveGroup = () => {\n    if (this.state.currentGroup.UserId === this.user.id && this.state.currentGroup.type === 'group') {\n      this.setState({\n        vonageCred: null,\n        currentGroup: { id: '', name: '' },\n        withTa: false,\n      })\n      EventEmitter.publish('currentGroupChange', { id: '', name: '' })\n      EventEmitter.publish('callOver', this.classId)\n    }\n    else {\n      this.setState({\n        vonageCred: null,\n        currentGroup: { id: '', name: '' },\n        withTa: false,\n      })\n      EventEmitter.publish('currentGroupChange', { id: '', name: '' })\n      EventEmitter.publish('callOver', this.classId)\n    }\n  }\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('clearLeftSide', () => {\n      this.setState({ withTa: true })\n    })\n\n    EventEmitter.subscribe('joinPrivateGroupOnApproval', (group) => {\n      EventEmitter.publish('removeWaitingForRequestApprovalModal')\n      this.joinGroup(group)\n    })\n\n    EventEmitter.subscribe('notifyJoinRequestDeclined', (group) => {\n      NotificationManager.info(\n        `Your Request To Join ${group.name} Was Declined`\n      )\n      EventEmitter.publish('removeWaitingForRequestApprovalModal')\n    })\n\n    EventEmitter.subscribe('fetchGroups', () => {\n      this.fetchCurrentClass()\n    })\n  }\n\n  componentDidMount() {\n    const { classId } = this.props.router.query\n    if (!classId) return\n    this.classId = Number(classId)\n\n    api\n      .getMe()\n      .then((meData) => {\n        this.user = meData\n      })\n\n      .then(() => api.getClass(this.classId))\n      .then((c) => {\n        const userRole = c.users.find((u) => u.id === this.user.id)\n        if (!userRole) this.props.router.push('/calendar')\n        const { role } = userRole\n\n        /**\n         * Start the appropriate web socket handler depending on the user role\n         */\n\n        if (role === 'Student') {\n          /**\n           * Start student web socket handler\n           */\n\n          new StudentWebSocketClient().start({\n            me: this.user,\n            courseId: this.classId,\n          })\n        } else {\n          /**\n           * Start TA web socket handler\n           */\n\n          new TAWebSocketClient().start({\n            me: this.user,\n            courseId: this.classId,\n            onJoin: this.handleSelectGroup,\n          })\n        }\n\n        this.setState({\n          currentClass: {\n            ...c,\n            role: userRole.role,\n          },\n          isMounted: true,\n        })\n\n        EventEmitter.publish(\n          'allOtherStudentsInClass',\n          this.state.currentClass.users.filter(\n            (user) => user.id !== this.user.id && user.role === 'Student'\n          )\n        )\n\n        EventEmitter.publish('me', this.user)\n      })\n      .catch(console.error)\n  }\n\n  fetchCurrentClass = () => {\n    api\n      .getClass(this.classId)\n      .then((c) => {\n        const userRole = c.users.find((u) => u.id === this.user.id)\n        if (!userRole) this.props.router.push('/calendar')\n        this.setState({\n          currentClass: {\n            ...c,\n            role: userRole.role,\n          },\n        })\n      })\n      .catch(console.error)\n  }\n\n  handleBack = async () => {\n    await this.props.router.push('/calendar')\n  }\n\n  handleSelectGroup = async (group) => {\n    const { role } = this.state.currentClass\n\n    if (\n      group.type === 'office' ||\n      group.type === 'discussion' ||\n      role === 'Professor'\n    ) {\n      // you are popped off the waiting queue or you are a TA or you are joining a public discussion\n      this.joinGroup(group)\n      return\n    }\n\n    /**\n     * First, check if you are the leader of the group\n     */\n\n    const currGroup = await api.getGroupByID(this.classId, group.id)\n    const { UserId } = currGroup\n    const { id } = this.user\n\n    if (UserId === id) {\n      // you are the leader of the group, no need for authentication\n      this.joinGroup(group)\n    } else {\n      /**\n       * Ping group leader to let you into the group\n       */\n      EventEmitter.publish('activateWaitingForRequestApprovalModal', group)\n      EventEmitter.publish('requestJoinGroup', {\n        userId: id,\n        group: group,\n      })\n    }\n  }\n\n  getButtonToDisplay() {\n    return this.state.currentClass.role === 'Student' ? (\n      <CreateGroupModal onCreate={this.handleCreateGroup} />\n    ) : this.state.clicked === 'none' ? (\n      <Button\n        color=\"teal\"\n        content=\"Modify Discussions\"\n        fluid\n        style={{ fontSize: '1vw' }}\n        onClick={() => {\n          this.setState({ clicked: 'inline' })\n        }}\n      />\n    ) : (\n      <>\n        <CreateDiscussionModal\n          id=\"createDiscussionModal\"\n          onCreate={this.handleCreateGroup}\n        />\n        <Button\n          color=\"red\"\n          content=\"Done\"\n          fluid\n          style={{ fontSize: '1vw', marginTop: '2%' }}\n          onClick={() => {\n            this.setState({ clicked: 'none' })\n          }}\n        />\n      </>\n    )\n  }\n\n  getDeleteButton(group) {\n    return (\n      <Button\n        id={`deletebutton${group.id}`}\n        compact\n        icon\n        size=\"mini\"\n        floated=\"right\"\n        style={{\n          display: `${this.state.clicked}`,\n          fontSize: '.6vw',\n          textAlign: 'center',\n          width: '10%',\n          marginBottom: '2%',\n          minWidth: '10px',\n          backgroundColor: 'transparent',\n        }}\n        onClick={this.handleDeleteGroup}\n      >\n        <Icon name=\"delete\" color=\"red\" />\n      </Button>\n    )\n  }\n\n  handleDeleteGroup = async (group) => {\n    api.deleteGroup(this.classId, group.id).then(() => this.fetchCurrentClass())\n  }\n\n  handleCreateGroup = async (group) => {\n    const groupData = await api.postGroup(\n      this.classId,\n      group.name,\n      group.type,\n      this.user.id\n    )\n    this.fetchCurrentClass()\n    EventEmitter.publish('newGroupCreated', this.classId)\n    await this.handleSelectGroup(groupData)\n  }\n\n  showInviteButton(group) {\n    const plusIcon = (\n      <List.Icon\n        name=\"user plus\"\n        onClick={() => {\n          EventEmitter.publish('openInviteModal', true)\n        }}\n      />\n    )\n    const noPlusIcon = <div></div>\n\n    return this.state.currentGroup.id == group.id &&\n      this.state.vonageCred !== null\n      ? plusIcon\n      : noPlusIcon\n  }\n\n  getListItemStyle(group) {\n    const unClickedGroupsStyle = {\n      fontSize: '.8vw',\n      textAlign: 'left',\n      width: '80%',\n      marginBottom: '2%',\n      minWidth: '41px',\n      display: 'inline-block',\n    }\n\n    const clickedGroupsStyle = {\n      fontSize: '.8vw',\n      textAlign: 'left',\n      width: '80%',\n      marginBottom: '2%',\n      minWidth: '41px',\n      background: '#e0e1e2',\n      borderRadius: 10,\n      borderWidth: 1,\n      borderColor: '#fff',\n      display: 'inline-block',\n    }\n\n    return this.state.currentGroup.id == group.id &&\n      this.state.vonageCred !== null\n      ? clickedGroupsStyle\n      : unClickedGroupsStyle\n  }\n\n  showOffice() {\n    return (\n      (this.state.currentClass.role !== 'Student' ||\n        this.state.currentGroup.type === 'office') && (\n        <div style={{ paddingLeft: 20 }}>\n          <List relaxed selection verticalAlign=\"middle\">\n            {this.state.currentClass.groups\n              .filter((group) => group.type === 'office')\n              .map((group) => (\n                <List.Item\n                  key={`office`}\n                  onClick={() => {\n                    if (this.state.currentGroup.id !== group.id) {\n                      this.handleSelectGroup(group)\n                    }\n                  }}\n                  style={this.getListItemStyle(group)}\n                >\n                  <List.Icon name=\"graduation cap\" />\n                  <List.Content>\n                    <List.Header as=\"a\">TA Office</List.Header>\n                  </List.Content>\n                  {this.showInviteButton(group)}\n                </List.Item>\n              ))}\n          </List>\n        </div>\n      )\n    )\n  }\n\n  leftDisplay() {\n    return this.state.withTa === false ? (\n      <div style={{ height: '100%', marginLeft: '2.5%' }}>\n        <Button.Group\n          size=\"huge\"\n          style={{ marginBottom: 12, width: '100%' }}\n          fluid\n        >\n          <Button\n            compact\n            icon=\"angle left\"\n            content={this.state.currentClass.name}\n            style={{\n              fontSize: '1.5vw',\n              textAlign: 'left',\n              width: '75%',\n              marginBottom: '2%',\n              minWidth: '41px',\n            }}\n            onClick={this.handleBack}\n          />\n          {/* <Button\n            compact\n            icon=\"setting\"\n            style={{\n              fontSize: '1.5vw',\n              textAlign: 'center',\n              width: '15%',\n              marginBottom: '2%',\n              minWidth: '14px',\n            }}\n          /> */}\n        </Button.Group>\n        {this.showOffice()}\n        <Accordion\n          fluid\n          exclusive={false}\n          defaultActiveIndex={[0, 1]}\n          style={{\n            fontSize: '1vw',\n            textAlign: 'left',\n            width: '100%',\n            marginBottom: '2%',\n            minWidth: '41px',\n          }}\n          panels={[\n            {\n              key: 'discussions',\n              title: 'Discussions',\n              content: {\n                content: (\n                  <div\n                    style={{ paddingLeft: 20, height: 200, overflow: 'auto' }}\n                  >\n                    <List relaxed selection>\n                      {this.state.currentClass.groups\n                        .filter((group) => group.type === 'discussion')\n                        .map((group) => (\n                          <>\n                            <List.Item\n                              key={`discussion_${group.id}`}\n                              onClick={() => {\n                                if (this.state.currentGroup.id !== group.id) {\n                                  this.handleSelectGroup(group)\n                                }\n                              }}\n                              style={this.getListItemStyle(group)}\n                            >\n                              <List.Icon name=\"sound\" />\n                              <List.Content>\n                                <List.Header as=\"a\">{group.name}</List.Header>\n                              </List.Content>\n                              {this.showInviteButton(group)}\n                            </List.Item>\n                            {this.getDeleteButton(group)}\n                          </>\n                        ))}\n                    </List>\n                  </div>\n                ),\n              },\n            },\n            {\n              key: 'private-groups',\n              title: 'Private Groups',\n              content: {\n                content: (\n                  <div\n                    style={{ paddingLeft: 20, height: 200, overflow: 'auto' }}\n                  >\n                    <List relaxed selection>\n                      {this.state.currentClass.groups\n                        .filter((group) => group.type === 'group')\n                        .map((group) => (\n                          <List.Item\n                            key={`private_group_${group.id}`}\n                            onClick={() => {\n                              if (this.state.currentGroup.id !== group.id) {\n                                this.handleSelectGroup(group)\n                              }\n                            }}\n                            style={this.getListItemStyle(group)}\n                          >\n                            <List.Icon name=\"lock\" />\n                            <List.Content>\n                              <List.Header as=\"a\">{group.name}</List.Header>\n                            </List.Content>\n                            {this.showInviteButton(group)}\n                          </List.Item>\n                        ))}\n                    </List>\n                  </div>\n                ),\n              },\n            },\n          ]}\n        />\n        <div\n          style={{\n            position: 'absolute',\n            width: 'calc(100% - 38px)',\n            bottom: 14,\n          }}\n        >\n          {this.getButtonToDisplay()}\n        </div>\n      </div>\n    ) : (\n      <div> </div>\n    )\n  }\n\n  render() {\n    if (!this.state.isMounted) {\n      return null\n    }\n\n    return (\n      <Layout\n        left={this.leftDisplay()}\n        right={<Queue onJoin={this.handleSelectGroup} />}\n      >\n        {this.state.vonageCred && (\n          <ScreenContainer\n            style={{ width: '100%', maxHeight: '75vh' }}\n            sessionId={this.state.vonageCred.sessionId}\n            token={this.state.vonageCred.token}\n            onLeave={this.leaveGroup}\n          />\n        )}\n        <StudentInviteModal />\n        <GroupLeaderModal />\n        <FeedbackModal />\n        <ReceiveInviteModal onJoin={this.handleSelectGroup} />\n        <GroupJoinRequestModal />\n        <WaitingForRequestApprovalModal />\n        <NotificationContainer />\n      </Layout>\n    )\n  }\n}\nexport default AuthRequired(withRouter(ClassPage))\n"]},"metadata":{},"sourceType":"module"}