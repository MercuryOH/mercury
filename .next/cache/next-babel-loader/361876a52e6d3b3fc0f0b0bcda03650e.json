{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport YourTurnModal from './yourTurnModal';\nimport { Label, Button } from 'semantic-ui-react';\nimport { EventEmitter } from '../../util/EventEmitter';\nvar QueueDiv = styled.div.withConfig({\n  displayName: \"studentQueueView__QueueDiv\",\n  componentId: \"sc-1qcvoz5-0\"\n})([\"grid-gap:2vh;\"]);\nvar QueueLabel = styled(Label).withConfig({\n  displayName: \"studentQueueView__QueueLabel\",\n  componentId: \"sc-1qcvoz5-1\"\n})([\"text-align:center;\"]);\n/**\r\n * This is how the student views the Queue\r\n */\n\nvar StudentQueueView = /*#__PURE__*/function (_Component) {\n  _inherits(StudentQueueView, _Component);\n\n  var _super = _createSuper(StudentQueueView);\n\n  function StudentQueueView(props) {\n    var _this;\n\n    _classCallCheck(this, StudentQueueView);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      displayStudentsStyle: {\n        display: 'grid'\n      },\n      iconToDisplay: 'caret square down outline',\n      studentsInQueue: [],\n      me: _this.props.me,\n      inQueue: false,\n      isYourTurn: false,\n      currStudentBeingHelped: '',\n      isReadyToRender: false,\n      office: _this.props.office,\n      inCallWithTA: false,\n      currentGroup: {\n        id: '',\n        name: ''\n      },\n      onJoin: _this.props.onJoin\n    };\n\n    _this.defineEventEmitterCallbacks();\n\n    return _this;\n  }\n  /**\r\n   * Define EventEmitter subscribers\r\n   */\n\n\n  _createClass(StudentQueueView, [{\n    key: \"defineEventEmitterCallbacks\",\n    value: function defineEventEmitterCallbacks() {\n      var _this2 = this;\n\n      EventEmitter.subscribe('activateYourTurnModal', function (TAName) {\n        _this2.setState({\n          inQueue: false\n        });\n\n        EventEmitter.publish('startYourTurnModalTimer', TAName);\n      });\n      EventEmitter.subscribe('updateStudentsInQueue', function (msg) {\n        _this2.setState({\n          studentsInQueue: msg.map(function (_ref) {\n            var fullName = _ref.fullName;\n            return fullName;\n          })\n        });\n      });\n      EventEmitter.subscribe('addMeToQueue', function () {\n        _this2.setState({\n          inQueue: true\n        });\n      });\n      EventEmitter.subscribe('removeMeFromQueue', function () {\n        _this2.setState({\n          inQueue: false\n        });\n      });\n      EventEmitter.subscribe('studentTimeout', function (TAName) {\n        EventEmitter.publish('signalStudentTimeout', TAName);\n\n        _this2.createTimeoutNotification();\n      });\n      EventEmitter.subscribe('studentJoinTA', function (TAName) {\n        var _this2$state = _this2.state,\n            office = _this2$state.office,\n            onJoin = _this2$state.onJoin,\n            me = _this2$state.me;\n        EventEmitter.publish('signalJoinTA', {\n          group: office,\n          TAName: TAName,\n          me: me\n        });\n        onJoin(office);\n\n        _this2.setState({\n          inQueue: false,\n          inCallWithTA: true\n        });\n      });\n      EventEmitter.subscribe('studentInviteTA', function (TAName) {\n        var _this2$state2 = _this2.state,\n            currentGroup = _this2$state2.currentGroup,\n            me = _this2$state2.me;\n        EventEmitter.publish('signalJoinTA', {\n          group: currentGroup,\n          TAName: TAName,\n          me: me\n        });\n\n        _this2.setState({\n          inQueue: false,\n          inCallWithTA: true\n        });\n      });\n      EventEmitter.subscribe('studentDeclineTA', function (TAName) {\n        EventEmitter.publish('signalDeclineTA', TAName);\n\n        _this2.setState({\n          inQueue: false\n        });\n      });\n      EventEmitter.subscribe('currentGroupChange', function (currentGroup) {\n        _this2.setState({\n          currentGroup: currentGroup\n        });\n      });\n      EventEmitter.subscribe('callOver', function (classId) {\n        var inCallWithTA = _this2.state.inCallWithTA;\n\n        if (inCallWithTA) {\n          EventEmitter.publish('signalCallOver');\n          EventEmitter.publish('activateFeedbackModal', classId);\n\n          _this2.setState({\n            inCallWithTA: false,\n            currStudentBeingHelped: ''\n          });\n        }\n      });\n      EventEmitter.subscribe('updateCurrStudent', function (currStudentBeingHelped) {\n        _this2.setState({\n          currStudentBeingHelped: currStudentBeingHelped\n        });\n      });\n      EventEmitter.subscribe('initializeQueueOnGreeting', function (_ref2) {\n        var currStudent = _ref2.currStudent,\n            studentsInQueue = _ref2.studentsInQueue;\n        var myId = _this2.state.me.id;\n        var inQueue = studentsInQueue.filter(function (_ref3) {\n          var id = _ref3.id;\n          return id === myId;\n        }).length > 0;\n\n        _this2.setState({\n          currStudentBeingHelped: currStudent,\n          studentsInQueue: studentsInQueue.map(function (_ref4) {\n            var fullName = _ref4.fullName;\n            return fullName;\n          }),\n          inQueue: inQueue\n        });\n      });\n    }\n  }, {\n    key: \"createTimeoutNotification\",\n    value: function createTimeoutNotification() {\n      EventEmitter.publish('createNotification', 'Your Invitation Has Expired');\n    }\n  }, {\n    key: \"isStudentDisplayed\",\n    value: function isStudentDisplayed() {\n      var display = this.state.displayStudentsStyle.display;\n      return display === 'grid';\n    }\n  }, {\n    key: \"alterStudentDisplay\",\n    value: function alterStudentDisplay() {\n      var displayStudentsStyle = this.isStudentDisplayed() ? {\n        display: 'none'\n      } : {\n        display: 'grid'\n      };\n      var iconToDisplay = this.isStudentDisplayed() ? 'caret square up outline' : 'caret square down outline';\n      this.setState({\n        displayStudentsStyle: displayStudentsStyle,\n        iconToDisplay: iconToDisplay\n      });\n    }\n  }, {\n    key: \"addMeToQueue\",\n    value: function addMeToQueue() {\n      var _this$state$me = this.state.me,\n          firstName = _this$state$me.firstName,\n          lastName = _this$state$me.lastName;\n      var fullName = \"\".concat(firstName, \" \").concat(lastName);\n\n      if (this.state.studentsInQueue.indexOf(fullName) >= 0 || this.state.currStudentBeingHelped === fullName) {\n        return;\n      }\n\n      EventEmitter.publish('signalAddMeToQueue');\n    }\n  }, {\n    key: \"removeMeFromQueue\",\n    value: function removeMeFromQueue() {\n      var _this$state$me2 = this.state.me,\n          firstName = _this$state$me2.firstName,\n          lastName = _this$state$me2.lastName;\n      var fullName = \"\".concat(firstName, \" \").concat(lastName);\n\n      if (this.state.studentsInQueue.indexOf(fullName) < 0) {\n        return;\n      }\n\n      EventEmitter.publish('signalRemoveMeFromQueue');\n    }\n  }, {\n    key: \"getButtonToDisplay\",\n    value: function getButtonToDisplay() {\n      if (this.state.inCallWithTA) {\n        return null;\n      }\n\n      var buttonToDisplay = this.state.inQueue ? __jsx(Button, {\n        onClick: this.removeMeFromQueue.bind(this),\n        style: {\n          width: '100%',\n          fontSize: '1vw'\n        },\n        secondary: true\n      }, \"Leave Queue\") : __jsx(Button, {\n        onClick: this.addMeToQueue.bind(this),\n        style: {\n          width: '100%',\n          fontSize: '1vw'\n        },\n        primary: true\n      }, \"Join Queue\");\n      return __jsx(\"div\", {\n        style: {\n          position: 'absolute',\n          width: 'calc(100% - 38px)',\n          bottom: 14,\n          display: 'inline-flex'\n        }\n      }, buttonToDisplay);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      EventEmitter.publish('greeting');\n      this.setState({\n        isReadyToRender: true\n      });\n    }\n  }, {\n    key: \"createCurrStudentLabel\",\n    value: function createCurrStudentLabel() {\n      var currStudentBeingHelped = this.state.currStudentBeingHelped;\n\n      if (currStudentBeingHelped.length == 0) {\n        return null;\n      }\n\n      return __jsx(QueueLabel, {\n        style: {\n          fontSize: '1.2vw',\n          textAlign: 'center',\n          width: '95%',\n          marginBottom: '2%',\n          minWidth: '41px',\n          marginLeft: '.8%',\n          backgroundColor: 'red',\n          marginRight: '1%'\n        },\n        key: currStudentBeingHelped\n      }, currStudentBeingHelped);\n    }\n  }, {\n    key: \"createQueueLabel\",\n    value: function createQueueLabel(student) {\n      return __jsx(QueueLabel, {\n        style: {\n          fontSize: '1.2vw',\n          textAlign: 'center',\n          width: '95%',\n          marginBottom: '2%',\n          minWidth: '41px',\n          marginLeft: '.8%',\n          marginRight: '1%'\n        },\n        key: student\n      }, student);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isReadyToRender = this.state.isReadyToRender;\n\n      if (!isReadyToRender) {\n        return null;\n      }\n\n      var queueLabels = this.isStudentDisplayed() ? this.state.studentsInQueue.map(this.createQueueLabel) : [];\n      return __jsx(QueueDiv, null, __jsx(YourTurnModal, null), __jsx(Button.Group, {\n        size: \"huge\",\n        style: {\n          marginBottom: 12,\n          width: '95%'\n        },\n        fluid: true,\n        vertical: true\n      }, __jsx(Button, {\n        compact: true,\n        content: \"Queue\",\n        icon: this.state.iconToDisplay,\n        labelPosition: \"right\",\n        onClick: this.alterStudentDisplay.bind(this),\n        style: {\n          fontSize: '1.5vw',\n          textAlign: 'center',\n          width: '100%',\n          marginBottom: '2%',\n          minWidth: '41px'\n        }\n      })), this.createCurrStudentLabel(), __jsx(QueueDiv, {\n        style: {\n          width: '100%',\n          marginBottom: '2%',\n          minWidth: '41px'\n        }\n      }, queueLabels), this.getButtonToDisplay());\n    }\n  }]);\n\n  return StudentQueueView;\n}(Component);\n\nexport default StudentQueueView;","map":null,"metadata":{},"sourceType":"module"}