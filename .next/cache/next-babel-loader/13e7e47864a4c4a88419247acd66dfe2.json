{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport { Accordion, List, Button } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\nimport { AuthRequired } from '../components/authProvider';\nimport * as api from '../util/mercuryService';\nimport Link from 'next/Link';\n\nfunction DropDown() {\n  _s();\n\n  var _useState = useState([]),\n      classes = _useState[0],\n      setClasses = _useState[1];\n\n  useEffect(function () {\n    api.getClasses().then(function (classes) {\n      return setClasses(classes);\n    })[\"catch\"](console.error);\n  }, []);\n  var colors = ['red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown', 'gray', 'black']; // const taClasses = ['CS 1110']\n\n  var taClasses = [];\n\n  function zip() {\n    var args = [].slice.call(arguments);\n    var shortest = args.length == 0 ? [] : args.reduce(function (a, b) {\n      return a.length < b.length ? a : b;\n    });\n    return shortest.map(function (_, i) {\n      return args.map(function (array) {\n        return array[i];\n      });\n    });\n  }\n\n  return __jsx(\"div\", null, __jsx(Accordion, {\n    fluid: true,\n    exclusive: false,\n    defaultActiveIndex: [0, 1],\n    style: {\n      fontSize: '1vw'\n    },\n    panels: [{\n      key: 'student',\n      title: 'Student',\n      content: {\n        content: __jsx(\"div\", null, __jsx(List, {\n          relaxed: true\n        }, __jsx(React.Fragment, null, zip(colors, classes).filter(function (zipped) {\n          return zipped[1].role === 'Student';\n        }).map(function (zipped) {\n          return __jsx(List.Item, {\n            key: \"class_\".concat(zipped[1].id)\n          }, __jsx(List.Content, null, __jsx(Link, {\n            href: \"/classes/\".concat(zipped[1].id)\n          }, __jsx(Button, {\n            style: {\n              fontSize: '1vw',\n              width: '100%',\n              minWidth: '41px'\n            },\n            color: zipped[0],\n            content: zipped[1].name\n          }))));\n        }), \"/*\", zip(colors, classes).map(function (zipped) {\n          return __jsx(List.Item, {\n            key: \"class_\".concat(zipped[1].id)\n          }, __jsx(List.Content, null, __jsx(Link, {\n            href: \"/classes/\".concat(zipped[1].id)\n          }, __jsx(Button, {\n            style: {\n              fontSize: '1vw',\n              width: '100%',\n              minWidth: '41px'\n            },\n            color: zipped[0],\n            content: zipped[1].name\n          }))));\n        }), \"*/\")))\n      }\n    }, {\n      key: 'ta',\n      title: 'TA',\n      content: {\n        content: __jsx(\"div\", null, __jsx(List, {\n          relaxed: true\n        }, zip(colors, taClasses).map(function (zipped) {\n          return __jsx(List.Item, null, __jsx(List.Content, null, __jsx(Button, {\n            color: zipped[0],\n            content: zipped[1],\n            style: {\n              fontSize: '1vw',\n              width: '100%',\n              minWidth: '41px'\n            }\n          })));\n        })))\n      }\n    }]\n  }));\n}\n\n_s(DropDown, \"qT6ik07+VfcioBDcO2AwZweM5SY=\");\n\n_c = DropDown;\nexport default DropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/dropDown.js"],"names":["React","Component","useEffect","useState","Accordion","List","Button","useRouter","AuthRequired","api","Link","DropDown","classes","setClasses","getClasses","then","console","error","colors","taClasses","zip","args","slice","call","arguments","shortest","length","reduce","a","b","map","_","i","array","fontSize","key","title","content","filter","zipped","role","id","width","minWidth","name"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\nimport { Accordion, List, Button } from 'semantic-ui-react'\nimport { useRouter } from 'next/router'\nimport { AuthRequired } from '../components/authProvider'\nimport * as api from '../util/mercuryService'\nimport Link from 'next/Link'\n\nfunction DropDown() {\n  const [classes, setClasses] = useState([])\n\n  useEffect(() => {\n    api\n      .getClasses()\n      .then((classes) => setClasses(classes))\n      .catch(console.error)\n  }, [])\n\n  const colors = [\n    'red',\n    'orange',\n    'yellow',\n    'olive',\n    'green',\n    'teal',\n    'blue',\n    'violet',\n    'purple',\n    'pink',\n    'brown',\n    'gray',\n    'black',\n  ]\n\n\n  // const taClasses = ['CS 1110']\n  const taClasses = []\n\n  function zip() {\n    var args = [].slice.call(arguments)\n    var shortest =\n      args.length == 0\n        ? []\n        : args.reduce(function (a, b) {\n            return a.length < b.length ? a : b\n          })\n\n    return shortest.map(function (_, i) {\n      return args.map(function (array) {\n        return array[i]\n      })\n    })\n  }\n\n  return (\n    <div>\n      <Accordion\n        fluid\n        exclusive={false}\n        defaultActiveIndex={[0, 1]}\n        style = {{fontSize: '1vw'}}\n        panels={[\n          {\n            key: 'student',\n            title: 'Student',\n            content: {\n              content: (\n                <div>\n                  <List relaxed>\n                    <>\n                    {zip(colors,classes).filter((zipped) => zipped[1].role === 'Student').map((zipped) => (\n                      <List.Item key={`class_${zipped[1].id}`}>\n                        <List.Content>\n                          <Link href={`/classes/${zipped[1].id}`}>\n                            <Button\n                              style={{\n                                fontSize: '1vw',\n                                width: '100%',\n                                minWidth: '41px',\n                              }}\n                              color={zipped[0]}\n                              content={zipped[1].name}\n                            />\n\n                          </Link>\n                        </List.Content>\n                      </List.Item>\n                    ))}\n                      /*{zip(colors,classes).map((zipped) => (\n                        <List.Item key={`class_${zipped[1].id}`}>\n                          <List.Content>\n                            <Link href={`/classes/${zipped[1].id}`}>\n                              <Button\n                                style={{\n                                  fontSize: '1vw',\n                                  width: '100%',\n                                  minWidth: '41px',\n                                }}\n                                color={zipped[0]}\n                                content={zipped[1].name}\n                              />\n\n                            </Link>\n                          </List.Content>\n                        </List.Item>\n                      ))}*/\n                    </>\n                  </List>\n                </div>\n              ),\n            },\n          },\n          {\n            key: 'ta',\n            title: 'TA',\n            content: {\n              content: (\n                <div>\n                  <List relaxed>\n                    {zip(colors, taClasses).map((zipped) => (\n                      <List.Item>\n                        <List.Content>\n                          <Button\n                            color={zipped[0]}\n                            content={zipped[1]}\n                            style={{\n                              fontSize: '1vw',\n                              width: '100%',\n                              minWidth: '41px',\n                            }}\n                          ></Button>\n                        </List.Content>\n                      </List.Item>\n                    ))}\n                  </List>\n                </div>\n              ),\n            },\n          },\n        ]}\n      />\n    </div>\n  )\n}\n\nexport default DropDown\n"]},"metadata":{},"sourceType":"module"}