{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Modal, Button, Search, Label, Icon } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { EventEmitter } from './util/EventEmitter';\nimport SearchBar from './invite/searchBar';\nvar initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\n\nvar GroupLeaderModal = /*#__PURE__*/function (_Component) {\n  _inherits(GroupLeaderModal, _Component);\n\n  var _super = _createSuper(GroupLeaderModal);\n\n  function GroupLeaderModal(props) {\n    var _this;\n\n    _classCallCheck(this, GroupLeaderModal);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"formatAsResults\", function (user) {\n      return {\n        title: user.firstName + ' ' + user.lastName,\n        id: user.id,\n        description: user.email\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInvite\", function () {\n      EventEmitter.publish('openGroupLeaderModal', false);\n      if (_.isEmpty(_this.state.selectedUser)) return;\n      console.log(_.map(_this.state.selectedUser, 'id'));\n      EventEmitter.publish('sendOutInvite', {\n        sender: _this.state.me,\n        recepientIds: _.map(_this.state.selectedUser, 'id'),\n        group: _this.state.currentGroup\n      });\n\n      _this.setState({\n        value: '',\n        selectedUser: [],\n        modalState: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function () {\n      _this.setState({\n        value: '',\n        selectedUser: [],\n        modalState: false\n      });\n\n      EventEmitter.publish('openGroupLeaderModal', false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleResultSelect\", function (e, _ref) {\n      var result = _ref.result;\n\n      var filtered = _this.state.selectedUser.filter(function (user) {\n        return user.id !== result.id;\n      });\n\n      filtered.push(result);\n\n      _this.setState({\n        value: '',\n        selectedUser: filtered\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSearchChange\", function (e, _ref2) {\n      var value = _ref2.value;\n\n      _this.setState({\n        isLoading: true,\n        value: value\n      });\n\n      setTimeout(function () {\n        if (_this.state.value.length < 1) return _this.setState(initialState);\n        var re = new RegExp(_.escapeRegExp(_this.state.value), 'i');\n\n        var isMatch = function isMatch(result) {\n          return re.test(result.title) || re.test(result.description);\n        };\n\n        _this.setState({\n          isLoading: false,\n          results: _.filter(_this.state.allUsers.map(_this.formatAsResults), isMatch)\n        });\n      }, 300);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeSelected\", function (user) {\n      _this.setState({\n        selectedUser: _this.state.selectedUser.filter(function (u) {\n          return u.id !== user.id;\n        }) // selectedUser: {},\n\n      });\n    });\n\n    _this.state = {\n      modalState: false,\n      isLoading: false,\n      results: [],\n      value: '',\n      allUsers: [],\n      selectedUser: [],\n      me: {},\n      groupToChange: {\n        id: '',\n        name: ''\n      }\n    };\n\n    _this.defineEventEmitterCallbacks();\n\n    return _this;\n  }\n\n  _createClass(GroupLeaderModal, [{\n    key: \"defineEventEmitterCallbacks\",\n    value: function defineEventEmitterCallbacks() {\n      var _this2 = this;\n\n      EventEmitter.subscribe('openGroupLeaderModal', function (openGroupLeaderModal) {\n        _this2.setState({\n          modalState: openGroupLeaderModal\n        });\n\n        console.log('1');\n      });\n      EventEmitter.subscribe('me', function (me) {\n        _this2.setState({\n          me: me\n        });\n      });\n      EventEmitter.subscribe('allOtherStudentsInClass', function (users) {\n        _this2.setState({\n          allUsers: users\n        });\n      }); //all find whre publisher is\n      // needs all other students in group\n\n      EventEmitter.subscribe('leaderNeedsChange', function (groupToChange) {\n        _this2.setState({\n          groupToChange: groupToChange\n        });\n\n        console.log('2');\n      });\n    }\n  }, {\n    key: \"getSelectedLabels\",\n    value: function getSelectedLabels() {\n      var _this3 = this;\n\n      // if (_.isEmpty(this.state.selectedUser)) {\n      //   return <></>\n      // }\n      // return (\n      //   <div\n      //     style={{\n      //       textAlign: 'left',\n      //       paddingLeft: 80,\n      //       paddingRight: 80,\n      //     }}\n      //   >\n      //     <Label>\n      //       {this.state.selectedUser.title}\n      //       <Icon\n      //         name=\"delete\"\n      //         onClick={() => this.removeSelected(this.state.selectedUser)}\n      //       />\n      //     </Label>\n      //   </div>\n      // )\n      if (_.isEmpty(this.state.selectedUser)) {\n        return __jsx(React.Fragment, null);\n      }\n\n      return __jsx(\"div\", {\n        style: {\n          textAlign: 'left',\n          paddingLeft: 80,\n          paddingRight: 80\n        }\n      }, this.state.selectedUser.map(function (user) {\n        return __jsx(Label, null, user.title, __jsx(Icon, {\n          name: \"delete\",\n          onClick: function onClick() {\n            return _this3.removeSelected(user);\n          }\n        }));\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(Modal, {\n        style: {\n          borderless: 'true',\n          width: '40%',\n          height: '40%'\n        },\n        open: this.state.modalState,\n        onClose: this.handleClose,\n        closeOnDimmerClick: false,\n        closeOnEscape: false,\n        closeIcon: true\n      }, __jsx(Modal.Content, {\n        style: {\n          borderless: 'true'\n        }\n      }, __jsx(\"div\", {\n        style: {\n          textAlign: 'center',\n          paddingTop: 80,\n          paddingLeft: 80,\n          paddingRight: 80,\n          paddingBottom: 20\n        }\n      }, __jsx(Search, {\n        fluid: true,\n        placeholder: \"Choose a new group leader...\",\n        input: {\n          fluid: true\n        },\n        loading: this.state.isLoading,\n        onResultSelect: this.handleResultSelect,\n        onSearchChange: _.debounce(this.handleSearchChange, 500, {\n          leading: true\n        }),\n        results: this.state.results,\n        value: this.state.value\n      })), this.getSelectedLabels(), __jsx(\"div\", {\n        style: {\n          textAlign: 'center',\n          width: '70%',\n          height: '70%',\n          margin: 'auto',\n          padding: 30\n        }\n      }, __jsx(Button, {\n        color: \"teal\",\n        style: {\n          width: '50%',\n          fontSize: '1vw'\n        },\n        onClick: this.handleInvite\n      }, \"Change Group Leader\")))));\n    }\n  }]);\n\n  return GroupLeaderModal;\n}(Component);\n\nexport default GroupLeaderModal;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/groupLeaderModal.js"],"names":["React","Component","Modal","Button","Search","Label","Icon","_","EventEmitter","SearchBar","initialState","isLoading","results","value","GroupLeaderModal","props","user","title","firstName","lastName","id","description","email","publish","isEmpty","state","selectedUser","console","log","map","sender","me","recepientIds","group","currentGroup","setState","modalState","e","result","filtered","filter","push","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","allUsers","formatAsResults","u","groupToChange","name","defineEventEmitterCallbacks","subscribe","openGroupLeaderModal","users","textAlign","paddingLeft","paddingRight","removeSelected","borderless","width","height","handleClose","paddingTop","paddingBottom","fluid","handleResultSelect","debounce","handleSearchChange","leading","getSelectedLabels","margin","padding","fontSize","handleInvite"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,IAAvC,QAAmD,mBAAnD;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AAEA,IAAMC,YAAY,GAAG;AAAEC,EAAAA,SAAS,EAAE,KAAb;AAAoBC,EAAAA,OAAO,EAAE,EAA7B;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CAArB;;IAEMC,gB;;;;;AACJ,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,sEAuCD,UAACC,IAAD,EAAU;AAC1B,aAAO;AACLC,QAAAA,KAAK,EAAED,IAAI,CAACE,SAAL,GAAiB,GAAjB,GAAuBF,IAAI,CAACG,QAD9B;AAELC,QAAAA,EAAE,EAAEJ,IAAI,CAACI,EAFJ;AAGLC,QAAAA,WAAW,EAAEL,IAAI,CAACM;AAHb,OAAP;AAKD,KA7CkB;;AAAA,mEA+CJ,YAAM;AACnBd,MAAAA,YAAY,CAACe,OAAb,CAAqB,sBAArB,EAA6C,KAA7C;AAEA,UAAIhB,CAAC,CAACiB,OAAF,CAAU,MAAKC,KAAL,CAAWC,YAArB,CAAJ,EAAwC;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAYrB,CAAC,CAACsB,GAAF,CAAM,MAAKJ,KAAL,CAAWC,YAAjB,EAA+B,IAA/B,CAAZ;AACAlB,MAAAA,YAAY,CAACe,OAAb,CAAqB,eAArB,EAAsC;AACpCO,QAAAA,MAAM,EAAE,MAAKL,KAAL,CAAWM,EADiB;AAEpCC,QAAAA,YAAY,EAAEzB,CAAC,CAACsB,GAAF,CAAM,MAAKJ,KAAL,CAAWC,YAAjB,EAA+B,IAA/B,CAFsB;AAGpCO,QAAAA,KAAK,EAAE,MAAKR,KAAL,CAAWS;AAHkB,OAAtC;;AAMA,YAAKC,QAAL,CAAc;AAAEtB,QAAAA,KAAK,EAAE,EAAT;AAAaa,QAAAA,YAAY,EAAE,EAA3B;AAA+BU,QAAAA,UAAU,EAAE;AAA3C,OAAd;AACD,KA3DkB;;AAAA,kEA+DL,YAAM;AAClB,YAAKD,QAAL,CAAc;AAAEtB,QAAAA,KAAK,EAAE,EAAT;AAAaa,QAAAA,YAAY,EAAE,EAA3B;AAA+BU,QAAAA,UAAU,EAAE;AAA3C,OAAd;;AACA5B,MAAAA,YAAY,CAACe,OAAb,CAAqB,sBAArB,EAA6C,KAA7C;AACD,KAlEkB;;AAAA,yEAoEE,UAACc,CAAD,QAAmB;AAAA,UAAbC,MAAa,QAAbA,MAAa;;AACtC,UAAMC,QAAQ,GAAG,MAAKd,KAAL,CAAWC,YAAX,CAAwBc,MAAxB,CACf,UAACxB,IAAD;AAAA,eAAUA,IAAI,CAACI,EAAL,KAAYkB,MAAM,CAAClB,EAA7B;AAAA,OADe,CAAjB;;AAGAmB,MAAAA,QAAQ,CAACE,IAAT,CAAcH,MAAd;;AACA,YAAKH,QAAL,CAAc;AACZtB,QAAAA,KAAK,EAAE,EADK;AAEZa,QAAAA,YAAY,EAAEa;AAFF,OAAd;AAID,KA7EkB;;AAAA,yEA+EE,UAACF,CAAD,SAAkB;AAAA,UAAZxB,KAAY,SAAZA,KAAY;;AACrC,YAAKsB,QAAL,CAAc;AAAExB,QAAAA,SAAS,EAAE,IAAb;AAAmBE,QAAAA,KAAK,EAALA;AAAnB,OAAd;;AAEA6B,MAAAA,UAAU,CAAC,YAAM;AACf,YAAI,MAAKjB,KAAL,CAAWZ,KAAX,CAAiB8B,MAAjB,GAA0B,CAA9B,EAAiC,OAAO,MAAKR,QAAL,CAAczB,YAAd,CAAP;AAEjC,YAAMkC,EAAE,GAAG,IAAIC,MAAJ,CAAWtC,CAAC,CAACuC,YAAF,CAAe,MAAKrB,KAAL,CAAWZ,KAA1B,CAAX,EAA6C,GAA7C,CAAX;;AACA,YAAMkC,OAAO,GAAG,SAAVA,OAAU,CAACT,MAAD;AAAA,iBACdM,EAAE,CAACI,IAAH,CAAQV,MAAM,CAACrB,KAAf,KAAyB2B,EAAE,CAACI,IAAH,CAAQV,MAAM,CAACjB,WAAf,CADX;AAAA,SAAhB;;AAGA,cAAKc,QAAL,CAAc;AACZxB,UAAAA,SAAS,EAAE,KADC;AAEZC,UAAAA,OAAO,EAAEL,CAAC,CAACiC,MAAF,CACP,MAAKf,KAAL,CAAWwB,QAAX,CAAoBpB,GAApB,CAAwB,MAAKqB,eAA7B,CADO,EAEPH,OAFO;AAFG,SAAd;AAOD,OAdS,EAcP,GAdO,CAAV;AAeD,KAjGkB;;AAAA,qEAgJF,UAAC/B,IAAD,EAAU;AACzB,YAAKmB,QAAL,CAAc;AACZT,QAAAA,YAAY,EAAE,MAAKD,KAAL,CAAWC,YAAX,CAAwBc,MAAxB,CAA+B,UAACW,CAAD;AAAA,iBAAOA,CAAC,CAAC/B,EAAF,KAASJ,IAAI,CAACI,EAArB;AAAA,SAA/B,CADF,CAEZ;;AAFY,OAAd;AAID,KArJkB;;AAGjB,UAAKK,KAAL,GAAa;AACXW,MAAAA,UAAU,EAAE,KADD;AAEXzB,MAAAA,SAAS,EAAE,KAFA;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXoC,MAAAA,QAAQ,EAAE,EALC;AAMXvB,MAAAA,YAAY,EAAE,EANH;AAOXK,MAAAA,EAAE,EAAE,EAPO;AAQXqB,MAAAA,aAAa,EAAE;AAAEhC,QAAAA,EAAE,EAAE,EAAN;AAAUiC,QAAAA,IAAI,EAAE;AAAhB;AARJ,KAAb;;AAWA,UAAKC,2BAAL;;AAdiB;AAelB;;;;kDAE6B;AAAA;;AAC5B9C,MAAAA,YAAY,CAAC+C,SAAb,CAAuB,sBAAvB,EAA+C,UAACC,oBAAD,EAA0B;AACvE,QAAA,MAAI,CAACrB,QAAL,CAAc;AAAEC,UAAAA,UAAU,EAAEoB;AAAd,SAAd;;AACA7B,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,OAHD;AAKApB,MAAAA,YAAY,CAAC+C,SAAb,CAAuB,IAAvB,EAA6B,UAACxB,EAAD,EAAQ;AACnC,QAAA,MAAI,CAACI,QAAL,CAAc;AAAEJ,UAAAA,EAAE,EAAFA;AAAF,SAAd;AACD,OAFD;AAIAvB,MAAAA,YAAY,CAAC+C,SAAb,CAAuB,yBAAvB,EAAkD,UAACE,KAAD,EAAW;AAC3D,QAAA,MAAI,CAACtB,QAAL,CAAc;AAAEc,UAAAA,QAAQ,EAAEQ;AAAZ,SAAd;AACD,OAFD,EAV4B,CAa5B;AACA;;AAEAjD,MAAAA,YAAY,CAAC+C,SAAb,CAAuB,mBAAvB,EAA4C,UAACH,aAAD,EAAmB;AAC7D,QAAA,MAAI,CAACjB,QAAL,CAAc;AAAEiB,UAAAA,aAAa,EAAbA;AAAF,SAAd;;AACAzB,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACD,OAHD;AAID;;;wCA8DmB;AAAA;;AAClB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,UAAIrB,CAAC,CAACiB,OAAF,CAAU,KAAKC,KAAL,CAAWC,YAArB,CAAJ,EAAwC;AACtC,eAAO,2BAAP;AACD;;AAED,aACE;AACE,QAAA,KAAK,EAAE;AACLgC,UAAAA,SAAS,EAAE,MADN;AAELC,UAAAA,WAAW,EAAE,EAFR;AAGLC,UAAAA,YAAY,EAAE;AAHT;AADT,SAOG,KAAKnC,KAAL,CAAWC,YAAX,CAAwBG,GAAxB,CAA4B,UAACb,IAAD;AAAA,eAC3B,MAAC,KAAD,QACGA,IAAI,CAACC,KADR,EAEE,MAAC,IAAD;AAAM,UAAA,IAAI,EAAC,QAAX;AAAoB,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAC4C,cAAL,CAAoB7C,IAApB,CAAN;AAAA;AAA7B,UAFF,CAD2B;AAAA,OAA5B,CAPH,CADF;AAgBD;;;6BASQ;AACP,aACE,mBACE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE;AAAE8C,UAAAA,UAAU,EAAE,MAAd;AAAsBC,UAAAA,KAAK,EAAE,KAA7B;AAAoCC,UAAAA,MAAM,EAAE;AAA5C,SADT;AAEE,QAAA,IAAI,EAAE,KAAKvC,KAAL,CAAWW,UAFnB;AAGE,QAAA,OAAO,EAAE,KAAK6B,WAHhB;AAIE,QAAA,kBAAkB,EAAE,KAJtB;AAKE,QAAA,aAAa,EAAE,KALjB;AAME,QAAA,SAAS;AANX,SAQE,MAAC,KAAD,CAAO,OAAP;AAAe,QAAA,KAAK,EAAE;AAAEH,UAAAA,UAAU,EAAE;AAAd;AAAtB,SACE;AACE,QAAA,KAAK,EAAE;AACLJ,UAAAA,SAAS,EAAE,QADN;AAELQ,UAAAA,UAAU,EAAE,EAFP;AAGLP,UAAAA,WAAW,EAAE,EAHR;AAILC,UAAAA,YAAY,EAAE,EAJT;AAKLO,UAAAA,aAAa,EAAE;AALV;AADT,SASE,MAAC,MAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,WAAW,EAAC,8BAFd;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAHT;AAIE,QAAA,OAAO,EAAE,KAAK3C,KAAL,CAAWd,SAJtB;AAKE,QAAA,cAAc,EAAE,KAAK0D,kBALvB;AAME,QAAA,cAAc,EAAE9D,CAAC,CAAC+D,QAAF,CAAW,KAAKC,kBAAhB,EAAoC,GAApC,EAAyC;AACvDC,UAAAA,OAAO,EAAE;AAD8C,SAAzC,CANlB;AASE,QAAA,OAAO,EAAE,KAAK/C,KAAL,CAAWb,OATtB;AAUE,QAAA,KAAK,EAAE,KAAKa,KAAL,CAAWZ;AAVpB,QATF,CADF,EAyBG,KAAK4D,iBAAL,EAzBH,EA2BE;AACE,QAAA,KAAK,EAAE;AACLf,UAAAA,SAAS,EAAE,QADN;AAELK,UAAAA,KAAK,EAAE,KAFF;AAGLC,UAAAA,MAAM,EAAE,KAHH;AAILU,UAAAA,MAAM,EAAE,MAJH;AAKLC,UAAAA,OAAO,EAAE;AALJ;AADT,SASE,MAAC,MAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,KAAK,EAAE;AAAEZ,UAAAA,KAAK,EAAE,KAAT;AAAgBa,UAAAA,QAAQ,EAAE;AAA1B,SAFT;AAGE,QAAA,OAAO,EAAE,KAAKC;AAHhB,+BATF,CA3BF,CARF,CADF,CADF;AA0DD;;;;EAnN4B5E,S;;AAsN/B,eAAea,gBAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Modal, Button, Search, Label, Icon } from 'semantic-ui-react'\nimport _ from 'lodash'\nimport { EventEmitter } from './util/EventEmitter'\nimport SearchBar from './invite/searchBar'\n\nconst initialState = { isLoading: false, results: [], value: '' }\n\nclass GroupLeaderModal extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      modalState: false,\n      isLoading: false,\n      results: [],\n      value: '',\n      allUsers: [],\n      selectedUser: [],\n      me: {},\n      groupToChange: { id: '', name: '' },\n    }\n\n    this.defineEventEmitterCallbacks()\n  }\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('openGroupLeaderModal', (openGroupLeaderModal) => {\n      this.setState({ modalState: openGroupLeaderModal })\n      console.log('1')\n    })\n\n    EventEmitter.subscribe('me', (me) => {\n      this.setState({ me })\n    })\n\n    EventEmitter.subscribe('allOtherStudentsInClass', (users) => {\n      this.setState({ allUsers: users })\n    })\n    //all find whre publisher is\n    // needs all other students in group\n\n    EventEmitter.subscribe('leaderNeedsChange', (groupToChange) => {\n      this.setState({ groupToChange })\n      console.log('2')\n    })\n  }\n\n  formatAsResults = (user) => {\n    return {\n      title: user.firstName + ' ' + user.lastName,\n      id: user.id,\n      description: user.email,\n    }\n  }\n\n  handleInvite = () => {\n    EventEmitter.publish('openGroupLeaderModal', false)\n\n    if (_.isEmpty(this.state.selectedUser)) return\n    console.log(_.map(this.state.selectedUser, 'id'))\n    EventEmitter.publish('sendOutInvite', {\n      sender: this.state.me,\n      recepientIds: _.map(this.state.selectedUser, 'id'),\n      group: this.state.currentGroup,\n    })\n\n    this.setState({ value: '', selectedUser: [], modalState: false })\n  }\n\n  //needs to change to handleLeaderChange\n\n  handleClose = () => {\n    this.setState({ value: '', selectedUser: [], modalState: false })\n    EventEmitter.publish('openGroupLeaderModal', false)\n  }\n\n  handleResultSelect = (e, { result }) => {\n    const filtered = this.state.selectedUser.filter(\n      (user) => user.id !== result.id\n    )\n    filtered.push(result)\n    this.setState({\n      value: '',\n      selectedUser: filtered,\n    })\n  }\n\n  handleSearchChange = (e, { value }) => {\n    this.setState({ isLoading: true, value })\n\n    setTimeout(() => {\n      if (this.state.value.length < 1) return this.setState(initialState)\n\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n      const isMatch = (result) =>\n        re.test(result.title) || re.test(result.description)\n\n      this.setState({\n        isLoading: false,\n        results: _.filter(\n          this.state.allUsers.map(this.formatAsResults),\n          isMatch\n        ),\n      })\n    }, 300)\n  }\n\n  getSelectedLabels() {\n    // if (_.isEmpty(this.state.selectedUser)) {\n    //   return <></>\n    // }\n\n    // return (\n    //   <div\n    //     style={{\n    //       textAlign: 'left',\n    //       paddingLeft: 80,\n    //       paddingRight: 80,\n    //     }}\n    //   >\n    //     <Label>\n    //       {this.state.selectedUser.title}\n    //       <Icon\n    //         name=\"delete\"\n    //         onClick={() => this.removeSelected(this.state.selectedUser)}\n    //       />\n    //     </Label>\n    //   </div>\n    // )\n\n    if (_.isEmpty(this.state.selectedUser)) {\n      return <></>\n    }\n\n    return (\n      <div\n        style={{\n          textAlign: 'left',\n          paddingLeft: 80,\n          paddingRight: 80,\n        }}\n      >\n        {this.state.selectedUser.map((user) => (\n          <Label>\n            {user.title}\n            <Icon name=\"delete\" onClick={() => this.removeSelected(user)} />\n          </Label>\n        ))}\n      </div>\n    )\n  }\n\n  removeSelected = (user) => {\n    this.setState({\n      selectedUser: this.state.selectedUser.filter((u) => u.id !== user.id),\n      // selectedUser: {},\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal\n          style={{ borderless: 'true', width: '40%', height: '40%' }}\n          open={this.state.modalState}\n          onClose={this.handleClose}\n          closeOnDimmerClick={false}\n          closeOnEscape={false}\n          closeIcon\n        >\n          <Modal.Content style={{ borderless: 'true' }}>\n            <div\n              style={{\n                textAlign: 'center',\n                paddingTop: 80,\n                paddingLeft: 80,\n                paddingRight: 80,\n                paddingBottom: 20,\n              }}\n            >\n              <Search\n                fluid\n                placeholder=\"Choose a new group leader...\"\n                input={{ fluid: true }}\n                loading={this.state.isLoading}\n                onResultSelect={this.handleResultSelect}\n                onSearchChange={_.debounce(this.handleSearchChange, 500, {\n                  leading: true,\n                })}\n                results={this.state.results}\n                value={this.state.value}\n              />\n            </div>\n            {/* <SearchBar /> */}\n\n            {this.getSelectedLabels()}\n\n            <div\n              style={{\n                textAlign: 'center',\n                width: '70%',\n                height: '70%',\n                margin: 'auto',\n                padding: 30,\n              }}\n            >\n              <Button\n                color=\"teal\"\n                style={{ width: '50%', fontSize: '1vw' }}\n                onClick={this.handleInvite}\n              >\n                Change Group Leader\n              </Button>\n            </div>\n          </Modal.Content>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default GroupLeaderModal\n"]},"metadata":{},"sourceType":"module"}