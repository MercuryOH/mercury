{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport * as api from '../../util/mercuryService';\nimport StudentQueueView from './student/studentQueueView';\nimport TAQueueView from './ta/taQueueView';\n\nvar Queue = /*#__PURE__*/function (_Component) {\n  _inherits(Queue, _Component);\n\n  var _super = _createSuper(Queue);\n\n  function Queue(props) {\n    var _this;\n\n    _classCallCheck(this, Queue);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isDataLoaded: false,\n      me: {},\n      classData: [],\n      office: {}\n    };\n    return _this;\n  }\n\n  _createClass(Queue, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.courseId = Number(window.location.href.split('/')[4]);\n      var me = {};\n      var classData = {};\n      var office = {};\n      api.getMe().then(function (meData) {\n        me = meData;\n      }).then(function () {\n        return api.getClasses();\n      }).then(function (classPayload) {\n        classData = classPayload;\n      }).then(function () {\n        return api.getClass(_this2.courseId);\n      }).then(function (cclass) {\n        office = cclass.groups.find(function (group) {\n          return group.type === 'office';\n        });\n      }).then(function () {\n        return _this2.setState({\n          me: me,\n          classData: classData,\n          office: office,\n          isDataLoaded: true\n        });\n      });\n    }\n  }, {\n    key: \"getRoleForClass\",\n    value: function getRoleForClass() {\n      var _this3 = this;\n\n      var classData = this.state.classData;\n      var userRole = null;\n      classData.forEach(function (row) {\n        var id = row.id,\n            role = row.role;\n\n        if (_this3.courseId === Number(id)) {\n          userRole = role;\n        }\n      });\n      return userRole;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isDataLoaded = _this$state.isDataLoaded,\n          me = _this$state.me,\n          office = _this$state.office;\n\n      if (!isDataLoaded) {\n        return null;\n      }\n\n      if (this.getRoleForClass() === 'Student') {\n        return __jsx(StudentQueueView, {\n          me: me,\n          onJoin: this.props.onJoin,\n          office: office\n        });\n      }\n\n      return __jsx(TAQueueView, {\n        me: me,\n        onJoin: this.props.onJoin\n      });\n    }\n  }]);\n\n  return Queue;\n}(Component);\n\nexport default Queue;","map":null,"metadata":{},"sourceType":"module"}