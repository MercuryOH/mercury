{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport ScreenPublisher from './screenPublisher';\nimport { OTPublisher } from 'opentok-react';\nimport { Button } from 'semantic-ui-react';\nimport { EventEmitter } from './util/EventEmitter';\nexport default class Publisher extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onError\", err => {\n      this.setState({\n        error: `Failed to publish: ${err.message}`\n      });\n    });\n\n    this.state = {\n      error: null,\n      audio: true,\n      video: true\n    };\n    this.defineEventEmitterCallbacks();\n  }\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('disableVideo', () => {\n      this.setState({\n        video: false\n      });\n      EventEmitter.publish('disableVideoButton');\n    });\n    EventEmitter.subscribe('enableVideo', () => {\n      this.setState({\n        video: true\n      });\n      EventEmitter.publish('enableVideoButton');\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, this.state.error ? __jsx(\"div\", null, this.state.error) : null, __jsx(OTPublisher, {\n      properties: {\n        width: '13.57vw',\n        maxWidth: '13.57vw',\n        maxHeight: '8vh',\n        publishVideo: this.state.video\n      },\n      session: this.props.session,\n      onError: this.onError\n    }), __jsx(ScreenPublisher, {\n      style: {\n        width: '13.62vw',\n        maxWidth: '13.62vw',\n        height: '500px',\n        maxHeight: '16vh'\n      },\n      session: this.props.session\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/publisher.js"],"names":["React","Component","ScreenPublisher","OTPublisher","Button","EventEmitter","Publisher","constructor","props","err","setState","error","message","state","audio","video","defineEventEmitterCallbacks","subscribe","publish","render","width","maxWidth","maxHeight","publishVideo","session","onError","height"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,eAAe,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAC/CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,qCAsBRC,GAAD,IAAS;AACjB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAG,sBAAqBF,GAAG,CAACG,OAAQ;AAA3C,OAAd;AACD,KAxBkB;;AAGjB,SAAKC,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,IADI;AAEXG,MAAAA,KAAK,EAAE,IAFI;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKA,SAAKC,2BAAL;AACD;;AAEDA,EAAAA,2BAA2B,GAAG;AAC5BX,IAAAA,YAAY,CAACY,SAAb,CAAuB,cAAvB,EAAuC,MAAM;AAC3C,WAAKP,QAAL,CAAc;AAAEK,QAAAA,KAAK,EAAE;AAAT,OAAd;AACAV,MAAAA,YAAY,CAACa,OAAb,CAAqB,oBAArB;AACD,KAHD;AAIAb,IAAAA,YAAY,CAACY,SAAb,CAAuB,aAAvB,EAAsC,MAAM;AAC1C,WAAKP,QAAL,CAAc;AAAEK,QAAAA,KAAK,EAAE;AAAT,OAAd;AACAV,MAAAA,YAAY,CAACa,OAAb,CAAqB,mBAArB;AACD,KAHD;AAID;;AAMDC,EAAAA,MAAM,GAAG;AACP,WACE,mBACG,KAAKN,KAAL,CAAWF,KAAX,GAAmB,mBAAM,KAAKE,KAAL,CAAWF,KAAjB,CAAnB,GAAmD,IADtD,EAEE,MAAC,WAAD;AACE,MAAA,UAAU,EAAE;AACVS,QAAAA,KAAK,EAAE,SADG;AAEVC,QAAAA,QAAQ,EAAE,SAFA;AAGVC,QAAAA,SAAS,EAAE,KAHD;AAIVC,QAAAA,YAAY,EAAE,KAAKV,KAAL,CAAWE;AAJf,OADd;AAOE,MAAA,OAAO,EAAI,KAAKP,KAAL,CAAWgB,OAPxB;AAQE,MAAA,OAAO,EAAE,KAAKC;AARhB,MAFF,EAYE,MAAC,eAAD;AACA,MAAA,KAAK,EAAI;AACPL,QAAAA,KAAK,EAAE,SADA;AAEPC,QAAAA,QAAQ,EAAE,SAFH;AAGPK,QAAAA,MAAM,EAAE,OAHD;AAIPJ,QAAAA,SAAS,EAAE;AAJJ,OADT;AAOA,MAAA,OAAO,EAAI,KAAKd,KAAL,CAAWgB;AAPtB,MAZF,CADF;AAuBD;;AAnD8C","sourcesContent":["import React, { Component } from 'react'\nimport ScreenPublisher from './screenPublisher'\nimport { OTPublisher } from 'opentok-react'\nimport { Button } from 'semantic-ui-react'\nimport { EventEmitter } from './util/EventEmitter'\n\nexport default class Publisher extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      audio: true,\n      video: true,\n    };\n    this.defineEventEmitterCallbacks()\n  }\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('disableVideo', () => {\n      this.setState({ video: false })\n      EventEmitter.publish('disableVideoButton')\n    })\n    EventEmitter.subscribe('enableVideo', () => {\n      this.setState({ video: true })\n      EventEmitter.publish('enableVideoButton')\n    })\n  }\n\n  onError = (err) => {\n    this.setState({ error: `Failed to publish: ${err.message}` });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.error ? <div>{this.state.error}</div> : null}\n        <OTPublisher\n          properties={{\n            width: '13.57vw',\n            maxWidth: '13.57vw',\n            maxHeight: '8vh',\n            publishVideo: this.state.video\n          }}\n          session = {this.props.session}\n          onError={this.onError}\n        />\n        <ScreenPublisher\n        style = {{\n          width: '13.62vw',\n          maxWidth: '13.62vw',\n          height: '500px',\n          maxHeight: '16vh'\n        }}\n        session = {this.props.session}/>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}