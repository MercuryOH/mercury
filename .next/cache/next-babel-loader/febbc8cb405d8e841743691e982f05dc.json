{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport Layout from '../../components/layout';\nimport { Button, Accordion, List } from 'semantic-ui-react';\nimport { AuthRequired } from '../../components/authProvider';\nimport Queue from '../../components/queue/queue';\nimport * as api from '../../util/mercuryService';\nimport CreateGroupModal from '../../components/createGroupModal';\nvar Vonage = dynamic(_c = function _c() {\n  return import('../../components/vonage');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../components/vonage')];\n    },\n    modules: ['../../components/vonage']\n  }\n});\n_c2 = Vonage;\n\nfunction ClassPage() {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState('bs'),\n      currGroup = _useState[0],\n      setCurrGroup = _useState[1];\n\n  var _useState2 = useState([]),\n      classUsers = _useState2[0],\n      setClassUsers = _useState2[1];\n\n  var _useState3 = useState([]),\n      groups = _useState3[0],\n      setGroups = _useState3[1];\n\n  var _useState4 = useState([]),\n      classes = _useState4[0],\n      setClasses = _useState4[1];\n\n  var _useState5 = useState({\n    id: '',\n    name: 'bob',\n    Groups: []\n  }),\n      currentClass = _useState5[0],\n      setCurrentClass = _useState5[1];\n\n  var _useState6 = useState(null),\n      vonageCred = _useState6[0],\n      setVonageCred = _useState6[1];\n\n  var classId = router.query.classId;\n\n  var fetchCurrentClass = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var test;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              test = api.getClassNG(classId);\n\n              if (!(test === null)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 4;\n              return router.push('/login');\n\n            case 4:\n              _context.next = 7;\n              break;\n\n            case 6:\n              test.then(function (currentClass) {\n                return setCurrentClass(currentClass);\n              })[\"catch\"](console.error);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchCurrentClass() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var checkUser = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var inclass, classUsersList;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              inclass = \"\";\n              classUsersList = api.getClassUsers(classId);\n              classUsersList.then(function (classUsers) {\n                return setClassUsers(classUsers);\n              })[\"catch\"](console.error);\n              console.log(api.getMe().id);\n              /*Array.from(classUsersList).forEach((c) => {\n                if (c.UserId === api.getMe().id){\n                  inclass = \"true\"\n                }\n              }\n              )\n              if (inclass === \"\"){\n                await router.push('/calendar')\n              }*/\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function checkUser() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (!classId) return;\n    fetchCurrentClass();\n    checkUser();\n  }, [classId]);\n  useEffect(function () {\n    api.getClasses().then(function (classes) {\n      return setClasses(classes);\n    })[\"catch\"](console.error);\n  }, []);\n\n  var handleBack = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return router.push('/calendar');\n\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleBack() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleSelectGroup = function handleSelectGroup(group) {\n    api.postGroupToken(classId, group.id).then(function (_ref4) {\n      var token = _ref4.token;\n      setVonageCred(null);\n      setVonageCred({\n        sessionId: group.sessionId,\n        token: token\n      });\n    })[\"catch\"](console.error);\n  };\n\n  function getRole() {\n    var userRole = null;\n    classes.forEach(function (row) {\n      var id = row.id,\n          role = row.role;\n\n      if (currentClass.id === Number(id)) {\n        userRole = role;\n      }\n    });\n    return userRole;\n  }\n\n  function getButtonToDisplay() {\n    if (getRole() === null) {\n      return null;\n    }\n\n    if (getRole() === 'Student') {\n      return __jsx(CreateGroupModal, {\n        onCreate: handleCreateGroup\n      });\n    } else {\n      return __jsx(Button, {\n        color: \"teal\",\n        content: \"Modify Discussions\",\n        fluid: true,\n        style: {\n          fontSize: '1vw'\n        }\n      });\n    }\n  }\n\n  function showOffice() {\n    if (getRole() !== 'Student' && getRole() !== null) {\n      return __jsx(\"div\", {\n        style: {\n          paddingLeft: 20\n        }\n      }, __jsx(List, {\n        relaxed: true\n      }, currentClass.Groups.filter(function (group) {\n        return group.type === 'office';\n      }).map(function (group) {\n        return __jsx(List.Item, {\n          key: \"office\",\n          onClick: function onClick() {\n            handleSelectGroup(group);\n            changeColor(group.id);\n          },\n          style: currGroup == group.id && vonageCred !== null ? clickedGroupsStyle : unClickedGroupsStyle\n        }, __jsx(List.Icon, {\n          name: \"graduation cap\"\n        }), __jsx(List.Content, null, __jsx(List.Header, {\n          as: \"a\"\n        }, \"TA Office\")));\n      })));\n    }\n\n    return null;\n  }\n\n  var handleCreateGroup = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(group) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return api.postGroup(classId, group.name, group.type);\n\n            case 2:\n              fetchCurrentClass();\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleCreateGroup(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var changeColor = function changeColor(groupId) {\n    setCurrGroup(groupId);\n  };\n\n  var unClickedGroupsStyle = {\n    fontSize: '.8vw',\n    textAlign: 'left',\n    width: '75%',\n    marginBottom: '2%',\n    minWidth: '41px'\n  };\n  var clickedGroupsStyle = {\n    fontSize: '.8vw',\n    textAlign: 'left',\n    width: '75%',\n    marginBottom: '2%',\n    minWidth: '41px',\n    background: '#e0e1e2',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#fff'\n  };\n  return __jsx(Layout, {\n    left: __jsx(\"div\", {\n      style: {\n        height: '100%',\n        marginLeft: '2.5%'\n      }\n    }, __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 12,\n        width: '100%'\n      },\n      fluid: true\n    }, __jsx(Button, {\n      compact: true,\n      icon: \"angle left\",\n      content: currentClass.name,\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'left',\n        width: '75%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      onClick: handleBack\n    }), __jsx(Button, {\n      compact: true,\n      icon: \"setting\",\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'center',\n        width: '15%',\n        marginBottom: '2%',\n        minWidth: '14px'\n      }\n    })), showOffice(), __jsx(Accordion, {\n      fluid: true,\n      exclusive: false,\n      defaultActiveIndex: [0, 1],\n      style: {\n        fontSize: '1vw',\n        textAlign: 'left',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      panels: [{\n        key: 'discussions',\n        title: 'Discussions',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20\n            }\n          }, __jsx(List, {\n            relaxed: true\n          }, currentClass.Groups.filter(function (group) {\n            return group.type === 'discussion';\n          }).map(function (group) {\n            return __jsx(List.Item, {\n              key: \"discussion_\".concat(group.id),\n              onClick: function onClick() {\n                handleSelectGroup(group);\n                changeColor(group.id);\n              },\n              style: currGroup == group.id && vonageCred !== null ? clickedGroupsStyle : unClickedGroupsStyle\n            }, __jsx(List.Icon, {\n              name: \"sound\"\n            }), __jsx(List.Content, null, __jsx(List.Header, {\n              as: \"a\"\n            }, group.name)));\n          })))\n        }\n      }, {\n        key: 'private-groups',\n        title: 'Private Groups',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20\n            }\n          }, __jsx(List, {\n            relaxed: true\n          }, currentClass.Groups.filter(function (group) {\n            return group.type === 'group';\n          }).map(function (group) {\n            return __jsx(List.Item, {\n              key: \"private_group_\".concat(group.id),\n              onClick: function onClick() {\n                handleSelectGroup(group);\n                changeColor(group.id);\n              },\n              style: currGroup == group.id && vonageCred !== null ? clickedGroupsStyle : unClickedGroupsStyle\n            }, __jsx(List.Icon, {\n              name: \"lock\"\n            }), __jsx(List.Content, null, __jsx(List.Header, {\n              as: \"a\"\n            }, group.name)));\n          })))\n        }\n      }]\n    }), __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14\n      }\n    }, getButtonToDisplay())),\n    right: __jsx(Queue, null)\n  }, vonageCred && __jsx(Vonage, {\n    sessionId: vonageCred.sessionId,\n    token: vonageCred.token,\n    onLeave: function onLeave() {\n      return setVonageCred(null);\n    }\n  }));\n}\n\n_s(ClassPage, \"bYsmQEJgtJ45+W7LNS/xXO6U3kQ=\", false, function () {\n  return [useRouter];\n});\n\n_c3 = ClassPage;\nexport default _c4 = AuthRequired(ClassPage);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Vonage$dynamic\");\n$RefreshReg$(_c2, \"Vonage\");\n$RefreshReg$(_c3, \"ClassPage\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/pages/classes/[classId].js"],"names":["React","useEffect","useState","useRouter","dynamic","Layout","Button","Accordion","List","AuthRequired","Queue","api","CreateGroupModal","Vonage","ssr","ClassPage","router","currGroup","setCurrGroup","classUsers","setClassUsers","groups","setGroups","classes","setClasses","id","name","Groups","currentClass","setCurrentClass","vonageCred","setVonageCred","classId","query","fetchCurrentClass","test","getClassNG","push","then","console","error","checkUser","inclass","classUsersList","getClassUsers","log","getMe","getClasses","handleBack","handleSelectGroup","group","postGroupToken","token","sessionId","getRole","userRole","forEach","row","role","Number","getButtonToDisplay","handleCreateGroup","fontSize","showOffice","paddingLeft","filter","type","map","changeColor","clickedGroupsStyle","unClickedGroupsStyle","postGroup","groupId","textAlign","width","marginBottom","minWidth","background","borderRadius","borderWidth","borderColor","height","marginLeft","key","title","content","position","bottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport dynamic from 'next/dynamic'\nimport Layout from '../../components/layout'\nimport { Button, Accordion, List } from 'semantic-ui-react'\nimport { AuthRequired } from '../../components/authProvider'\nimport Queue from '../../components/queue/queue'\nimport * as api from '../../util/mercuryService'\nimport CreateGroupModal from '../../components/createGroupModal'\n\nconst Vonage = dynamic(() => import('../../components/vonage'), {\n  ssr: false,\n})\n\nfunction ClassPage() {\n  const router = useRouter()\n  const [currGroup, setCurrGroup] = useState('bs')\n  const [classUsers, setClassUsers] = useState([])\n  const [groups, setGroups] = useState([])\n  const [classes, setClasses] = useState([])\n  const [currentClass, setCurrentClass] = useState({\n    id: '',\n    name: 'bob',\n    Groups: [],\n  })\n  const [vonageCred, setVonageCred] = useState(null)\n  const { classId } = router.query\n\n  const fetchCurrentClass = async () => {\n    var test = api.getClassNG(classId)\n    if (test === null){\n      await router.push('/login')\n    }\n    else {\n      test.then((currentClass) => setCurrentClass(currentClass)).catch(console.error)\n      }\n    }\n\n    const checkUser = async () => {\n      var inclass = \"\"\n      var classUsersList = api.getClassUsers(classId)\n      classUsersList.then((classUsers) => setClassUsers(classUsers)).catch(console.error)\n      console.log(api.getMe().id)\n      /*Array.from(classUsersList).forEach((c) => {\n        if (c.UserId === api.getMe().id){\n          inclass = \"true\"\n        }\n      }\n    )\n      if (inclass === \"\"){\n        await router.push('/calendar')\n      }*/\n    }\n\n  useEffect(() => {\n    if (!classId) return\n    fetchCurrentClass()\n    checkUser()\n  }, [classId])\n\n  useEffect(() => {\n    api\n      .getClasses()\n      .then((classes) => setClasses(classes))\n      .catch(console.error)\n  }, [])\n\n  const handleBack = async () => {\n    await router.push('/calendar')\n  }\n\n  const handleSelectGroup = (group) => {\n    api\n      .postGroupToken(classId, group.id)\n      .then(({ token }) => {\n        setVonageCred(null)\n        setVonageCred({ sessionId: group.sessionId, token })\n      })\n      .catch(console.error)\n  }\n\n  function getRole() {\n    let userRole = null\n\n    classes.forEach((row) => {\n      let { id, role } = row\n      if (currentClass.id === Number(id)) {\n        userRole = role\n      }\n    })\n\n    return userRole\n  }\n\n  function getButtonToDisplay() {\n    if (getRole() === null) {\n      return null\n    }\n\n    if (getRole() === 'Student') {\n      return <CreateGroupModal onCreate={handleCreateGroup} />\n    } else {\n      return (\n        <Button\n          color=\"teal\"\n          content=\"Modify Discussions\"\n          fluid\n          style={{ fontSize: '1vw' }}\n        />\n      )\n    }\n  }\n\n  function showOffice() {\n    if (getRole() !== 'Student' && getRole() !== null) {\n      return (\n        <div style={{ paddingLeft: 20 }}>\n          <List relaxed>\n            {currentClass.Groups.filter((group) => group.type === 'office').map(\n              (group) => (\n                <List.Item\n                  key={`office`}\n                  onClick={() => {\n                    handleSelectGroup(group)\n                    changeColor(group.id)\n                  }}\n                  style={\n                    currGroup == group.id && vonageCred !== null\n                      ? clickedGroupsStyle\n                      : unClickedGroupsStyle\n                  }\n                >\n                  <List.Icon name=\"graduation cap\" />\n                  <List.Content>\n                    <List.Header as=\"a\">TA Office</List.Header>\n                  </List.Content>\n                </List.Item>\n              )\n            )}\n          </List>\n        </div>\n      )\n    }\n    return null\n  }\n  const handleCreateGroup = async (group) => {\n    await api.postGroup(classId, group.name, group.type)\n\n    fetchCurrentClass()\n  }\n\n  const changeColor = (groupId) => {\n    setCurrGroup(groupId)\n  }\n\n  const unClickedGroupsStyle = {\n    fontSize: '.8vw',\n    textAlign: 'left',\n    width: '75%',\n    marginBottom: '2%',\n    minWidth: '41px',\n  }\n  const clickedGroupsStyle = {\n    fontSize: '.8vw',\n    textAlign: 'left',\n    width: '75%',\n    marginBottom: '2%',\n    minWidth: '41px',\n    background: '#e0e1e2',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#fff',\n  }\n\n  return (\n    <Layout\n      left={\n        <div style={{ height: '100%', marginLeft: '2.5%' }}>\n          <Button.Group\n            size=\"huge\"\n            style={{ marginBottom: 12, width: '100%' }}\n            fluid\n          >\n            <Button\n              compact\n              icon=\"angle left\"\n              content={currentClass.name}\n              style={{\n                fontSize: '1.5vw',\n                textAlign: 'left',\n                width: '75%',\n                marginBottom: '2%',\n                minWidth: '41px',\n              }}\n              onClick={handleBack}\n            />\n            <Button\n              compact\n              icon=\"setting\"\n              style={{\n                fontSize: '1.5vw',\n                textAlign: 'center',\n                width: '15%',\n                marginBottom: '2%',\n                minWidth: '14px',\n              }}\n            />\n          </Button.Group>\n          {showOffice()}\n          <Accordion\n            fluid\n            exclusive={false}\n            defaultActiveIndex={[0, 1]}\n            style={{\n              fontSize: '1vw',\n              textAlign: 'left',\n              width: '100%',\n              marginBottom: '2%',\n              minWidth: '41px',\n            }}\n            panels={[\n              {\n                key: 'discussions',\n                title: 'Discussions',\n                content: {\n                  content: (\n                    <div style={{ paddingLeft: 20 }}>\n                      <List relaxed>\n                        {currentClass.Groups.filter(\n                          (group) => group.type === 'discussion'\n                        ).map((group) => (\n                          <List.Item\n                            key={`discussion_${group.id}`}\n                            onClick={() => {\n                              handleSelectGroup(group)\n                              changeColor(group.id)\n                            }}\n                            style={\n                              currGroup == group.id && vonageCred !== null\n                                ? clickedGroupsStyle\n                                : unClickedGroupsStyle\n                            }\n                          >\n                            <List.Icon name=\"sound\" />\n                            <List.Content>\n                              <List.Header as=\"a\">{group.name}</List.Header>\n                            </List.Content>\n                          </List.Item>\n                        ))}\n                      </List>\n                    </div>\n                  ),\n                },\n              },\n              {\n                key: 'private-groups',\n                title: 'Private Groups',\n                content: {\n                  content: (\n                    <div style={{ paddingLeft: 20 }}>\n                      <List relaxed>\n                        {currentClass.Groups.filter(\n                          (group) => group.type === 'group'\n                        ).map((group) => (\n                          <List.Item\n                            key={`private_group_${group.id}`}\n                            onClick={() => {\n                              handleSelectGroup(group)\n                              changeColor(group.id)\n                            }}\n                            style={\n                              currGroup == group.id && vonageCred !== null\n                                ? clickedGroupsStyle\n                                : unClickedGroupsStyle\n                            }\n                          >\n                            <List.Icon name=\"lock\" />\n                            <List.Content>\n                              <List.Header as=\"a\">{group.name}</List.Header>\n                            </List.Content>\n                          </List.Item>\n                        ))}\n                      </List>\n                    </div>\n                  ),\n                },\n              },\n            ]}\n          />\n          <div\n            style={{\n              position: 'absolute',\n              width: 'calc(100% - 38px)',\n              bottom: 14,\n            }}\n          >\n            {getButtonToDisplay()}\n          </div>\n        </div>\n      }\n      right={<Queue />}\n    >\n      {vonageCred && (\n        <Vonage\n          sessionId={vonageCred.sessionId}\n          token={vonageCred.token}\n          onLeave={() => setVonageCred(null)}\n        />\n      )}\n    </Layout>\n  )\n}\n\nexport default AuthRequired(ClassPage)\n"]},"metadata":{},"sourceType":"module"}