{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport Layout from '../../components/layout';\nimport { Button, Accordion, List, Icon } from 'semantic-ui-react';\nimport { AuthRequired } from '../../components/authProvider';\nimport Queue from '../../components/queue/queue';\nimport * as api from '../../util/mercuryService';\nimport CreateGroupModal from '../../components/createGroupModal';\nimport StudentInviteModal from '../../components/invite/studentInviteModal';\nimport { EventEmitter } from '../../components/util/EventEmitter';\nimport FeedbackModal from '../../components/feedbackModal';\nimport StudentWebSocketClient from '../../util/studentWebSocket';\nimport TAWebSocketClient from '../../util/taWebSocket';\nimport ReceiveInviteModal from '../../components/invite/receiveInviteModal';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport GroupJoinRequestModal from '../../components/invite/groupJoinRequestModal';\nimport WaitingForRequestApprovalModal from '../../components/invite/WaitingForRequestApprovalModal';\nconst ScreenContainer = dynamic(() => import('../../components/screenContainer'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/screenContainer')],\n    modules: ['../../components/screenContainer']\n  }\n});\nconst CreateDiscussionModal = dynamic(() => import('../../components/createDiscussionModal'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/createDiscussionModal')],\n    modules: ['../../components/createDiscussionModal']\n  }\n});\n\nclass ClassPage extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"leaveGroup\", () => {\n      EventEmitter.publish('userLeaveGroup', this.state.currentGroup.id);\n      this.setState({\n        vonageCred: null,\n        currentGroup: {\n          id: '',\n          name: ''\n        },\n        withTa: false\n      });\n      EventEmitter.publish('currentGroupChange', {\n        id: '',\n        name: ''\n      });\n      EventEmitter.publish('callOver', this.classId);\n    });\n\n    _defineProperty(this, \"fetchCurrentClass\", () => {\n      api.getClass(this.classId).then(c => {\n        const userRole = c.users.find(u => u.id === this.user.id);\n        if (!userRole) this.props.router.push('/calendar');\n        this.setState({\n          currentClass: _objectSpread(_objectSpread({}, c), {}, {\n            role: userRole.role\n          })\n        });\n      }).catch(console.error);\n    });\n\n    _defineProperty(this, \"handleBack\", async () => {\n      await this.props.router.push('/calendar');\n    });\n\n    _defineProperty(this, \"handleSelectGroup\", async group => {\n      const {\n        role\n      } = this.state.currentClass;\n\n      if (group.type === 'office' || role === 'Professor' || group.type === 'discussion') {\n        // you are popped off the waiting queue or you are a TA\n        this.joinGroup(group);\n        return;\n      }\n      /**\r\n       * First, check if you are the leader of the group\r\n       */\n\n\n      const currGroup = await api.getGroupByID(this.classId, group.id);\n      const {\n        UserId\n      } = currGroup;\n      const {\n        id\n      } = this.user;\n\n      if (UserId === id) {\n        // you are the leader of the group, no need for authentication\n        this.joinGroup(group);\n      } else {\n        /**\r\n         * Ping group leader to let you into the group\r\n         */\n        EventEmitter.publish('activateWaitingForRequestApprovalModal', group);\n        EventEmitter.publish('requestJoinGroup', {\n          userId: id,\n          group: group\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleCreateGroup\", async group => {\n      const groupData = await api.postGroup(this.classId, group.name, group.type, this.user.id);\n      this.fetchCurrentClass();\n      EventEmitter.publish('classGroupSetChanged', this.classId);\n      await this.handleSelectGroup(groupData);\n    });\n\n    this.state = {\n      withTa: false,\n      clicked: 'none',\n      currentGroup: {\n        id: '',\n        name: ''\n      },\n      currentClass: {\n        id: '',\n        name: '',\n        groups: [],\n        users: [],\n        role: 'Student'\n      },\n      vonageCred: null,\n      isMounted: false\n    };\n    this.defineEventEmitterCallbacks();\n  }\n\n  joinGroup(group) {\n    api.postGroupToken(this.classId, group.id).then(({\n      token\n    }) => {\n      if (this.state.currentGroup.id != '') {\n        //the user is currently in a call, leave the call first\n        this.leaveGroup();\n      }\n\n      this.setState({\n        vonageCred: {\n          sessionId: group.sessionId,\n          token\n        }\n      });\n      this.setState({\n        currentGroup: group\n      });\n      EventEmitter.publish('userJoinGroup', group.id);\n      EventEmitter.publish('currentGroupChange', group);\n    }).catch(console.error);\n  }\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('clearLeftSide', () => {\n      this.setState({\n        withTa: true\n      });\n    });\n    EventEmitter.subscribe('joinPrivateGroupOnApproval', group => {\n      EventEmitter.publish('removeWaitingForRequestApprovalModal');\n      this.joinGroup(group);\n    });\n    EventEmitter.subscribe('notifyJoinRequestDeclined', group => {\n      NotificationManager.info(`Your Request To Join ${group.name} Was Declined`);\n      EventEmitter.publish('removeWaitingForRequestApprovalModal');\n    });\n    EventEmitter.subscribe('fetchGroups', () => {\n      this.fetchCurrentClass();\n    });\n  }\n\n  componentDidMount() {\n    const {\n      classId\n    } = this.props.router.query;\n    if (!classId) return;\n    this.classId = Number(classId);\n    api.getMe().then(meData => {\n      this.user = meData;\n    }).then(() => api.getClass(this.classId)).then(c => {\n      const userRole = c.users.find(u => u.id === this.user.id);\n      if (!userRole) this.props.router.push('/calendar');\n      const {\n        role\n      } = userRole;\n      /**\r\n       * Start the appropriate web socket handler depending on the user role\r\n       */\n\n      if (role === 'Student') {\n        /**\r\n         * Start student web socket handler\r\n         */\n        new StudentWebSocketClient().start({\n          me: this.user,\n          courseId: this.classId\n        });\n      } else {\n        /**\r\n         * Start TA web socket handler\r\n         */\n        new TAWebSocketClient().start({\n          me: this.user,\n          courseId: this.classId,\n          onJoin: this.handleSelectGroup\n        });\n      }\n\n      this.setState({\n        currentClass: _objectSpread(_objectSpread({}, c), {}, {\n          role: userRole.role\n        }),\n        isMounted: true\n      });\n      EventEmitter.publish('allOtherStudentsInClass', this.state.currentClass.users.filter(user => user.id !== this.user.id && user.role === 'Student'));\n      EventEmitter.publish('me', this.user);\n    }).catch(console.error);\n  }\n\n  getButtonToDisplay() {\n    return this.state.currentClass.role === 'Student' ? __jsx(CreateGroupModal, {\n      onCreate: this.handleCreateGroup\n    }) : this.state.clicked === 'none' ? __jsx(Button, {\n      color: \"teal\",\n      content: \"Modify Discussions\",\n      fluid: true,\n      style: {\n        fontSize: '1vw'\n      },\n      onClick: () => {\n        this.setState({\n          clicked: 'inline'\n        });\n      }\n    }) : __jsx(React.Fragment, null, __jsx(CreateDiscussionModal, {\n      id: \"createDiscussionModal\",\n      onCreate: this.handleCreateGroup\n    }), __jsx(Button, {\n      color: \"red\",\n      content: \"Done\",\n      fluid: true,\n      style: {\n        fontSize: '1vw',\n        marginTop: '2%'\n      },\n      onClick: () => {\n        this.setState({\n          clicked: 'none'\n        });\n      }\n    }));\n  }\n\n  getDeleteButton(group) {\n    return __jsx(Button, {\n      id: `deletebutton${group.id}`,\n      compact: true,\n      icon: true,\n      size: \"mini\",\n      floated: \"right\",\n      style: {\n        display: `${this.state.clicked}`,\n        fontSize: '.6vw',\n        textAlign: 'center',\n        width: '10%',\n        marginBottom: '2%',\n        minWidth: '10px',\n        backgroundColor: 'transparent'\n      },\n      onClick: () => api.deleteGroup(this.classId, group.id).then(() => {\n        this.fetchCurrentClass();\n        EventEmitter.publish('classGroupSetChanged', this.classId);\n      })\n    }, __jsx(Icon, {\n      name: \"delete\",\n      color: \"red\"\n    }));\n  }\n\n  showInviteButton(group) {\n    const plusIcon = __jsx(List.Icon, {\n      name: \"user plus\",\n      onClick: () => {\n        EventEmitter.publish('openInviteModal', true);\n      }\n    });\n\n    const noPlusIcon = __jsx(\"div\", null);\n\n    return this.state.currentGroup.id == group.id && this.state.vonageCred !== null ? plusIcon : noPlusIcon;\n  }\n\n  getListItemStyle(group) {\n    const unClickedGroupsStyle = {\n      fontSize: '.8vw',\n      textAlign: 'left',\n      width: '80%',\n      marginBottom: '2%',\n      minWidth: '41px',\n      display: 'inline-block'\n    };\n    const clickedGroupsStyle = {\n      fontSize: '.8vw',\n      textAlign: 'left',\n      width: '80%',\n      marginBottom: '2%',\n      minWidth: '41px',\n      background: '#e0e1e2',\n      borderRadius: 10,\n      borderWidth: 1,\n      borderColor: '#fff',\n      display: 'inline-block'\n    };\n    return this.state.currentGroup.id == group.id && this.state.vonageCred !== null ? clickedGroupsStyle : unClickedGroupsStyle;\n  }\n\n  showOffice() {\n    return (this.state.currentClass.role !== 'Student' || this.state.currentGroup.type === 'office') && __jsx(\"div\", {\n      style: {\n        paddingLeft: 20\n      }\n    }, __jsx(List, {\n      relaxed: true,\n      selection: true,\n      verticalAlign: \"middle\"\n    }, this.state.currentClass.groups.filter(group => group.type === 'office').map(group => __jsx(List.Item, {\n      key: `office`,\n      onClick: () => {\n        if (this.state.currentGroup.id !== group.id) {\n          this.handleSelectGroup(group);\n        }\n      },\n      style: this.getListItemStyle(group)\n    }, __jsx(List.Icon, {\n      name: \"graduation cap\"\n    }), __jsx(List.Content, null, __jsx(List.Header, {\n      as: \"a\"\n    }, \"TA Office\")), this.showInviteButton(group)))));\n  }\n\n  leftDisplay() {\n    return this.state.withTa === false ? __jsx(\"div\", {\n      style: {\n        height: '100%',\n        marginLeft: '2.5%'\n      }\n    }, __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 12,\n        width: '100%'\n      },\n      fluid: true\n    }, __jsx(Button, {\n      compact: true,\n      icon: \"angle left\",\n      content: this.state.currentClass.name,\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'left',\n        width: '75%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      onClick: this.handleBack\n    })), this.showOffice(), __jsx(Accordion, {\n      fluid: true,\n      exclusive: false,\n      defaultActiveIndex: [0, 1],\n      style: {\n        fontSize: '1vw',\n        textAlign: 'left',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      panels: [{\n        key: 'discussions',\n        title: 'Discussions',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20,\n              height: 200,\n              overflow: 'auto'\n            }\n          }, __jsx(List, {\n            relaxed: true,\n            selection: true\n          }, this.state.currentClass.groups.filter(group => group.type === 'discussion').map(group => __jsx(React.Fragment, null, __jsx(List.Item, {\n            key: `discussion_${group.id}`,\n            onClick: () => {\n              if (this.state.currentGroup.id !== group.id) {\n                this.handleSelectGroup(group);\n              }\n            },\n            style: this.getListItemStyle(group)\n          }, __jsx(List.Icon, {\n            name: \"sound\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name)), this.showInviteButton(group)), this.getDeleteButton(group)))))\n        }\n      }, {\n        key: 'private-groups',\n        title: 'Private Groups',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20,\n              height: 200,\n              overflow: 'auto'\n            }\n          }, __jsx(List, {\n            relaxed: true,\n            selection: true\n          }, this.state.currentClass.groups.filter(group => group.type === 'group').map(group => __jsx(List.Item, {\n            key: `private_group_${group.id}`,\n            onClick: () => {\n              if (this.state.currentGroup.id !== group.id) {\n                this.handleSelectGroup(group);\n              }\n            },\n            style: this.getListItemStyle(group)\n          }, __jsx(List.Icon, {\n            name: \"lock\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name)), this.showInviteButton(group)))))\n        }\n      }]\n    }), __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14\n      }\n    }, this.getButtonToDisplay())) : __jsx(\"div\", null, \" \");\n  }\n\n  render() {\n    if (!this.state.isMounted) {\n      return null;\n    }\n\n    return __jsx(Layout, {\n      left: this.leftDisplay(),\n      right: __jsx(Queue, {\n        onJoin: this.handleSelectGroup\n      })\n    }, this.state.vonageCred && __jsx(ScreenContainer, {\n      style: {\n        width: '100%',\n        maxHeight: '75vh'\n      },\n      sessionId: this.state.vonageCred.sessionId,\n      token: this.state.vonageCred.token,\n      onLeave: this.leaveGroup\n    }), __jsx(StudentInviteModal, null), __jsx(FeedbackModal, null), __jsx(ReceiveInviteModal, {\n      onJoin: this.handleSelectGroup\n    }), __jsx(GroupJoinRequestModal, null), __jsx(WaitingForRequestApprovalModal, null), __jsx(NotificationContainer, null));\n  }\n\n}\n\nexport default AuthRequired(withRouter(ClassPage));","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/pages/classes/[classId].js"],"names":["React","Component","withRouter","dynamic","Layout","Button","Accordion","List","Icon","AuthRequired","Queue","api","CreateGroupModal","StudentInviteModal","EventEmitter","FeedbackModal","StudentWebSocketClient","TAWebSocketClient","ReceiveInviteModal","NotificationContainer","NotificationManager","GroupJoinRequestModal","WaitingForRequestApprovalModal","ScreenContainer","ssr","CreateDiscussionModal","ClassPage","constructor","props","publish","state","currentGroup","id","setState","vonageCred","name","withTa","classId","getClass","then","c","userRole","users","find","u","user","router","push","currentClass","role","catch","console","error","group","type","joinGroup","currGroup","getGroupByID","UserId","userId","groupData","postGroup","fetchCurrentClass","handleSelectGroup","clicked","groups","isMounted","defineEventEmitterCallbacks","postGroupToken","token","leaveGroup","sessionId","subscribe","info","componentDidMount","query","Number","getMe","meData","start","me","courseId","onJoin","filter","getButtonToDisplay","handleCreateGroup","fontSize","marginTop","getDeleteButton","display","textAlign","width","marginBottom","minWidth","backgroundColor","deleteGroup","showInviteButton","plusIcon","noPlusIcon","getListItemStyle","unClickedGroupsStyle","clickedGroupsStyle","background","borderRadius","borderWidth","borderColor","showOffice","paddingLeft","map","leftDisplay","height","marginLeft","handleBack","key","title","content","overflow","position","bottom","render","maxHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { withRouter } from 'next/router'\r\nimport dynamic from 'next/dynamic'\r\nimport Layout from '../../components/layout'\r\nimport { Button, Accordion, List, Icon } from 'semantic-ui-react'\r\nimport { AuthRequired } from '../../components/authProvider'\r\nimport Queue from '../../components/queue/queue'\r\nimport * as api from '../../util/mercuryService'\r\nimport CreateGroupModal from '../../components/createGroupModal'\r\nimport StudentInviteModal from '../../components/invite/studentInviteModal'\r\nimport { EventEmitter } from '../../components/util/EventEmitter'\r\nimport FeedbackModal from '../../components/feedbackModal'\r\nimport StudentWebSocketClient from '../../util/studentWebSocket'\r\nimport TAWebSocketClient from '../../util/taWebSocket'\r\nimport ReceiveInviteModal from '../../components/invite/receiveInviteModal'\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications'\r\nimport GroupJoinRequestModal from '../../components/invite/groupJoinRequestModal'\r\nimport WaitingForRequestApprovalModal from '../../components/invite/WaitingForRequestApprovalModal'\r\n\r\nconst ScreenContainer = dynamic(\r\n  () => import('../../components/screenContainer'),\r\n  {\r\n    ssr: false,\r\n  }\r\n)\r\n\r\nconst CreateDiscussionModal = dynamic(\r\n  () => import('../../components/createDiscussionModal'),\r\n  {\r\n    ssr: false,\r\n  }\r\n)\r\n\r\nclass ClassPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      withTa: false,\r\n      clicked: 'none',\r\n      currentGroup: { id: '', name: '' },\r\n      currentClass: {\r\n        id: '',\r\n        name: '',\r\n        groups: [],\r\n        users: [],\r\n        role: 'Student',\r\n      },\r\n      vonageCred: null,\r\n      isMounted: false,\r\n    }\r\n    this.defineEventEmitterCallbacks()\r\n  }\r\n\r\n  joinGroup(group) {\r\n    api\r\n      .postGroupToken(this.classId, group.id)\r\n      .then(({ token }) => {\r\n        if (this.state.currentGroup.id != '') {\r\n          //the user is currently in a call, leave the call first\r\n          this.leaveGroup()\r\n        }\r\n        this.setState({ vonageCred: { sessionId: group.sessionId, token } })\r\n        this.setState({ currentGroup: group })\r\n        EventEmitter.publish('userJoinGroup', group.id)\r\n        EventEmitter.publish('currentGroupChange', group)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n\r\n  leaveGroup = () => {\r\n    EventEmitter.publish('userLeaveGroup', this.state.currentGroup.id)\r\n    this.setState({\r\n      vonageCred: null,\r\n      currentGroup: { id: '', name: '' },\r\n      withTa: false,\r\n    })\r\n    EventEmitter.publish('currentGroupChange', { id: '', name: '' })\r\n    EventEmitter.publish('callOver', this.classId)\r\n  }\r\n\r\n  defineEventEmitterCallbacks() {\r\n    EventEmitter.subscribe('clearLeftSide', () => {\r\n      this.setState({ withTa: true })\r\n    })\r\n\r\n    EventEmitter.subscribe('joinPrivateGroupOnApproval', (group) => {\r\n      EventEmitter.publish('removeWaitingForRequestApprovalModal')\r\n      this.joinGroup(group)\r\n    })\r\n\r\n    EventEmitter.subscribe('notifyJoinRequestDeclined', (group) => {\r\n      NotificationManager.info(\r\n        `Your Request To Join ${group.name} Was Declined`\r\n      )\r\n      EventEmitter.publish('removeWaitingForRequestApprovalModal')\r\n    })\r\n\r\n    EventEmitter.subscribe('fetchGroups', () => {\r\n      this.fetchCurrentClass()\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { classId } = this.props.router.query\r\n    if (!classId) return\r\n    this.classId = Number(classId)\r\n\r\n    api\r\n      .getMe()\r\n      .then((meData) => {\r\n        this.user = meData\r\n      })\r\n\r\n      .then(() => api.getClass(this.classId))\r\n      .then((c) => {\r\n        const userRole = c.users.find((u) => u.id === this.user.id)\r\n        if (!userRole) this.props.router.push('/calendar')\r\n        const { role } = userRole\r\n\r\n        /**\r\n         * Start the appropriate web socket handler depending on the user role\r\n         */\r\n\r\n        if (role === 'Student') {\r\n          /**\r\n           * Start student web socket handler\r\n           */\r\n\r\n          new StudentWebSocketClient().start({\r\n            me: this.user,\r\n            courseId: this.classId,\r\n          })\r\n        } else {\r\n          /**\r\n           * Start TA web socket handler\r\n           */\r\n\r\n          new TAWebSocketClient().start({\r\n            me: this.user,\r\n            courseId: this.classId,\r\n            onJoin: this.handleSelectGroup,\r\n          })\r\n        }\r\n\r\n        this.setState({\r\n          currentClass: {\r\n            ...c,\r\n            role: userRole.role,\r\n          },\r\n          isMounted: true,\r\n        })\r\n\r\n        EventEmitter.publish(\r\n          'allOtherStudentsInClass',\r\n          this.state.currentClass.users.filter(\r\n            (user) => user.id !== this.user.id && user.role === 'Student'\r\n          )\r\n        )\r\n\r\n        EventEmitter.publish('me', this.user)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n\r\n  fetchCurrentClass = () => {\r\n    api\r\n      .getClass(this.classId)\r\n      .then((c) => {\r\n        const userRole = c.users.find((u) => u.id === this.user.id)\r\n        if (!userRole) this.props.router.push('/calendar')\r\n        this.setState({\r\n          currentClass: {\r\n            ...c,\r\n            role: userRole.role,\r\n          },\r\n        })\r\n      })\r\n      .catch(console.error)\r\n  }\r\n\r\n  handleBack = async () => {\r\n    await this.props.router.push('/calendar')\r\n  }\r\n\r\n  handleSelectGroup = async (group) => {\r\n    const { role } = this.state.currentClass\r\n\r\n    if (\r\n      group.type === 'office' ||\r\n      role === 'Professor' ||\r\n      group.type === 'discussion'\r\n    ) {\r\n      // you are popped off the waiting queue or you are a TA\r\n      this.joinGroup(group)\r\n      return\r\n    }\r\n\r\n    /**\r\n     * First, check if you are the leader of the group\r\n     */\r\n\r\n    const currGroup = await api.getGroupByID(this.classId, group.id)\r\n    const { UserId } = currGroup\r\n    const { id } = this.user\r\n\r\n    if (UserId === id) {\r\n      // you are the leader of the group, no need for authentication\r\n      this.joinGroup(group)\r\n    } else {\r\n      /**\r\n       * Ping group leader to let you into the group\r\n       */\r\n      EventEmitter.publish('activateWaitingForRequestApprovalModal', group)\r\n      EventEmitter.publish('requestJoinGroup', {\r\n        userId: id,\r\n        group: group,\r\n      })\r\n    }\r\n  }\r\n\r\n  getButtonToDisplay() {\r\n    return this.state.currentClass.role === 'Student' ? (\r\n      <CreateGroupModal onCreate={this.handleCreateGroup} />\r\n    ) : this.state.clicked === 'none' ? (\r\n      <Button\r\n        color=\"teal\"\r\n        content=\"Modify Discussions\"\r\n        fluid\r\n        style={{ fontSize: '1vw' }}\r\n        onClick={() => {\r\n          this.setState({ clicked: 'inline' })\r\n        }}\r\n      />\r\n    ) : (\r\n      <>\r\n        <CreateDiscussionModal\r\n          id=\"createDiscussionModal\"\r\n          onCreate={this.handleCreateGroup}\r\n        />\r\n        <Button\r\n          color=\"red\"\r\n          content=\"Done\"\r\n          fluid\r\n          style={{ fontSize: '1vw', marginTop: '2%' }}\r\n          onClick={() => {\r\n            this.setState({ clicked: 'none' })\r\n          }}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n\r\n  getDeleteButton(group) {\r\n    return (\r\n      <Button\r\n        id={`deletebutton${group.id}`}\r\n        compact\r\n        icon\r\n        size=\"mini\"\r\n        floated=\"right\"\r\n        style={{\r\n          display: `${this.state.clicked}`,\r\n          fontSize: '.6vw',\r\n          textAlign: 'center',\r\n          width: '10%',\r\n          marginBottom: '2%',\r\n          minWidth: '10px',\r\n          backgroundColor: 'transparent',\r\n        }}\r\n        onClick={() =>\r\n          api.deleteGroup(this.classId, group.id).then(() => {\r\n            this.fetchCurrentClass()\r\n            EventEmitter.publish('classGroupSetChanged', this.classId)\r\n          })\r\n        }\r\n      >\r\n        <Icon name=\"delete\" color=\"red\" />\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  handleCreateGroup = async (group) => {\r\n    const groupData = await api.postGroup(\r\n      this.classId,\r\n      group.name,\r\n      group.type,\r\n      this.user.id\r\n    )\r\n    this.fetchCurrentClass()\r\n    EventEmitter.publish('classGroupSetChanged', this.classId)\r\n    await this.handleSelectGroup(groupData)\r\n  }\r\n\r\n  showInviteButton(group) {\r\n    const plusIcon = (\r\n      <List.Icon\r\n        name=\"user plus\"\r\n        onClick={() => {\r\n          EventEmitter.publish('openInviteModal', true)\r\n        }}\r\n      />\r\n    )\r\n    const noPlusIcon = <div></div>\r\n\r\n    return this.state.currentGroup.id == group.id &&\r\n      this.state.vonageCred !== null\r\n      ? plusIcon\r\n      : noPlusIcon\r\n  }\r\n\r\n  getListItemStyle(group) {\r\n    const unClickedGroupsStyle = {\r\n      fontSize: '.8vw',\r\n      textAlign: 'left',\r\n      width: '80%',\r\n      marginBottom: '2%',\r\n      minWidth: '41px',\r\n      display: 'inline-block',\r\n    }\r\n\r\n    const clickedGroupsStyle = {\r\n      fontSize: '.8vw',\r\n      textAlign: 'left',\r\n      width: '80%',\r\n      marginBottom: '2%',\r\n      minWidth: '41px',\r\n      background: '#e0e1e2',\r\n      borderRadius: 10,\r\n      borderWidth: 1,\r\n      borderColor: '#fff',\r\n      display: 'inline-block',\r\n    }\r\n\r\n    return this.state.currentGroup.id == group.id &&\r\n      this.state.vonageCred !== null\r\n      ? clickedGroupsStyle\r\n      : unClickedGroupsStyle\r\n  }\r\n\r\n  showOffice() {\r\n    return (\r\n      (this.state.currentClass.role !== 'Student' ||\r\n        this.state.currentGroup.type === 'office') && (\r\n        <div style={{ paddingLeft: 20 }}>\r\n          <List relaxed selection verticalAlign=\"middle\">\r\n            {this.state.currentClass.groups\r\n              .filter((group) => group.type === 'office')\r\n              .map((group) => (\r\n                <List.Item\r\n                  key={`office`}\r\n                  onClick={() => {\r\n                    if (this.state.currentGroup.id !== group.id) {\r\n                      this.handleSelectGroup(group)\r\n                    }\r\n                  }}\r\n                  style={this.getListItemStyle(group)}\r\n                >\r\n                  <List.Icon name=\"graduation cap\" />\r\n                  <List.Content>\r\n                    <List.Header as=\"a\">TA Office</List.Header>\r\n                  </List.Content>\r\n                  {this.showInviteButton(group)}\r\n                </List.Item>\r\n              ))}\r\n          </List>\r\n        </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  leftDisplay() {\r\n    return this.state.withTa === false ? (\r\n      <div style={{ height: '100%', marginLeft: '2.5%' }}>\r\n        <Button.Group\r\n          size=\"huge\"\r\n          style={{ marginBottom: 12, width: '100%' }}\r\n          fluid\r\n        >\r\n          <Button\r\n            compact\r\n            icon=\"angle left\"\r\n            content={this.state.currentClass.name}\r\n            style={{\r\n              fontSize: '1.5vw',\r\n              textAlign: 'left',\r\n              width: '75%',\r\n              marginBottom: '2%',\r\n              minWidth: '41px',\r\n            }}\r\n            onClick={this.handleBack}\r\n          />\r\n          {/* <Button\r\n            compact\r\n            icon=\"setting\"\r\n            style={{\r\n              fontSize: '1.5vw',\r\n              textAlign: 'center',\r\n              width: '15%',\r\n              marginBottom: '2%',\r\n              minWidth: '14px',\r\n            }}\r\n          /> */}\r\n        </Button.Group>\r\n        {this.showOffice()}\r\n        <Accordion\r\n          fluid\r\n          exclusive={false}\r\n          defaultActiveIndex={[0, 1]}\r\n          style={{\r\n            fontSize: '1vw',\r\n            textAlign: 'left',\r\n            width: '100%',\r\n            marginBottom: '2%',\r\n            minWidth: '41px',\r\n          }}\r\n          panels={[\r\n            {\r\n              key: 'discussions',\r\n              title: 'Discussions',\r\n              content: {\r\n                content: (\r\n                  <div\r\n                    style={{ paddingLeft: 20, height: 200, overflow: 'auto' }}\r\n                  >\r\n                    <List relaxed selection>\r\n                      {this.state.currentClass.groups\r\n                        .filter((group) => group.type === 'discussion')\r\n                        .map((group) => (\r\n                          <>\r\n                            <List.Item\r\n                              key={`discussion_${group.id}`}\r\n                              onClick={() => {\r\n                                if (this.state.currentGroup.id !== group.id) {\r\n                                  this.handleSelectGroup(group)\r\n                                }\r\n                              }}\r\n                              style={this.getListItemStyle(group)}\r\n                            >\r\n                              <List.Icon name=\"sound\" />\r\n                              <List.Content>\r\n                                <List.Header as=\"a\">{group.name}</List.Header>\r\n                              </List.Content>\r\n                              {this.showInviteButton(group)}\r\n                            </List.Item>\r\n                            {this.getDeleteButton(group)}\r\n                          </>\r\n                        ))}\r\n                    </List>\r\n                  </div>\r\n                ),\r\n              },\r\n            },\r\n            {\r\n              key: 'private-groups',\r\n              title: 'Private Groups',\r\n              content: {\r\n                content: (\r\n                  <div\r\n                    style={{ paddingLeft: 20, height: 200, overflow: 'auto' }}\r\n                  >\r\n                    <List relaxed selection>\r\n                      {this.state.currentClass.groups\r\n                        .filter((group) => group.type === 'group')\r\n                        .map((group) => (\r\n                          <List.Item\r\n                            key={`private_group_${group.id}`}\r\n                            onClick={() => {\r\n                              if (this.state.currentGroup.id !== group.id) {\r\n                                this.handleSelectGroup(group)\r\n                              }\r\n                            }}\r\n                            style={this.getListItemStyle(group)}\r\n                          >\r\n                            <List.Icon name=\"lock\" />\r\n                            <List.Content>\r\n                              <List.Header as=\"a\">{group.name}</List.Header>\r\n                            </List.Content>\r\n                            {this.showInviteButton(group)}\r\n                          </List.Item>\r\n                        ))}\r\n                    </List>\r\n                  </div>\r\n                ),\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            width: 'calc(100% - 38px)',\r\n            bottom: 14,\r\n          }}\r\n        >\r\n          {this.getButtonToDisplay()}\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div> </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isMounted) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <Layout\r\n        left={this.leftDisplay()}\r\n        right={<Queue onJoin={this.handleSelectGroup} />}\r\n      >\r\n        {this.state.vonageCred && (\r\n          <ScreenContainer\r\n            style={{ width: '100%', maxHeight: '75vh' }}\r\n            sessionId={this.state.vonageCred.sessionId}\r\n            token={this.state.vonageCred.token}\r\n            onLeave={this.leaveGroup}\r\n          />\r\n        )}\r\n        <StudentInviteModal />\r\n        <FeedbackModal />\r\n        <ReceiveInviteModal onJoin={this.handleSelectGroup} />\r\n        <GroupJoinRequestModal />\r\n        <WaitingForRequestApprovalModal />\r\n        <NotificationContainer />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\nexport default AuthRequired(withRouter(ClassPage))\r\n"]},"metadata":{},"sourceType":"module"}