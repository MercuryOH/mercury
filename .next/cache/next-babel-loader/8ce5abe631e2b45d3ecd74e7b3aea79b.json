{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Publisher from './publisher';\nimport { EventEmitter } from './util/EventEmitter';\nimport { OTSession, OTPublisher, OTStreams, OTSubscriber, createSession } from 'opentok-react';\nimport { Button, List } from 'semantic-ui-react';\n\nvar ScreenContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(ScreenContainer, _React$Component);\n\n  var _super = _createSuper(ScreenContainer);\n\n  function ScreenContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ScreenContainer);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePublish\", function () {\n      console.log('Successfully published!');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubscribe\", function () {\n      console.log('Subscribed!');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSessionError\", function (error) {\n      console.error(error);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePublishError\", function (error) {\n      console.error(error);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubscribeError\", function (error) {\n      console.error(error);\n    });\n\n    _this.state = {\n      ssButton: true,\n      streams: [],\n      focusStream: {},\n      videoButton: true,\n      expand: false\n    };\n\n    _this.defineEventEmitterCallbacks();\n\n    _this.sessionEventHandlers = {\n      sessionConnected: function sessionConnected() {},\n      sessionDisconnected: function sessionDisconnected() {},\n      sessionReconnected: function sessionReconnected() {},\n      sessionReconnecting: function sessionReconnecting() {}\n    };\n    _this.publishEventHandlers = {\n      accessDenied: function accessDenied() {},\n      streamCreated: function streamCreated() {},\n      streamDestroyed: function streamDestroyed() {}\n    };\n    _this.subscribeEventHandlers = {\n      videoEnabled: function videoEnabled() {},\n      videoDisabled: function videoDisabled() {}\n    };\n    var _this$props = _this.props,\n        sessionId = _this$props.sessionId,\n        token = _this$props.token,\n        onLeave = _this$props.onLeave;\n    return _this;\n  }\n\n  _createClass(ScreenContainer, [{\n    key: \"defineEventEmitterCallbacks\",\n    value: function defineEventEmitterCallbacks() {\n      var _this2 = this;\n\n      EventEmitter.subscribe('disableVideoButton', function () {\n        _this2.setState({\n          videoButton: false\n        });\n      });\n      EventEmitter.subscribe('enableVideoButton', function () {\n        _this2.setState({\n          videoButton: true\n        });\n      });\n    }\n  }, {\n    key: \"getStreamToDisplay\",\n    value: function getStreamToDisplay() {\n      return this.state.expand === true ? __jsx(OTSubscriber, {\n        key: this.state.focusStream.id,\n        session: this.sessionHelper.session,\n        stream: this.state.focusStream,\n        properties: {\n          maxWidth: '75vw',\n          maxHeight: '75vh',\n          height: '85vh',\n          width: '48vw'\n        },\n        onSubscribe: this.handleSubscribe,\n        onError: this.handleSubscribeError\n      }) : null;\n    }\n  }, {\n    key: \"screenShareButton\",\n    value: function screenShareButton() {\n      var _this3 = this;\n\n      return this.state.ssButton === true ? __jsx(Button, {\n        onClick: function onClick() {\n          EventEmitter.publish('startScreenShare');\n          EventEmitter.publish('disableVideo');\n\n          _this3.setState({\n            ssButton: false\n          });\n        },\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        icon: \"tv\",\n        content: \"Share Screen\"\n      }) : __jsx(Button, {\n        onClick: function onClick() {\n          EventEmitter.publish('stopScreenShare');\n          EventEmitter.publish('enableVideo');\n\n          _this3.setState({\n            ssButton: true\n          });\n        },\n        icon: \"tv\",\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Stop Screen Share\"\n      });\n    }\n  }, {\n    key: \"videoStateButton\",\n    value: function videoStateButton() {\n      return this.state.videoButton === true ? __jsx(Button, {\n        onClick: function onClick() {\n          EventEmitter.publish('disableVideo');\n        },\n        icon: \"hide\",\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Disable video\"\n      }) : __jsx(Button, {\n        onClick: function onClick() {\n          EventEmitter.publish('enableVideo');\n        },\n        icon: \"eye\",\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Enable video\"\n      });\n    }\n  }, {\n    key: \"unexpandButton\",\n    value: function unexpandButton() {\n      var _this4 = this;\n\n      return this.state.expand === true ? __jsx(Button, {\n        onClick: function onClick() {\n          _this4.setState({\n            expand: false\n          });\n\n          console.log('ore');\n        },\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Unexpand video\"\n      }) : null;\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this5 = this;\n\n      var _this$props2 = this.props,\n          sessionId = _this$props2.sessionId,\n          token = _this$props2.token,\n          onLeave = _this$props2.onLeave;\n      this.sessionHelper = createSession({\n        apiKey: \"\".concat(process.env.NEXT_PUBLIC_VV_API_KEY),\n        sessionId: \"\".concat(sessionId),\n        token: \"\".concat(token),\n        onStreamsUpdated: function onStreamsUpdated(streams) {\n          _this5.setState({\n            streams: streams\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.sessionHelper.disconnect();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var _this$props3 = this.props,\n          sessionId = _this$props3.sessionId,\n          token = _this$props3.token,\n          onLeave = _this$props3.onLeave;\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        style: {\n          display: 'inline-flex',\n          width: '100%',\n          maxHeight: '86vh'\n        }\n      }, __jsx(\"div\", {\n        style: {\n          width: '78%',\n          maxHeight: '85vh',\n          overflow: 'auto'\n        }\n      }, this.getStreamToDisplay()), __jsx(\"div\", {\n        style: {\n          width: '22%',\n          maxHeight: '85vh',\n          overflow: 'auto',\n          height: '1000px'\n        }\n      }, __jsx(Publisher, {\n        style: {\n          width: '13.57vw',\n          maxWidth: '13.57vw',\n          marginBottom: '5px'\n        },\n        session: this.sessionHelper.session\n      }), this.state.streams.map(function (stream) {\n        return __jsx(React.Fragment, null, __jsx(Button, {\n          onClick: function onClick() {\n            _this6.setState({\n              focusStream: stream\n            });\n\n            _this6.setState({\n              expand: true\n            });\n          },\n          style: {\n            padding: '0px',\n            width: '100%',\n            maxHeight: '18vh',\n            margin: '0px'\n          }\n        }, __jsx(OTSubscriber, {\n          key: stream.id,\n          session: _this6.sessionHelper.session,\n          stream: stream,\n          properties: {\n            width: '100%',\n            height: '18vh',\n            maxHeight: '18vh',\n            margin: '0px'\n          },\n          onSubscribe: _this6.handleSubscribe,\n          onError: _this6.handleSubscribeError\n        })));\n      }))), this.videoStateButton(), this.unexpandButton(), this.screenShareButton(), __jsx(Button, {\n        onClick: onLeave,\n        color: \"red\",\n        icon: \"close\",\n        style: {\n          fontSize: '.8vw',\n          display: 'inline-flex'\n        },\n        content: \"Leave call\"\n      }));\n    }\n  }]);\n\n  return ScreenContainer;\n}(React.Component);\n\nScreenContainer.propTypes = {\n  sessionId: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  onLeave: PropTypes.func.isRequired\n};\nexport default ScreenContainer;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/screenContainer.js"],"names":["React","PropTypes","Publisher","EventEmitter","OTSession","OTPublisher","OTStreams","OTSubscriber","createSession","Button","List","ScreenContainer","props","console","log","error","state","ssButton","streams","focusStream","videoButton","expand","defineEventEmitterCallbacks","sessionEventHandlers","sessionConnected","sessionDisconnected","sessionReconnected","sessionReconnecting","publishEventHandlers","accessDenied","streamCreated","streamDestroyed","subscribeEventHandlers","videoEnabled","videoDisabled","sessionId","token","onLeave","subscribe","setState","id","sessionHelper","session","maxWidth","maxHeight","height","width","handleSubscribe","handleSubscribeError","publish","fontSize","display","apiKey","process","env","NEXT_PUBLIC_VV_API_KEY","onStreamsUpdated","disconnect","overflow","getStreamToDisplay","marginBottom","map","stream","padding","margin","videoStateButton","unexpandButton","screenShareButton","Component","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Publisher from './publisher'\nimport { EventEmitter } from './util/EventEmitter'\nimport { OTSession, OTPublisher, OTStreams, OTSubscriber, createSession } from 'opentok-react'\nimport { Button, List } from 'semantic-ui-react'\n\nclass ScreenContainer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      ssButton: true,\n      streams: [],\n      focusStream: {},\n      videoButton: true,\n      expand: false\n    }\n\n    this.defineEventEmitterCallbacks()\n\n    this.sessionEventHandlers = {\n      sessionConnected: () => {},\n      sessionDisconnected: () => {},\n      sessionReconnected: () => {},\n      sessionReconnecting: () => {},\n    }\n\n    this.publishEventHandlers = {\n      accessDenied: () => {},\n      streamCreated: () => {},\n      streamDestroyed: () => {},\n    }\n\n    this.subscribeEventHandlers = {\n      videoEnabled: () => {},\n      videoDisabled: () => {},\n    }\n\n    const { sessionId, token, onLeave } = this.props\n  }\n\n  handlePublish = () => {\n    console.log('Successfully published!')\n  }\n\n  handleSubscribe = () => {\n    console.log('Subscribed!')\n  }\n\n  handleSessionError = (error) => {\n    console.error(error)\n  }\n\n  handlePublishError = (error) => {\n    console.error(error)\n  }\n\n  handleSubscribeError = (error) => {\n    console.error(error)\n  }\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('disableVideoButton', () => {\n      this.setState({ videoButton: false })\n    })\n    EventEmitter.subscribe('enableVideoButton', () => {\n      this.setState({ videoButton: true })\n    })\n  }\n\n  getStreamToDisplay(){\n    return this.state.expand === true ? (\n      <OTSubscriber\n        key={this.state.focusStream.id}\n        session={this.sessionHelper.session}\n        stream={this.state.focusStream}\n        properties={{ maxWidth: '75vw', maxHeight: '75vh', height: '85vh', width: '48vw' }}\n        onSubscribe={this.handleSubscribe}\n        onError={this.handleSubscribeError}\n      />\n    ) : null\n  }\n\n  screenShareButton() {\n    return this.state.ssButton === true ? (\n      <Button\n        onClick = {() => {\n          EventEmitter.publish('startScreenShare')\n          EventEmitter.publish('disableVideo')\n          this.setState({ssButton: false})\n          }\n        }\n        style = {{fontSize: '.8vw', display: 'inline-flex'}}\n        icon = 'tv'\n        content = \"Share Screen\"\n      />\n    ) : (\n      <Button\n          onClick = {() => {\n              EventEmitter.publish('stopScreenShare')\n              EventEmitter.publish('enableVideo')\n              this.setState({ssButton: true})\n            }\n          }\n          icon = 'tv'\n          style = {{fontSize: '.8vw', display: 'inline-flex'}}\n          content = \"Stop Screen Share\"\n        />\n    )\n  }\n\n  videoStateButton() {\n    return this.state.videoButton === true ? (\n      <Button\n        onClick={() => {\n          EventEmitter.publish('disableVideo')\n        }}\n        icon='hide'\n        style = {{fontSize: '.8vw', display: 'inline-flex'}}\n        content=\"Disable video\"\n      />\n    ) : (\n      <Button\n        onClick={() => {\n          EventEmitter.publish('enableVideo')\n        }}\n        icon='eye'\n        style = {{fontSize: '.8vw', display: 'inline-flex'}}\n        content=\"Enable video\"\n      />\n    )\n  }\n\n  unexpandButton() {\n    return this.state.expand === true ? (\n      <Button\n        onClick = {() => {\n          this.setState({expand: false})\n          console.log('ore')}}\n        style = {{fontSize: '.8vw', display: 'inline-flex'}}\n        content=\"Unexpand video\"\n      />\n    ) : null\n  }\n\n  componentWillMount() {\n    const { sessionId, token, onLeave } = this.props\n    this.sessionHelper = createSession({\n      apiKey: `${process.env.NEXT_PUBLIC_VV_API_KEY}`,\n      sessionId: `${sessionId}`,\n      token: `${token}`,\n      onStreamsUpdated: streams => { this.setState({ streams }); }\n    });\n  }\n\n  componentWillUnmount() {\n    this.sessionHelper.disconnect();\n  }\n\n  render() {\n    const { sessionId, token, onLeave } = this.props\n    return (\n      <>\n      <div style = {{display: 'inline-flex', width: '100%', maxHeight: '86vh'}}>\n        <div style = {{ width: '78%', maxHeight: '85vh', overflow: 'auto'}}>\n          {this.getStreamToDisplay()}\n        </div>\n        <div style = {{width: '22%', maxHeight: '85vh', overflow: 'auto', height: '1000px'}}>\n          <Publisher style = {{width: '13.57vw', maxWidth: '13.57vw', marginBottom: '5px'}} session={this.sessionHelper.session}/>\n          {this.state.streams.map((stream) => (\n            <>\n            <Button\n            onClick = {() => {\n              this.setState({focusStream: stream})\n              this.setState({expand: true})\n            }}\n            style = {{padding: '0px', width: '100%', maxHeight: '18vh', margin: '0px'}}\n            >\n            <OTSubscriber\n              key={stream.id}\n              session={this.sessionHelper.session}\n              stream={stream}\n              properties={{ width: '100%', height: '18vh', maxHeight: '18vh', margin: '0px' }}\n              onSubscribe={this.handleSubscribe}\n              onError={this.handleSubscribeError}\n            />\n            </Button>\n            </>\n          ))}\n        </div>\n      </div>\n      {this.videoStateButton()}\n      {this.unexpandButton()}\n      {this.screenShareButton()}\n      <Button\n        onClick={onLeave}\n        color=\"red\"\n        icon=\"close\"\n        style = {{fontSize: '.8vw', display: 'inline-flex'}}\n        content=\"Leave call\"\n      />\n      </>\n    )\n  }\n}\n\n\nScreenContainer.propTypes = {\n  sessionId: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  onLeave: PropTypes.func.isRequired,\n}\n\nexport default ScreenContainer\n"]},"metadata":{},"sourceType":"module"}