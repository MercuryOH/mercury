{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport Layout from '../../components/layout';\nimport { Button, Accordion, List, Icon } from 'semantic-ui-react';\nimport { AuthRequired, useAuth } from '../../components/authProvider';\nimport Queue from '../../components/queue/queue';\nimport * as api from '../../util/mercuryService';\nimport CreateGroupModal from '../../components/createGroupModal';\nimport StudentInviteModal from '../../components/studentInviteModal';\nimport { EventEmitter } from '../../components/util/EventEmitter';\nconst CreateDiscussionModal = dynamic(() => import('../../components/createDiscussionModal'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/createDiscussionModal')],\n    modules: ['../../components/createDiscussionModal']\n  }\n});\nconst Vonage = dynamic(() => import('../../components/vonage'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/vonage')],\n    modules: ['../../components/vonage']\n  }\n});\n\nclass ClassPage extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"fetchCurrentClass\", () => {\n      api.getClass(this.classId).then(c => {\n        const userRole = c.users.find(u => u.id === this.user.id);\n        if (!userRole) this.props.router.push('/calendar');\n        this.setState({\n          currentClass: _objectSpread(_objectSpread({}, c), {}, {\n            role: userRole.role\n          })\n        });\n      }).catch(console.error);\n    });\n\n    _defineProperty(this, \"handleBack\", async () => {\n      await this.props.router.push('/calendar');\n    });\n\n    _defineProperty(this, \"handleSelectGroup\", group => {\n      api.postGroupToken(this.classId, group.id).then(({\n        token\n      }) => {\n        this.setState({\n          vonageCred: null\n        });\n        this.setState({\n          vonageCred: {\n            sessionId: group.sessionId,\n            token\n          }\n        });\n      }).catch(console.error);\n    });\n\n    _defineProperty(this, \"handleJoinTA\", group => {\n      this.handleSelectGroup(group);\n      this.setState({\n        currentGroup: group\n      });\n    });\n\n    _defineProperty(this, \"handleCreateGroup\", async group => {\n      await api.postGroup(this.classId, group.name, group.type).then(group => {\n        this.fetchCurrentClass();\n        this.handleSelectGroup(group);\n        this.setState({\n          currentGroup: group\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleInvite\", () => {\n      this.setState({\n        openInviteModal: false\n      });\n    });\n\n    this.state = {\n      withTa: false,\n      clicked: 'none',\n      currentGroup: {\n        id: '',\n        name: ''\n      },\n      currentClass: {\n        id: '',\n        name: '',\n        groups: [],\n        users: [],\n        role: 'Student'\n      },\n      vonageCred: null\n    };\n    this.defineEventEmitterCallbacks();\n  }\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('clearLeftSide', () => {\n      this.setState({\n        withTa: true\n      });\n    });\n  }\n\n  componentDidMount() {\n    const {\n      classId\n    } = this.props.router.query;\n    this.classId = classId;\n    if (!this.classId) return;\n    api.getMe().then(meData => {\n      this.user = meData;\n    }).then(() => api.getClass(this.classId)).then(c => {\n      const userRole = c.users.find(u => u.id === this.user.id);\n      if (!userRole) this.props.router.push('/calendar');\n      this.setState({\n        currentClass: _objectSpread(_objectSpread({}, c), {}, {\n          role: userRole.role\n        })\n      });\n    }).catch(console.error);\n  }\n\n  getButtonToDisplay() {\n    return this.state.currentClass.role === 'Student' ? __jsx(CreateGroupModal, {\n      onCreate: this.handleCreateGroup\n    }) : this.state.clicked === 'none' ? __jsx(Button, {\n      color: \"teal\",\n      content: \"Modify Discussions\",\n      fluid: true,\n      style: {\n        fontSize: '1vw'\n      },\n      onClick: () => {\n        this.setState({\n          clicked: 'inline'\n        });\n      }\n    }) : __jsx(React.Fragment, null, __jsx(CreateDiscussionModal, {\n      id: \"createDiscussionModal\",\n      onCreate: this.handleCreateGroup\n    }), __jsx(Button, {\n      color: \"red\",\n      content: \"Done\",\n      fluid: true,\n      style: {\n        fontSize: '1vw',\n        marginTop: '2%'\n      },\n      onClick: () => {\n        this.setState({\n          clicked: 'none'\n        });\n      }\n    }));\n  }\n\n  getDeleteButton(group) {\n    return __jsx(Button, {\n      id: `deletebutton${group.id}`,\n      compact: true,\n      icon: true,\n      size: \"mini\",\n      floated: \"right\",\n      style: {\n        display: `${this.state.clicked}`,\n        fontSize: '.6vw',\n        textAlign: 'center',\n        width: '10%',\n        marginBottom: '2%',\n        minWidth: '10px',\n        backgroundColor: 'transparent'\n      },\n      onClick: () => {\n        api.deleteGroup(this.classId, group.id);\n      }\n    }, __jsx(Icon, {\n      name: \"delete\",\n      color: \"red\"\n    }));\n  }\n\n  showInviteButton(group) {\n    const plusIcon = __jsx(List.Icon, {\n      name: \"user plus\",\n      size: \"med\"\n    });\n\n    const noPlusIcon = __jsx(\"div\", null);\n\n    return this.state.currentGroup.id == group.id && this.state.vonageCred !== null ? plusIcon : noPlusIcon;\n  }\n\n  getListItemStyle(group) {\n    const unClickedGroupsStyle = {\n      fontSize: '.8vw',\n      textAlign: 'left',\n      width: '80%',\n      marginBottom: '2%',\n      minWidth: '41px',\n      display: 'inline-block'\n    };\n    const clickedGroupsStyle = {\n      fontSize: '.8vw',\n      textAlign: 'left',\n      width: '80%',\n      marginBottom: '2%',\n      minWidth: '41px',\n      background: '#e0e1e2',\n      borderRadius: 10,\n      borderWidth: 1,\n      borderColor: '#fff',\n      display: 'inline-block'\n    };\n    return this.state.currentGroup.id == group.id && this.state.vonageCred !== null ? clickedGroupsStyle : unClickedGroupsStyle;\n  }\n\n  showOffice() {\n    return (this.state.currentClass.role !== 'Student' || this.state.currentGroup.type === 'office') && __jsx(\"div\", {\n      style: {\n        paddingLeft: 20\n      }\n    }, __jsx(List, {\n      relaxed: true,\n      selection: true,\n      verticalAlign: \"middle\"\n    }, this.state.currentClass.groups.filter(group => group.type === 'office').map(group => __jsx(List.Item, {\n      key: `office`,\n      onClick: () => {\n        if (this.state.currentGroup.id !== group.id) {\n          this.handleSelectGroup(group);\n          this.setState({\n            currentGroup: group\n          });\n        } else {\n          EventEmitter.publish('openInviteModal', true);\n        }\n      },\n      style: this.getListItemStyle(group)\n    }, __jsx(List.Icon, {\n      name: \"graduation cap\"\n    }), __jsx(List.Content, null, __jsx(List.Header, {\n      as: \"a\"\n    }, \"TA Office\")), this.showInviteButton(group)))));\n  }\n\n  leftDisplay() {\n    return this.state.withTa === false ? __jsx(\"div\", {\n      style: {\n        height: '100%',\n        marginLeft: '2.5%'\n      }\n    }, __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 12,\n        width: '100%'\n      },\n      fluid: true\n    }, __jsx(Button, {\n      compact: true,\n      icon: \"angle left\",\n      content: this.state.currentClass.name,\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'left',\n        width: '75%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      onClick: this.handleBack\n    }), __jsx(Button, {\n      compact: true,\n      icon: \"setting\",\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'center',\n        width: '15%',\n        marginBottom: '2%',\n        minWidth: '14px'\n      }\n    })), this.showOffice(), __jsx(Accordion, {\n      fluid: true,\n      exclusive: false,\n      defaultActiveIndex: [0, 1],\n      style: {\n        fontSize: '1vw',\n        textAlign: 'left',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      panels: [{\n        key: 'discussions',\n        title: 'Discussions',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20,\n              height: 200,\n              overflow: 'auto'\n            }\n          }, __jsx(List, {\n            relaxed: true,\n            selection: true\n          }, this.state.currentClass.groups.filter(group => group.type === 'discussion').map(group => __jsx(React.Fragment, null, __jsx(List.Item, {\n            key: `discussion_${group.id}`,\n            onClick: () => {\n              if (this.state.currentGroup.id !== group.id) {\n                this.handleSelectGroup(group);\n                this.setState({\n                  currentGroup: group\n                });\n              } else {\n                EventEmitter.publish('openInviteModal', true);\n              }\n            },\n            style: this.getListItemStyle(group)\n          }, __jsx(List.Icon, {\n            name: \"sound\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name)), this.showInviteButton(group)), this.getDeleteButton(group)))))\n        }\n      }, {\n        key: 'private-groups',\n        title: 'Private Groups',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20,\n              height: 200,\n              overflow: 'auto'\n            }\n          }, __jsx(List, {\n            relaxed: true,\n            selection: true\n          }, this.state.currentClass.groups.filter(group => group.type === 'group').map(group => __jsx(List.Item, {\n            key: `private_group_${group.id}`,\n            onClick: () => {\n              if (this.state.currentGroup.id !== group.id) {\n                this.handleSelectGroup(group);\n                this.setState({\n                  currentGroup: group\n                });\n                EventEmitter.publish('currentGroupChange', group);\n              } else {\n                EventEmitter.publish('openInviteModal', true);\n              }\n            },\n            style: this.getListItemStyle(group)\n          }, __jsx(List.Icon, {\n            name: \"lock\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name)), this.showInviteButton(group)))))\n        }\n      }]\n    }), __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14\n      }\n    }, this.getButtonToDisplay())) : __jsx(\"div\", null, \" \");\n  }\n\n  render() {\n    this.fetchCurrentClass();\n    return __jsx(Layout, {\n      left: this.leftDisplay(),\n      right: __jsx(Queue, {\n        onJoin: this.handleJoinTA\n      })\n    }, this.state.vonageCred && __jsx(Vonage, {\n      sessionId: this.state.vonageCred.sessionId,\n      token: this.state.vonageCred.token,\n      onLeave: () => {\n        this.setState({\n          vonageCred: null\n        });\n        this.setState({\n          currentGroup: {\n            id: '',\n            name: ''\n          }\n        });\n        EventEmitter.publish('callOver');\n      }\n    }), __jsx(StudentInviteModal, null));\n  }\n\n}\n\nexport default AuthRequired(withRouter(ClassPage));","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/pages/classes/[classId].js"],"names":["React","Component","withRouter","dynamic","Layout","Button","Accordion","List","Icon","AuthRequired","useAuth","Queue","api","CreateGroupModal","StudentInviteModal","EventEmitter","CreateDiscussionModal","ssr","Vonage","ClassPage","constructor","props","getClass","classId","then","c","userRole","users","find","u","id","user","router","push","setState","currentClass","role","catch","console","error","group","postGroupToken","token","vonageCred","sessionId","handleSelectGroup","currentGroup","postGroup","name","type","fetchCurrentClass","openInviteModal","state","withTa","clicked","groups","defineEventEmitterCallbacks","subscribe","componentDidMount","query","getMe","meData","getButtonToDisplay","handleCreateGroup","fontSize","marginTop","getDeleteButton","display","textAlign","width","marginBottom","minWidth","backgroundColor","deleteGroup","showInviteButton","plusIcon","noPlusIcon","getListItemStyle","unClickedGroupsStyle","clickedGroupsStyle","background","borderRadius","borderWidth","borderColor","showOffice","paddingLeft","filter","map","publish","leftDisplay","height","marginLeft","handleBack","key","title","content","overflow","position","bottom","render","handleJoinTA"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'next/router'\nimport dynamic from 'next/dynamic'\nimport Layout from '../../components/layout'\nimport { Button, Accordion, List, Icon } from 'semantic-ui-react'\nimport { AuthRequired, useAuth } from '../../components/authProvider'\nimport Queue from '../../components/queue/queue'\nimport * as api from '../../util/mercuryService'\nimport CreateGroupModal from '../../components/createGroupModal'\nimport StudentInviteModal from '../../components/studentInviteModal'\nimport { EventEmitter } from '../../components/util/EventEmitter'\n\nconst CreateDiscussionModal = dynamic(\n  () => import('../../components/createDiscussionModal'),\n  {\n    ssr: false,\n  }\n)\nconst Vonage = dynamic(() => import('../../components/vonage'), {\n  ssr: false,\n})\n\nclass ClassPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      withTa: false,\n      clicked: 'none',\n      currentGroup: { id: '', name: '' },\n      currentClass: {\n        id: '',\n        name: '',\n        groups: [],\n        users: [],\n        role: 'Student',\n      },\n      vonageCred: null,\n    }\n    this.defineEventEmitterCallbacks()\n  }\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('clearLeftSide', () => {\n      this.setState({withTa: true})\n    })\n  }\n\n  componentDidMount() {\n    const { classId } = this.props.router.query\n    this.classId = classId\n    if (!this.classId) return\n\n    api\n      .getMe()\n      .then((meData) => {\n        this.user = meData\n      })\n      .then(() => api.getClass(this.classId))\n      .then((c) => {\n        const userRole = c.users.find((u) => u.id === this.user.id)\n        if (!userRole) this.props.router.push('/calendar')\n        this.setState({\n          currentClass: {\n            ...c,\n            role: userRole.role,\n          },\n        })\n      })\n      .catch(console.error)\n  }\n\n  fetchCurrentClass = () => {\n    api\n      .getClass(this.classId)\n      .then((c) => {\n        const userRole = c.users.find((u) => u.id === this.user.id)\n        if (!userRole) this.props.router.push('/calendar')\n        this.setState({\n          currentClass: {\n            ...c,\n            role: userRole.role,\n          },\n        })\n      })\n      .catch(console.error)\n  }\n\n  handleBack = async () => {\n    await this.props.router.push('/calendar')\n  }\n\n  handleSelectGroup = (group) => {\n    api\n      .postGroupToken(this.classId, group.id)\n      .then(({ token }) => {\n        this.setState({ vonageCred: null })\n        this.setState({ vonageCred: { sessionId: group.sessionId, token } })\n      })\n      .catch(console.error)\n  }\n\n  handleJoinTA = (group) => {\n    this.handleSelectGroup(group)\n    this.setState({ currentGroup: group })\n  }\n\n  getButtonToDisplay() {\n    return this.state.currentClass.role === 'Student' ? (\n      <CreateGroupModal onCreate={this.handleCreateGroup} />\n    ) : this.state.clicked === 'none' ? (\n      <Button\n        color=\"teal\"\n        content=\"Modify Discussions\"\n        fluid\n        style={{ fontSize: '1vw' }}\n        onClick={() => {\n          this.setState({ clicked: 'inline' })\n        }}\n      />\n    ) : (\n      <>\n        <CreateDiscussionModal\n          id=\"createDiscussionModal\"\n          onCreate={this.handleCreateGroup}\n        />\n        <Button\n          color=\"red\"\n          content=\"Done\"\n          fluid\n          style={{ fontSize: '1vw', marginTop: '2%' }}\n          onClick={() => {\n            this.setState({ clicked: 'none' })\n          }}\n        />\n      </>\n    )\n  }\n\n  getDeleteButton(group) {\n    return (\n      <Button\n        id={`deletebutton${group.id}`}\n        compact\n        icon\n        size=\"mini\"\n        floated=\"right\"\n        style={{\n          display: `${this.state.clicked}`,\n          fontSize: '.6vw',\n          textAlign: 'center',\n          width: '10%',\n          marginBottom: '2%',\n          minWidth: '10px',\n          backgroundColor: 'transparent',\n        }}\n        onClick={() => {\n          api.deleteGroup(this.classId, group.id)\n        }}\n      >\n        <Icon name=\"delete\" color=\"red\" />\n      </Button>\n    )\n  }\n\n  handleCreateGroup = async (group) => {\n    await api.postGroup(this.classId, group.name, group.type).then((group) => {\n      this.fetchCurrentClass()\n      this.handleSelectGroup(group)\n      this.setState({ currentGroup: group })\n    })\n  }\n\n  showInviteButton(group) {\n    const plusIcon = <List.Icon name=\"user plus\" size=\"med\" />\n    const noPlusIcon = <div></div>\n\n    return this.state.currentGroup.id == group.id &&\n      this.state.vonageCred !== null\n      ? plusIcon\n      : noPlusIcon\n  }\n\n  handleInvite = () => {\n    this.setState({ openInviteModal: false })\n  }\n\n  getListItemStyle(group) {\n    const unClickedGroupsStyle = {\n      fontSize: '.8vw',\n      textAlign: 'left',\n      width: '80%',\n      marginBottom: '2%',\n      minWidth: '41px',\n      display: 'inline-block',\n    }\n\n    const clickedGroupsStyle = {\n      fontSize: '.8vw',\n      textAlign: 'left',\n      width: '80%',\n      marginBottom: '2%',\n      minWidth: '41px',\n      background: '#e0e1e2',\n      borderRadius: 10,\n      borderWidth: 1,\n      borderColor: '#fff',\n      display: 'inline-block',\n    }\n\n    return this.state.currentGroup.id == group.id &&\n      this.state.vonageCred !== null\n      ? clickedGroupsStyle\n      : unClickedGroupsStyle\n  }\n\n  showOffice() {\n    return (\n      (this.state.currentClass.role !== 'Student' ||\n        this.state.currentGroup.type === 'office') && (\n        <div style={{ paddingLeft: 20 }}>\n          <List relaxed selection verticalAlign=\"middle\">\n            {this.state.currentClass.groups\n              .filter((group) => group.type === 'office')\n              .map((group) => (\n                <List.Item\n                  key={`office`}\n                  onClick={() => {\n                    if (this.state.currentGroup.id !== group.id) {\n                      this.handleSelectGroup(group)\n                      this.setState({ currentGroup: group })\n                    } else {\n                      EventEmitter.publish(\n                        'openInviteModal',\n                        true\n                      )\n                    }\n                  }}\n                  style={this.getListItemStyle(group)}\n                >\n                  <List.Icon name=\"graduation cap\" />\n                  <List.Content>\n                    <List.Header as=\"a\">TA Office</List.Header>\n                  </List.Content>\n                  {this.showInviteButton(group)}\n                </List.Item>\n              ))}\n          </List>\n        </div>\n      )\n    )\n  }\n\n  leftDisplay() {\n    return this.state.withTa === false ? (\n      <div style={{ height: '100%', marginLeft: '2.5%' }}>\n        <Button.Group\n          size=\"huge\"\n          style={{ marginBottom: 12, width: '100%' }}\n          fluid\n        >\n          <Button\n            compact\n            icon=\"angle left\"\n            content={this.state.currentClass.name}\n            style={{\n              fontSize: '1.5vw',\n              textAlign: 'left',\n              width: '75%',\n              marginBottom: '2%',\n              minWidth: '41px',\n            }}\n            onClick={this.handleBack}\n          />\n          <Button\n            compact\n            icon=\"setting\"\n            style={{\n              fontSize: '1.5vw',\n              textAlign: 'center',\n              width: '15%',\n              marginBottom: '2%',\n              minWidth: '14px',\n            }}\n          />\n        </Button.Group>\n        {this.showOffice()}\n        <Accordion\n          fluid\n          exclusive={false}\n          defaultActiveIndex={[0, 1]}\n          style={{\n            fontSize: '1vw',\n            textAlign: 'left',\n            width: '100%',\n            marginBottom: '2%',\n            minWidth: '41px',\n          }}\n          panels={[\n            {\n              key: 'discussions',\n              title: 'Discussions',\n              content: {\n                content: (\n                  <div\n                    style={{ paddingLeft: 20, height: 200, overflow: 'auto' }}\n                  >\n                    <List relaxed selection>\n                      {this.state.currentClass.groups\n                        .filter((group) => group.type === 'discussion')\n                        .map((group) => (\n                          <>\n                            <List.Item\n                              key={`discussion_${group.id}`}\n                              onClick={() => {\n                                if (this.state.currentGroup.id !== group.id) {\n                                  this.handleSelectGroup(group)\n                                  this.setState({ currentGroup: group })\n                                } else {\n                                  EventEmitter.publish(\n                                    'openInviteModal',\n                                    true\n                                  )\n                                }\n                              }}\n                              style={this.getListItemStyle(group)}\n                            >\n                              <List.Icon name=\"sound\" />\n                              <List.Content>\n                                <List.Header as=\"a\">{group.name}</List.Header>\n                              </List.Content>\n                              {this.showInviteButton(group)}\n                            </List.Item>\n                            {this.getDeleteButton(group)}\n                          </>\n                        ))}\n                    </List>\n                  </div>\n                ),\n              },\n            },\n            {\n              key: 'private-groups',\n              title: 'Private Groups',\n              content: {\n                content: (\n                  <div\n                    style={{ paddingLeft: 20, height: 200, overflow: 'auto' }}\n                  >\n                    <List relaxed selection>\n                      {this.state.currentClass.groups\n                        .filter((group) => group.type === 'group')\n                        .map((group) => (\n                          <List.Item\n                            key={`private_group_${group.id}`}\n                            onClick={() => {\n                              if (this.state.currentGroup.id !== group.id) {\n                                this.handleSelectGroup(group)\n                                this.setState({ currentGroup: group })\n                                EventEmitter.publish(\n                                  'currentGroupChange',\n                                  group\n                                )\n                              }else {\n                                EventEmitter.publish(\n                                  'openInviteModal',\n                                  true\n                                )\n                              }\n                            }}\n                            style={this.getListItemStyle(group)}\n                          >\n                            <List.Icon name=\"lock\" />\n                            <List.Content>\n                              <List.Header as=\"a\">{group.name}</List.Header>\n                            </List.Content>\n                            {this.showInviteButton(group)}\n                          </List.Item>\n                        ))}\n                    </List>\n                  </div>\n                ),\n              },\n            },\n          ]}\n        />\n        <div\n          style={{\n            position: 'absolute',\n            width: 'calc(100% - 38px)',\n            bottom: 14,\n          }}\n        >\n          {this.getButtonToDisplay()}\n        </div>\n      </div>\n    ) : (\n      <div> </div>\n    )\n  }\n\n  render() {\n    this.fetchCurrentClass()\n    return (\n      <Layout\n        left={this.leftDisplay()}\n        right={<Queue onJoin={this.handleJoinTA} />}\n      >\n        {this.state.vonageCred && (\n          <Vonage\n            sessionId={this.state.vonageCred.sessionId}\n            token={this.state.vonageCred.token}\n            onLeave={() => {\n              this.setState({ vonageCred: null })\n              this.setState({ currentGroup: { id: '', name: '' } })\n              EventEmitter.publish('callOver')\n            }}\n          />\n        )}\n        <StudentInviteModal/>\n      </Layout>\n    )\n  }\n}\nexport default AuthRequired(withRouter(ClassPage))\n"]},"metadata":{},"sourceType":"module"}