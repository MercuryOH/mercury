{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport Layout from '../../components/layout';\nimport { Button, Accordion, List } from 'semantic-ui-react';\nimport { AuthRequired } from '../../components/authProvider';\nimport Queue from '../../components/queue/queue';\nimport * as api from '../../util/mercuryService';\nimport CreateGroupModal from '../../components/createGroupModal';\nvar Vonage = dynamic(_c = function _c() {\n  return import('../../components/vonage');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../../components/vonage')];\n    },\n    modules: ['../../components/vonage']\n  }\n});\n_c2 = Vonage;\n\nfunction ClassPage() {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState([]),\n      groups = _useState[0],\n      setGroups = _useState[1],\n      classes = _useState[2],\n      setClasses = _useState[3];\n\n  var _useState2 = useState(null),\n      vonageCred = _useState2[0],\n      setVonageCred = _useState2[1];\n\n  var classId = router.query.classId;\n  useEffect(function () {\n    if (!classId) return;\n    api.getGroups(classId).then(function (groups) {\n      return setGroups(groups);\n    })[\"catch\"](console.error);\n  }, [classId]);\n  useEffect(function () {\n    api.getClasses().then(function (classes) {\n      return setClasses(groups);\n    })[\"catch\"](console.error);\n  }, []);\n\n  function getClassName(classList) {\n    var correctClass = '';\n    classList.forEach(function (c) {\n      if (c.id === classId) {\n        correctClass = c.name;\n      }\n    });\n    return correctClass;\n  }\n\n  var handleBack = function handleBack() {\n    router.push('/calendar');\n  };\n\n  var handleSelectGroup = function handleSelectGroup(group) {\n    api.postGroupToken(classId, group.id).then(function (_ref) {\n      var token = _ref.token;\n      return setVonageCred({\n        sessionId: group.sessionId,\n        token: token\n      });\n    })[\"catch\"](console.error);\n  };\n\n  return __jsx(Layout, {\n    left: __jsx(\"div\", {\n      style: {\n        height: '100%'\n      }\n    }, __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 12,\n        width: '100%'\n      },\n      fluid: true\n    }, __jsx(Button, {\n      compact: true,\n      icon: \"angle left\",\n      content: \"Class.name\",\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'left',\n        width: '75%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      onClick: handleBack\n    }), __jsx(Button, {\n      compact: true,\n      icon: \"setting\",\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'center',\n        width: '15%',\n        marginBottom: '2%',\n        minWidth: '14px'\n      }\n    })), __jsx(Accordion, {\n      fluid: true,\n      exclusive: false,\n      defaultActiveIndex: [0, 1],\n      style: {\n        fontSize: '1vw',\n        textAlign: 'left',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      panels: [{\n        key: 'discussions',\n        title: 'Discussions',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20\n            }\n          }, __jsx(List, {\n            relaxed: true\n          }, groups.filter(function (group) {\n            return group.type === 'discussion';\n          }).map(function (group) {\n            return __jsx(List.Item, {\n              key: \"discussion_\".concat(group.id),\n              onClick: function onClick() {\n                return handleSelectGroup(group);\n              },\n              style: {\n                fontSize: '1vw',\n                textAlign: 'left',\n                width: '75%',\n                marginBottom: '2%',\n                minWidth: '41px'\n              }\n            }, __jsx(List.Icon, {\n              name: \"sound\"\n            }), __jsx(List.Content, null, __jsx(List.Header, {\n              as: \"a\"\n            }, group.name)));\n          })))\n        }\n      }, {\n        key: 'private-groups',\n        title: 'Private Groups',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20\n            }\n          }, __jsx(List, {\n            relaxed: true\n          }, groups.filter(function (group) {\n            return group.type === 'group';\n          }).map(function (group) {\n            return __jsx(List.Item, {\n              key: \"private_group_\".concat(group.id),\n              onClick: function onClick() {\n                return handleSelectGroup(group);\n              },\n              style: {\n                fontSize: '1vw',\n                textAlign: 'left',\n                width: '75%',\n                marginBottom: '2%',\n                minWidth: '41px'\n              }\n            }, __jsx(List.Icon, {\n              name: \"lock\"\n            }), __jsx(List.Content, null, __jsx(List.Header, {\n              as: \"a\"\n            }, group.name)));\n          })))\n        }\n      }]\n    }), __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14\n      }\n    }, __jsx(CreateGroupModal, null))),\n    right: __jsx(Queue, null)\n  }, vonageCred && __jsx(Vonage, {\n    sessionId: vonageCred.sessionId,\n    token: vonageCred.token,\n    onLeave: function onLeave() {\n      return setVonageCred(null);\n    }\n  }));\n}\n\n_s(ClassPage, \"+BiMVcLJLeORP2Qp3z8fJ2i7rcI=\", false, function () {\n  return [useRouter];\n});\n\n_c3 = ClassPage;\nexport default _c4 = AuthRequired(ClassPage);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Vonage$dynamic\");\n$RefreshReg$(_c2, \"Vonage\");\n$RefreshReg$(_c3, \"ClassPage\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/pages/classes/[classId].js"],"names":["React","useEffect","useState","useRouter","dynamic","Layout","Button","Accordion","List","AuthRequired","Queue","api","CreateGroupModal","Vonage","ssr","ClassPage","router","groups","setGroups","classes","setClasses","vonageCred","setVonageCred","classId","query","getGroups","then","console","error","getClasses","getClassName","classList","correctClass","forEach","c","id","name","handleBack","push","handleSelectGroup","group","postGroupToken","token","sessionId","height","marginBottom","width","fontSize","textAlign","minWidth","key","title","content","paddingLeft","filter","type","map","position","bottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport dynamic from 'next/dynamic'\r\nimport Layout from '../../components/layout'\r\nimport { Button, Accordion, List } from 'semantic-ui-react'\r\nimport { AuthRequired } from '../../components/authProvider'\r\nimport Queue from '../../components/queue/queue'\r\nimport * as api from '../../util/mercuryService'\r\nimport CreateGroupModal from '../../components/createGroupModal'\r\n\r\nconst Vonage = dynamic(() => import('../../components/vonage'), {\r\n  ssr: false,\r\n})\r\n\r\nfunction ClassPage() {\r\n  const router = useRouter()\r\n  const [groups, setGroups, classes, setClasses] = useState([])\r\n  const [vonageCred, setVonageCred] = useState(null)\r\n  const { classId } = router.query\r\n\r\n  useEffect(() => {\r\n    if (!classId) return\r\n\r\n    api\r\n      .getGroups(classId)\r\n      .then((groups) => setGroups(groups))\r\n      .catch(console.error)\r\n  }, [classId])\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getClasses()\r\n      .then((classes) => setClasses(groups))\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n  function getClassName(classList) {\r\n    var correctClass = ''\r\n    classList.forEach((c) => {\r\n      if (c.id === classId) {\r\n        correctClass = c.name\r\n      }\r\n    })\r\n    return correctClass\r\n  }\r\n\r\n  const handleBack = () => {\r\n    router.push('/calendar')\r\n  }\r\n\r\n  const handleSelectGroup = (group) => {\r\n    api\r\n      .postGroupToken(classId, group.id)\r\n      .then(({ token }) => setVonageCred({ sessionId: group.sessionId, token }))\r\n      .catch(console.error)\r\n  }\r\n\r\n  return (\r\n    <Layout\r\n      left={\r\n        <div style={{ height: '100%' }}>\r\n          <Button.Group\r\n            size=\"huge\"\r\n            style={{ marginBottom: 12, width: '100%' }}\r\n            fluid\r\n          >\r\n            <Button\r\n              compact\r\n              icon=\"angle left\"\r\n              content=\"Class.name\"\r\n              style={{\r\n                fontSize: '1.5vw',\r\n                textAlign: 'left',\r\n                width: '75%',\r\n                marginBottom: '2%',\r\n                minWidth: '41px',\r\n              }}\r\n              onClick={handleBack}\r\n            />\r\n            <Button\r\n              compact\r\n              icon=\"setting\"\r\n              style={{\r\n                fontSize: '1.5vw',\r\n                textAlign: 'center',\r\n                width: '15%',\r\n                marginBottom: '2%',\r\n                minWidth: '14px',\r\n              }}\r\n            />\r\n          </Button.Group>\r\n          <Accordion\r\n            fluid\r\n            exclusive={false}\r\n            defaultActiveIndex={[0, 1]}\r\n            style={{\r\n              fontSize: '1vw',\r\n              textAlign: 'left',\r\n              width: '100%',\r\n              marginBottom: '2%',\r\n              minWidth: '41px',\r\n            }}\r\n            panels={[\r\n              {\r\n                key: 'discussions',\r\n                title: 'Discussions',\r\n                content: {\r\n                  content: (\r\n                    <div style={{ paddingLeft: 20 }}>\r\n                      <List relaxed>\r\n                        {groups\r\n                          .filter((group) => group.type === 'discussion')\r\n                          .map((group) => (\r\n                            <List.Item\r\n                              key={`discussion_${group.id}`}\r\n                              onClick={() => handleSelectGroup(group)}\r\n                              style={{\r\n                                fontSize: '1vw',\r\n                                textAlign: 'left',\r\n                                width: '75%',\r\n                                marginBottom: '2%',\r\n                                minWidth: '41px',\r\n                              }}\r\n                            >\r\n                              <List.Icon name=\"sound\" />\r\n                              <List.Content>\r\n                                <List.Header as=\"a\">{group.name}</List.Header>\r\n                              </List.Content>\r\n                            </List.Item>\r\n                          ))}\r\n                      </List>\r\n                    </div>\r\n                  ),\r\n                },\r\n              },\r\n              {\r\n                key: 'private-groups',\r\n                title: 'Private Groups',\r\n                content: {\r\n                  content: (\r\n                    <div style={{ paddingLeft: 20 }}>\r\n                      <List relaxed>\r\n                        {groups\r\n                          .filter((group) => group.type === 'group')\r\n                          .map((group) => (\r\n                            <List.Item\r\n                              key={`private_group_${group.id}`}\r\n                              onClick={() => handleSelectGroup(group)}\r\n                              style={{\r\n                                fontSize: '1vw',\r\n                                textAlign: 'left',\r\n                                width: '75%',\r\n                                marginBottom: '2%',\r\n                                minWidth: '41px',\r\n                              }}\r\n                            >\r\n                              <List.Icon name=\"lock\" />\r\n                              <List.Content>\r\n                                <List.Header as=\"a\">{group.name}</List.Header>\r\n                              </List.Content>\r\n                            </List.Item>\r\n                          ))}\r\n                      </List>\r\n                    </div>\r\n                  ),\r\n                },\r\n              },\r\n            ]}\r\n          />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              width: 'calc(100% - 38px)',\r\n              bottom: 14,\r\n            }}\r\n          >\r\n            <CreateGroupModal />\r\n          </div>\r\n        </div>\r\n      }\r\n      right={<Queue />}\r\n    >\r\n      {vonageCred && (\r\n        <Vonage\r\n          sessionId={vonageCred.sessionId}\r\n          token={vonageCred.token}\r\n          onLeave={() => setVonageCred(null)}\r\n        />\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default AuthRequired(ClassPage)\r\n"]},"metadata":{},"sourceType":"module"}