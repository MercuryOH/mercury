{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport * as api from '../../../util/mercuryService';\nimport YourTurnModal from './yourTurnModal';\nimport { Label, Button } from 'semantic-ui-react';\nimport { EventEmitter } from '../../util/EventEmitter';\nvar QueueDiv = styled.div.withConfig({\n  displayName: \"studentQueueView__QueueDiv\",\n  componentId: \"sc-1qcvoz5-0\"\n})([\"grid-gap:2vh;\"]);\n_c = QueueDiv;\nvar QueueLabel = styled(Label).withConfig({\n  displayName: \"studentQueueView__QueueLabel\",\n  componentId: \"sc-1qcvoz5-1\"\n})([\"text-align:center;\"]);\n/**\n * This is how the student views the Queue\n */\n\n_c2 = QueueLabel;\n\nvar StudentQueueView = /*#__PURE__*/function (_Component) {\n  _inherits(StudentQueueView, _Component);\n\n  var _super = _createSuper(StudentQueueView);\n\n  function StudentQueueView(props) {\n    var _this;\n\n    _classCallCheck(this, StudentQueueView);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      displayStudentsStyle: {\n        display: 'grid'\n      },\n      iconToDisplay: 'caret square down outline',\n      studentsInQueue: [],\n      me: _this.props.me,\n      inQueue: false,\n      isYourTurn: false,\n      currStudentBeingHelped: '',\n      isReadyToRender: false,\n      office: _this.props.office,\n      inCallWithTA: false,\n      currentGroup: {\n        id: '',\n        name: ''\n      },\n      onJoin: _this.props.onJoin,\n      groups: []\n    };\n\n    _this.defineEventEmitterCallbacks();\n\n    return _this;\n  }\n  /**\n   * Define EventEmitter subscribers\n   */\n\n\n  _createClass(StudentQueueView, [{\n    key: \"defineEventEmitterCallbacks\",\n    value: function defineEventEmitterCallbacks() {\n      var _this2 = this;\n\n      EventEmitter.subscribe('activateYourTurnModal', function (TAName) {\n        _this2.setState({\n          inQueue: false\n        });\n\n        EventEmitter.publish('startYourTurnModalTimer', TAName);\n      });\n      EventEmitter.subscribe('updateStudentsInQueue', function (msg) {\n        _this2.setState({\n          studentsInQueue: msg.map(function (_ref) {\n            var fullName = _ref.fullName;\n            return fullName;\n          })\n        });\n      });\n      EventEmitter.subscribe('addMeToQueue', function () {\n        _this2.setState({\n          inQueue: true\n        });\n      });\n      EventEmitter.subscribe('removeMeFromQueue', function () {\n        _this2.setState({\n          inQueue: false\n        });\n      });\n      EventEmitter.subscribe('studentTimeout', function (TAName) {\n        EventEmitter.publish('signalStudentTimeout', TAName);\n\n        _this2.createTimeoutNotification();\n      });\n      EventEmitter.subscribe('studentJoinTA', function (TAName) {\n        var _this2$state = _this2.state,\n            office = _this2$state.office,\n            onJoin = _this2$state.onJoin,\n            me = _this2$state.me;\n        EventEmitter.publish('signalJoinTA', {\n          group: office,\n          TAName: TAName,\n          me: me\n        });\n        onJoin(office);\n\n        _this2.setState({\n          inQueue: false,\n          inCallWithTA: true\n        });\n      });\n      EventEmitter.subscribe('studentInviteTA', function (TAName) {\n        var _this2$state2 = _this2.state,\n            currentGroup = _this2$state2.currentGroup,\n            me = _this2$state2.me;\n        EventEmitter.publish('signalJoinTA', {\n          group: currentGroup,\n          TAName: TAName,\n          me: me\n        });\n\n        _this2.setState({\n          inQueue: false,\n          inCallWithTA: true\n        });\n      });\n      EventEmitter.subscribe('studentDeclineTA', function (TAName) {\n        EventEmitter.publish('signalDeclineTA', TAName);\n\n        _this2.setState({\n          inQueue: false\n        });\n      });\n      EventEmitter.subscribe('currentGroupChange', function (currentGroup) {\n        _this2.setState({\n          currentGroup: currentGroup\n        });\n      });\n      EventEmitter.subscribe('callOver', function (classId) {\n        var inCallWithTA = _this2.state.inCallWithTA;\n\n        if (inCallWithTA) {\n          EventEmitter.publish('signalCallOver');\n          EventEmitter.publish('activateFeedbackModal', classId);\n\n          _this2.setState({\n            inCallWithTA: false,\n            currStudentBeingHelped: ''\n          });\n        }\n      });\n      EventEmitter.subscribe('updateCurrStudent', function (currStudentBeingHelped) {\n        _this2.setState({\n          currStudentBeingHelped: currStudentBeingHelped\n        });\n      });\n      EventEmitter.subscribe('initializeQueueOnGreeting', function (_ref2) {\n        var currStudent = _ref2.currStudent,\n            studentsInQueue = _ref2.studentsInQueue;\n        var myId = _this2.state.me.id;\n        var inQueue = studentsInQueue.filter(function (_ref3) {\n          var id = _ref3.id;\n          return id === myId;\n        }).length > 0;\n\n        _this2.setState({\n          currStudentBeingHelped: currStudent,\n          studentsInQueue: studentsInQueue.map(function (_ref4) {\n            var fullName = _ref4.fullName;\n            return fullName;\n          }),\n          inQueue: inQueue\n        });\n      });\n    }\n  }, {\n    key: \"createTimeoutNotification\",\n    value: function createTimeoutNotification() {\n      EventEmitter.publish('createNotification', 'Your Invitation Has Expired');\n    }\n  }, {\n    key: \"isStudentDisplayed\",\n    value: function isStudentDisplayed() {\n      var display = this.state.displayStudentsStyle.display;\n      return display === 'grid';\n    }\n  }, {\n    key: \"alterStudentDisplay\",\n    value: function alterStudentDisplay() {\n      var displayStudentsStyle = this.isStudentDisplayed() ? {\n        display: 'none'\n      } : {\n        display: 'grid'\n      };\n      var iconToDisplay = this.isStudentDisplayed() ? 'caret square up outline' : 'caret square down outline';\n      this.setState({\n        displayStudentsStyle: displayStudentsStyle,\n        iconToDisplay: iconToDisplay\n      });\n    }\n  }, {\n    key: \"addMeToQueue\",\n    value: function addMeToQueue() {\n      var _this$state$me = this.state.me,\n          firstName = _this$state$me.firstName,\n          lastName = _this$state$me.lastName;\n      var fullName = \"\".concat(firstName, \" \").concat(lastName);\n\n      if (this.state.studentsInQueue.indexOf(fullName) >= 0 || this.state.currStudentBeingHelped === fullName) {\n        return;\n      }\n\n      EventEmitter.publish('signalAddMeToQueue');\n    }\n  }, {\n    key: \"removeMeFromQueue\",\n    value: function removeMeFromQueue() {\n      var _this$state$me2 = this.state.me,\n          firstName = _this$state$me2.firstName,\n          lastName = _this$state$me2.lastName;\n      var fullName = \"\".concat(firstName, \" \").concat(lastName);\n\n      if (this.state.studentsInQueue.indexOf(fullName) < 0) {\n        return;\n      }\n\n      EventEmitter.publish('signalRemoveMeFromQueue');\n    }\n  }, {\n    key: \"getButtonToDisplay\",\n    value: function getButtonToDisplay() {\n      if (this.state.inCallWithTA) {\n        return null;\n      }\n\n      var buttonToDisplay = this.state.inQueue ? __jsx(Button, {\n        onClick: this.removeMeFromQueue.bind(this),\n        style: {\n          width: '100%',\n          fontSize: '1vw'\n        },\n        secondary: true\n      }, \"Leave Queue\") : __jsx(Button, {\n        onClick: this.addMeToQueue.bind(this),\n        style: {\n          width: '100%',\n          fontSize: '1vw'\n        },\n        primary: true\n      }, \"Join Queue\");\n      return __jsx(\"div\", {\n        style: {\n          position: 'absolute',\n          width: 'calc(100% - 38px)',\n          bottom: 14,\n          display: 'inline-flex'\n        }\n      }, buttonToDisplay);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      EventEmitter.publish('greeting');\n      this.setState({\n        isReadyToRender: true\n      });\n      api.getGroups(Number(this.props.classId)).then(function (groups) {\n        return _this3.setState({\n          groups: groups\n        });\n      }); //wrong typing on courseId\n    }\n  }, {\n    key: \"createCurrStudentLabel\",\n    value: function createCurrStudentLabel() {\n      var currStudentBeingHelped = this.state.currStudentBeingHelped;\n\n      if (currStudentBeingHelped.length == 0) {\n        return null;\n      }\n\n      return __jsx(QueueLabel, {\n        style: {\n          fontSize: '1.2vw',\n          textAlign: 'center',\n          width: '95%',\n          marginBottom: '2%',\n          minWidth: '41px',\n          marginLeft: '.8%',\n          backgroundColor: 'red',\n          marginRight: '1%'\n        },\n        key: currStudentBeingHelped\n      }, currStudentBeingHelped);\n    }\n  }, {\n    key: \"createQueueLabel\",\n    value: function createQueueLabel(student) {\n      return __jsx(QueueLabel, {\n        style: {\n          fontSize: '1.2vw',\n          textAlign: 'center',\n          width: '95%',\n          marginBottom: '2%',\n          minWidth: '41px',\n          marginLeft: '.8%',\n          marginRight: '1%'\n        },\n        key: student\n      }, student);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isReadyToRender = this.state.isReadyToRender;\n\n      if (!isReadyToRender) {\n        return null;\n      }\n\n      var queueLabels = this.isStudentDisplayed() ? this.state.studentsInQueue.map(this.createQueueLabel) : [];\n      return __jsx(QueueDiv, null, __jsx(YourTurnModal, null), __jsx(Button.Group, {\n        size: \"huge\",\n        style: {\n          marginBottom: 12,\n          width: '95%'\n        },\n        fluid: true,\n        vertical: true\n      }, __jsx(Button, {\n        compact: true,\n        content: \"Queue\",\n        icon: this.state.iconToDisplay,\n        labelPosition: \"right\",\n        onClick: this.alterStudentDisplay.bind(this),\n        style: {\n          fontSize: '1.5vw',\n          textAlign: 'center',\n          width: '100%',\n          marginBottom: '2%',\n          minWidth: '41px'\n        }\n      })), this.createCurrStudentLabel(), __jsx(QueueDiv, {\n        style: {\n          width: '100%',\n          marginBottom: '2%',\n          minWidth: '41px'\n        }\n      }, queueLabels), this.getButtonToDisplay());\n    }\n  }]);\n\n  return StudentQueueView;\n}(Component);\n\nStudentQueueView.propTypes = {\n  onJoin: PropTypes.func.isRequired\n};\nexport default StudentQueueView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QueueDiv\");\n$RefreshReg$(_c2, \"QueueLabel\");","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/queue/student/studentQueueView.js"],"names":["React","Component","PropTypes","styled","api","YourTurnModal","Label","Button","EventEmitter","QueueDiv","div","QueueLabel","StudentQueueView","props","state","displayStudentsStyle","display","iconToDisplay","studentsInQueue","me","inQueue","isYourTurn","currStudentBeingHelped","isReadyToRender","office","inCallWithTA","currentGroup","id","name","onJoin","groups","defineEventEmitterCallbacks","subscribe","TAName","setState","publish","msg","map","fullName","createTimeoutNotification","group","classId","currStudent","myId","filter","length","isStudentDisplayed","firstName","lastName","indexOf","buttonToDisplay","removeMeFromQueue","bind","width","fontSize","addMeToQueue","position","bottom","getGroups","Number","then","textAlign","marginBottom","minWidth","marginLeft","backgroundColor","marginRight","student","queueLabels","createQueueLabel","alterStudentDisplay","createCurrStudentLabel","getButtonToDisplay","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport * as api from '../../../util/mercuryService'\nimport YourTurnModal from './yourTurnModal'\nimport { Label, Button } from 'semantic-ui-react'\nimport { EventEmitter } from '../../util/EventEmitter'\n\nconst QueueDiv = styled.div`\n  grid-gap: 2vh;\n`\n\nconst QueueLabel = styled(Label)`\n  text-align: center;\n`\n\n/**\n * This is how the student views the Queue\n */\n\nclass StudentQueueView extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      displayStudentsStyle: { display: 'grid' },\n      iconToDisplay: 'caret square down outline',\n      studentsInQueue: [],\n      me: this.props.me,\n      inQueue: false,\n      isYourTurn: false,\n      currStudentBeingHelped: '',\n      isReadyToRender: false,\n      office: this.props.office,\n      inCallWithTA: false,\n      currentGroup: { id: '', name: '' },\n      onJoin: this.props.onJoin,\n      groups: [],\n    }\n\n    this.defineEventEmitterCallbacks()\n  }\n\n  /**\n   * Define EventEmitter subscribers\n   */\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('activateYourTurnModal', (TAName) => {\n      this.setState({ inQueue: false })\n      EventEmitter.publish('startYourTurnModalTimer', TAName)\n    })\n\n    EventEmitter.subscribe('updateStudentsInQueue', (msg) => {\n      this.setState({\n        studentsInQueue: msg.map(({ fullName }) => fullName),\n      })\n    })\n\n    EventEmitter.subscribe('addMeToQueue', () => {\n      this.setState({ inQueue: true })\n    })\n\n    EventEmitter.subscribe('removeMeFromQueue', () => {\n      this.setState({ inQueue: false })\n    })\n\n    EventEmitter.subscribe('studentTimeout', (TAName) => {\n      EventEmitter.publish('signalStudentTimeout', TAName)\n      this.createTimeoutNotification()\n    })\n\n    EventEmitter.subscribe('studentJoinTA', (TAName) => {\n      const { office, onJoin, me } = this.state\n      EventEmitter.publish('signalJoinTA', { group: office, TAName, me })\n      onJoin(office)\n      this.setState({ inQueue: false, inCallWithTA: true })\n    })\n\n    EventEmitter.subscribe('studentInviteTA', (TAName) => {\n      const { currentGroup, me } = this.state\n      EventEmitter.publish('signalJoinTA', { group: currentGroup, TAName, me })\n      this.setState({ inQueue: false, inCallWithTA: true })\n    })\n\n    EventEmitter.subscribe('studentDeclineTA', (TAName) => {\n      EventEmitter.publish('signalDeclineTA', TAName)\n      this.setState({ inQueue: false })\n    })\n\n    EventEmitter.subscribe('currentGroupChange', (currentGroup) => {\n      this.setState({ currentGroup })\n    })\n\n    EventEmitter.subscribe('callOver', (classId) => {\n      const { inCallWithTA } = this.state\n\n      if (inCallWithTA) {\n        EventEmitter.publish('signalCallOver')\n        EventEmitter.publish('activateFeedbackModal', classId)\n        this.setState({ inCallWithTA: false, currStudentBeingHelped: '' })\n      }\n    })\n\n    EventEmitter.subscribe('updateCurrStudent', (currStudentBeingHelped) => {\n      this.setState({ currStudentBeingHelped })\n    })\n\n    EventEmitter.subscribe(\n      'initializeQueueOnGreeting',\n      ({ currStudent, studentsInQueue }) => {\n        const { id: myId } = this.state.me\n        const inQueue =\n          studentsInQueue.filter(({ id }) => id === myId).length > 0\n        this.setState({\n          currStudentBeingHelped: currStudent,\n          studentsInQueue: studentsInQueue.map(({ fullName }) => fullName),\n          inQueue,\n        })\n      }\n    )\n  }\n\n  createTimeoutNotification() {\n    EventEmitter.publish('createNotification', 'Your Invitation Has Expired')\n  }\n\n  isStudentDisplayed() {\n    let { display } = this.state.displayStudentsStyle\n    return display === 'grid'\n  }\n\n  alterStudentDisplay() {\n    let displayStudentsStyle = this.isStudentDisplayed()\n      ? { display: 'none' }\n      : { display: 'grid' }\n\n    let iconToDisplay = this.isStudentDisplayed()\n      ? 'caret square up outline'\n      : 'caret square down outline'\n\n    this.setState({ displayStudentsStyle, iconToDisplay })\n  }\n\n  addMeToQueue() {\n    const { firstName, lastName } = this.state.me\n    const fullName = `${firstName} ${lastName}`\n\n    if (\n      this.state.studentsInQueue.indexOf(fullName) >= 0 ||\n      this.state.currStudentBeingHelped === fullName\n    ) {\n      return\n    }\n\n    EventEmitter.publish('signalAddMeToQueue')\n  }\n\n  removeMeFromQueue() {\n    const { firstName, lastName } = this.state.me\n    const fullName = `${firstName} ${lastName}`\n\n    if (this.state.studentsInQueue.indexOf(fullName) < 0) {\n      return\n    }\n\n    EventEmitter.publish('signalRemoveMeFromQueue')\n  }\n\n  getButtonToDisplay() {\n    if (this.state.inCallWithTA) {\n      return null\n    }\n\n    const buttonToDisplay = this.state.inQueue ? (\n      <Button\n        onClick={this.removeMeFromQueue.bind(this)}\n        style={{ width: '100%', fontSize: '1vw' }}\n        secondary\n      >\n        Leave Queue\n      </Button>\n    ) : (\n      <Button\n        onClick={this.addMeToQueue.bind(this)}\n        style={{ width: '100%', fontSize: '1vw' }}\n        primary\n      >\n        Join Queue\n      </Button>\n    )\n\n    return (\n      <div\n        style={{\n          position: 'absolute',\n          width: 'calc(100% - 38px)',\n          bottom: 14,\n          display: 'inline-flex',\n        }}\n      >\n        {buttonToDisplay}\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    EventEmitter.publish('greeting')\n    this.setState({ isReadyToRender: true })\n    api\n      .getGroups(Number(this.props.classId))\n      .then((groups) => this.setState({groups: groups}))\n\n      //wrong typing on courseId\n  }\n\n  createCurrStudentLabel() {\n    const { currStudentBeingHelped } = this.state\n\n    if (currStudentBeingHelped.length == 0) {\n      return null\n    }\n\n    return (\n      <QueueLabel\n        style={{\n          fontSize: '1.2vw',\n          textAlign: 'center',\n          width: '95%',\n          marginBottom: '2%',\n          minWidth: '41px',\n          marginLeft: '.8%',\n          backgroundColor: 'red',\n          marginRight: '1%',\n        }}\n        key={currStudentBeingHelped}\n      >\n        {currStudentBeingHelped}\n      </QueueLabel>\n    )\n  }\n\n  createQueueLabel(student) {\n    return (\n      <QueueLabel\n        style={{\n          fontSize: '1.2vw',\n          textAlign: 'center',\n          width: '95%',\n          marginBottom: '2%',\n          minWidth: '41px',\n          marginLeft: '.8%',\n          marginRight: '1%',\n        }}\n        key={student}\n      >\n        {student}\n      </QueueLabel>\n    )\n  }\n\n  render() {\n    const { isReadyToRender } = this.state\n\n    if (!isReadyToRender) {\n      return null\n    }\n\n    const queueLabels = this.isStudentDisplayed()\n      ? this.state.studentsInQueue.map(this.createQueueLabel)\n      : []\n\n    return (\n      <QueueDiv>\n        <YourTurnModal />\n\n        <Button.Group\n          size=\"huge\"\n          style={{ marginBottom: 12, width: '95%' }}\n          fluid\n          vertical\n        >\n          <Button\n            compact\n            content=\"Queue\"\n            icon={this.state.iconToDisplay}\n            labelPosition=\"right\"\n            onClick={this.alterStudentDisplay.bind(this)}\n            style={{\n              fontSize: '1.5vw',\n              textAlign: 'center',\n              width: '100%',\n              marginBottom: '2%',\n              minWidth: '41px',\n            }}\n          />\n        </Button.Group>\n\n        {this.createCurrStudentLabel()}\n\n        <QueueDiv\n          style={{ width: '100%', marginBottom: '2%', minWidth: '41px' }}\n        >\n          {queueLabels}\n        </QueueDiv>\n        {this.getButtonToDisplay()}\n      </QueueDiv>\n    )\n  }\n}\n\nStudentQueueView.propTypes = {\n  onJoin: PropTypes.func.isRequired,\n}\n\nexport default StudentQueueView\n"]},"metadata":{},"sourceType":"module"}