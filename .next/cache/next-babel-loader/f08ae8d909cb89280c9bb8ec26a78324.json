{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { withRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport Layout from '../../components/layout';\nimport { Button, Accordion, List, Icon } from 'semantic-ui-react';\nimport { AuthRequired } from '../../components/authProvider';\nimport Queue from '../../components/queue/queue';\nimport * as api from '../../util/mercuryService';\nimport CreateGroupModal from '../../components/createGroupModal';\nimport StudentInviteModal from '../../components/invite/studentInviteModal';\nimport { EventEmitter } from '../../components/util/EventEmitter';\nimport FeedbackModal from '../../components/feedbackModal';\nimport StudentWebSocketClient from '../../util/studentWebSocket';\nimport TAWebSocketClient from '../../util/taWebSocket';\nimport ReceiveInviteModal from '../../components/invite/receiveInviteModal';\nconst ScreenContainer = dynamic(() => import('../../components/screenContainer'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/screenContainer')],\n    modules: ['../../components/screenContainer']\n  }\n});\nconst CreateDiscussionModal = dynamic(() => import('../../components/createDiscussionModal'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/createDiscussionModal')],\n    modules: ['../../components/createDiscussionModal']\n  }\n});\nconst Vonage = dynamic(() => import('../../components/vonage'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/vonage')],\n    modules: ['../../components/vonage']\n  }\n});\n\nclass ClassPage extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"fetchCurrentClass\", () => {\n      api.getClass(this.classId).then(c => {\n        const userRole = c.users.find(u => u.id === this.user.id);\n        if (!userRole) this.props.router.push('/calendar');\n        this.setState({\n          currentClass: _objectSpread(_objectSpread({}, c), {}, {\n            role: userRole.role\n          })\n        });\n      }).catch(console.error);\n    });\n\n    _defineProperty(this, \"handleBack\", async () => {\n      await this.props.router.push('/calendar');\n    });\n\n    _defineProperty(this, \"handleSelectGroup\", group => {\n      api.postGroupToken(this.classId, group.id).then(({\n        token\n      }) => {\n        this.setState({\n          vonageCred: null\n        });\n        this.setState({\n          vonageCred: {\n            sessionId: group.sessionId,\n            token\n          }\n        });\n        this.setState({\n          currentGroup: group\n        });\n        EventEmitter.publish('currentGroupChange', group);\n      }).catch(console.error);\n    });\n\n    _defineProperty(this, \"handleCreateGroup\", async group => {\n      await api.postGroup(this.classId, group.name, group.type, this.user.id).then(group => {\n        this.fetchCurrentClass();\n        this.handleSelectGroup(group);\n      });\n    });\n\n    this.state = {\n      withTa: false,\n      clicked: 'none',\n      currentGroup: {\n        id: '',\n        name: ''\n      },\n      currentClass: {\n        id: '',\n        name: '',\n        groups: [],\n        users: [],\n        role: 'Student'\n      },\n      vonageCred: null,\n      isMounted: false\n    };\n    this.defineEventEmitterCallbacks();\n  }\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('clearLeftSide', () => {\n      this.setState({\n        withTa: true\n      });\n    });\n  }\n\n  componentDidMount() {\n    const {\n      classId\n    } = this.props.router.query;\n    if (!classId) return;\n    this.classId = Number(classId);\n    api.getMe().then(meData => {\n      this.user = meData;\n    }).then(() => api.getClass(this.classId)).then(c => {\n      const userRole = c.users.find(u => u.id === this.user.id);\n      if (!userRole) this.props.router.push('/calendar');\n      const {\n        role\n      } = userRole;\n      /**\r\n       * Start the appropriate web socket handler depending on the user role\r\n       */\n\n      if (role === 'Student') {\n        new StudentWebSocketClient().start({\n          me: this.user,\n          courseId: this.classId\n        });\n      } else {\n        new TAWebSocketClient().start({\n          me: this.user,\n          courseId: this.classId,\n          onJoin: this.handleSelectGroup\n        });\n      }\n\n      this.setState({\n        currentClass: _objectSpread(_objectSpread({}, c), {}, {\n          role: userRole.role\n        }),\n        isMounted: true\n      });\n      EventEmitter.publish('allOtherStudentsInClass', this.state.currentClass.users.filter(user => user.id !== this.user.id && user.role === 'Student'));\n      EventEmitter.publish('me', this.user);\n    }).catch(console.error);\n    setInterval(() => this.fetchCurrentClass(), 5000);\n  }\n\n  getButtonToDisplay() {\n    return this.state.currentClass.role === 'Student' ? __jsx(CreateGroupModal, {\n      onCreate: this.handleCreateGroup\n    }) : this.state.clicked === 'none' ? __jsx(Button, {\n      color: \"teal\",\n      content: \"Modify Discussions\",\n      fluid: true,\n      style: {\n        fontSize: '1vw'\n      },\n      onClick: () => {\n        this.setState({\n          clicked: 'inline'\n        });\n      }\n    }) : __jsx(React.Fragment, null, __jsx(CreateDiscussionModal, {\n      id: \"createDiscussionModal\",\n      onCreate: this.handleCreateGroup\n    }), __jsx(Button, {\n      color: \"red\",\n      content: \"Done\",\n      fluid: true,\n      style: {\n        fontSize: '1vw',\n        marginTop: '2%'\n      },\n      onClick: () => {\n        this.setState({\n          clicked: 'none'\n        });\n      }\n    }));\n  }\n\n  getDeleteButton(group) {\n    return __jsx(Button, {\n      id: `deletebutton${group.id}`,\n      compact: true,\n      icon: true,\n      size: \"mini\",\n      floated: \"right\",\n      style: {\n        display: `${this.state.clicked}`,\n        fontSize: '.6vw',\n        textAlign: 'center',\n        width: '10%',\n        marginBottom: '2%',\n        minWidth: '10px',\n        backgroundColor: 'transparent'\n      },\n      onClick: () => api.deleteGroup(this.classId, group.id).then(() => this.fetchCurrentClass())\n    }, __jsx(Icon, {\n      name: \"delete\",\n      color: \"red\"\n    }));\n  }\n\n  showInviteButton(group) {\n    const plusIcon = __jsx(List.Icon, {\n      name: \"user plus\",\n      onClick: () => {\n        EventEmitter.publish('openInviteModal', true);\n      }\n    });\n\n    const noPlusIcon = __jsx(\"div\", null);\n\n    return this.state.currentGroup.id == group.id && this.state.vonageCred !== null ? plusIcon : noPlusIcon;\n  }\n\n  getListItemStyle(group) {\n    const unClickedGroupsStyle = {\n      fontSize: '.8vw',\n      textAlign: 'left',\n      width: '80%',\n      marginBottom: '2%',\n      minWidth: '41px',\n      display: 'inline-block'\n    };\n    const clickedGroupsStyle = {\n      fontSize: '.8vw',\n      textAlign: 'left',\n      width: '80%',\n      marginBottom: '2%',\n      minWidth: '41px',\n      background: '#e0e1e2',\n      borderRadius: 10,\n      borderWidth: 1,\n      borderColor: '#fff',\n      display: 'inline-block'\n    };\n    return this.state.currentGroup.id == group.id && this.state.vonageCred !== null ? clickedGroupsStyle : unClickedGroupsStyle;\n  }\n\n  showOffice() {\n    return (this.state.currentClass.role !== 'Student' || this.state.currentGroup.type === 'office') && __jsx(\"div\", {\n      style: {\n        paddingLeft: 20\n      }\n    }, __jsx(List, {\n      relaxed: true,\n      selection: true,\n      verticalAlign: \"middle\"\n    }, this.state.currentClass.groups.filter(group => group.type === 'office').map(group => __jsx(List.Item, {\n      key: `office`,\n      onClick: () => {\n        if (this.state.currentGroup.id !== group.id) {\n          this.handleSelectGroup(group);\n        }\n      },\n      style: this.getListItemStyle(group)\n    }, __jsx(List.Icon, {\n      name: \"graduation cap\"\n    }), __jsx(List.Content, null, __jsx(List.Header, {\n      as: \"a\"\n    }, \"TA Office\")), this.showInviteButton(group)))));\n  }\n\n  leftDisplay() {\n    return this.state.withTa === false ? __jsx(\"div\", {\n      style: {\n        height: '100%',\n        marginLeft: '2.5%'\n      }\n    }, __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 12,\n        width: '100%'\n      },\n      fluid: true\n    }, __jsx(Button, {\n      compact: true,\n      icon: \"angle left\",\n      content: this.state.currentClass.name,\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'left',\n        width: '75%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      onClick: this.handleBack\n    }), __jsx(Button, {\n      compact: true,\n      icon: \"setting\",\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'center',\n        width: '15%',\n        marginBottom: '2%',\n        minWidth: '14px'\n      }\n    })), this.showOffice(), __jsx(Accordion, {\n      fluid: true,\n      exclusive: false,\n      defaultActiveIndex: [0, 1],\n      style: {\n        fontSize: '1vw',\n        textAlign: 'left',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      panels: [{\n        key: 'discussions',\n        title: 'Discussions',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20,\n              height: 200,\n              overflow: 'auto'\n            }\n          }, __jsx(List, {\n            relaxed: true,\n            selection: true\n          }, this.state.currentClass.groups.filter(group => group.type === 'discussion').map(group => __jsx(React.Fragment, null, __jsx(List.Item, {\n            key: `discussion_${group.id}`,\n            onClick: () => {\n              if (this.state.currentGroup.id !== group.id) {\n                this.handleSelectGroup(group);\n              }\n            },\n            style: this.getListItemStyle(group)\n          }, __jsx(List.Icon, {\n            name: \"sound\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name)), this.showInviteButton(group)), this.getDeleteButton(group)))))\n        }\n      }, {\n        key: 'private-groups',\n        title: 'Private Groups',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20,\n              height: 200,\n              overflow: 'auto'\n            }\n          }, __jsx(List, {\n            relaxed: true,\n            selection: true\n          }, this.state.currentClass.groups.filter(group => group.type === 'group').map(group => __jsx(List.Item, {\n            key: `private_group_${group.id}`,\n            onClick: () => {\n              if (this.state.currentGroup.id !== group.id) {\n                this.handleSelectGroup(group);\n              }\n            },\n            style: this.getListItemStyle(group)\n          }, __jsx(List.Icon, {\n            name: \"lock\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name)), this.showInviteButton(group)))))\n        }\n      }]\n    }), __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14\n      }\n    }, this.getButtonToDisplay())) : __jsx(\"div\", null, \" \");\n  }\n\n  render() {\n    if (!this.state.isMounted) {\n      return null;\n    }\n\n    return __jsx(Layout, {\n      left: this.leftDisplay(),\n      right: __jsx(Queue, {\n        onJoin: this.handleSelectGroup\n      })\n    }, this.state.vonageCred && __jsx(ScreenContainer, {\n      style: {\n        width: '100%',\n        maxHeight: '75vh'\n      },\n      sessionId: this.state.vonageCred.sessionId,\n      token: this.state.vonageCred.token,\n      onLeave: () => {\n        this.setState({\n          vonageCred: null,\n          currentGroup: {\n            id: '',\n            name: ''\n          },\n          withTa: false\n        });\n        EventEmitter.publish('currentGroupChange', {\n          id: '',\n          name: ''\n        });\n        EventEmitter.publish('callOver', this.classId);\n      }\n    }), __jsx(StudentInviteModal, null), __jsx(FeedbackModal, null), __jsx(ReceiveInviteModal, {\n      onJoin: this.handleSelectGroup\n    }));\n  }\n\n}\n\nexport default AuthRequired(withRouter(ClassPage));","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/pages/classes/[classId].js"],"names":["React","Component","withRouter","dynamic","Layout","Button","Accordion","List","Icon","AuthRequired","Queue","api","CreateGroupModal","StudentInviteModal","EventEmitter","FeedbackModal","StudentWebSocketClient","TAWebSocketClient","ReceiveInviteModal","ScreenContainer","ssr","CreateDiscussionModal","Vonage","ClassPage","constructor","props","getClass","classId","then","c","userRole","users","find","u","id","user","router","push","setState","currentClass","role","catch","console","error","group","postGroupToken","token","vonageCred","sessionId","currentGroup","publish","postGroup","name","type","fetchCurrentClass","handleSelectGroup","state","withTa","clicked","groups","isMounted","defineEventEmitterCallbacks","subscribe","componentDidMount","query","Number","getMe","meData","start","me","courseId","onJoin","filter","setInterval","getButtonToDisplay","handleCreateGroup","fontSize","marginTop","getDeleteButton","display","textAlign","width","marginBottom","minWidth","backgroundColor","deleteGroup","showInviteButton","plusIcon","noPlusIcon","getListItemStyle","unClickedGroupsStyle","clickedGroupsStyle","background","borderRadius","borderWidth","borderColor","showOffice","paddingLeft","map","leftDisplay","height","marginLeft","handleBack","key","title","content","overflow","position","bottom","render","maxHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { withRouter } from 'next/router'\r\nimport dynamic from 'next/dynamic'\r\nimport Layout from '../../components/layout'\r\nimport { Button, Accordion, List, Icon } from 'semantic-ui-react'\r\nimport { AuthRequired } from '../../components/authProvider'\r\nimport Queue from '../../components/queue/queue'\r\nimport * as api from '../../util/mercuryService'\r\nimport CreateGroupModal from '../../components/createGroupModal'\r\nimport StudentInviteModal from '../../components/invite/studentInviteModal'\r\nimport { EventEmitter } from '../../components/util/EventEmitter'\r\nimport FeedbackModal from '../../components/feedbackModal'\r\nimport StudentWebSocketClient from '../../util/studentWebSocket'\r\nimport TAWebSocketClient from '../../util/taWebSocket'\r\nimport ReceiveInviteModal from '../../components/invite/receiveInviteModal'\r\n\r\nconst ScreenContainer = dynamic(\r\n  () => import('../../components/screenContainer'),\r\n  {\r\n    ssr: false,\r\n  }\r\n)\r\n\r\nconst CreateDiscussionModal = dynamic(\r\n  () => import('../../components/createDiscussionModal'),\r\n  {\r\n    ssr: false,\r\n  }\r\n)\r\nconst Vonage = dynamic(() => import('../../components/vonage'), {\r\n  ssr: false,\r\n})\r\n\r\nclass ClassPage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      withTa: false,\r\n      clicked: 'none',\r\n      currentGroup: { id: '', name: '' },\r\n      currentClass: {\r\n        id: '',\r\n        name: '',\r\n        groups: [],\r\n        users: [],\r\n        role: 'Student',\r\n      },\r\n      vonageCred: null,\r\n      isMounted: false,\r\n    }\r\n    this.defineEventEmitterCallbacks()\r\n  }\r\n\r\n  defineEventEmitterCallbacks() {\r\n    EventEmitter.subscribe('clearLeftSide', () => {\r\n      this.setState({ withTa: true })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { classId } = this.props.router.query\r\n    if (!classId) return\r\n    this.classId = Number(classId)\r\n\r\n    api\r\n      .getMe()\r\n      .then((meData) => {\r\n        this.user = meData\r\n      })\r\n\r\n      .then(() => api.getClass(this.classId))\r\n      .then((c) => {\r\n        const userRole = c.users.find((u) => u.id === this.user.id)\r\n        if (!userRole) this.props.router.push('/calendar')\r\n        const { role } = userRole\r\n\r\n        /**\r\n         * Start the appropriate web socket handler depending on the user role\r\n         */\r\n\r\n        if (role === 'Student') {\r\n          new StudentWebSocketClient().start({\r\n            me: this.user,\r\n            courseId: this.classId,\r\n          })\r\n        } else {\r\n          new TAWebSocketClient().start({\r\n            me: this.user,\r\n            courseId: this.classId,\r\n            onJoin: this.handleSelectGroup,\r\n          })\r\n        }\r\n\r\n        this.setState({\r\n          currentClass: {\r\n            ...c,\r\n            role: userRole.role,\r\n          },\r\n          isMounted: true,\r\n        })\r\n\r\n        EventEmitter.publish(\r\n          'allOtherStudentsInClass',\r\n          this.state.currentClass.users.filter(\r\n            (user) => user.id !== this.user.id && user.role === 'Student'\r\n          )\r\n        )\r\n\r\n        EventEmitter.publish('me', this.user)\r\n      })\r\n      .catch(console.error)\r\n\r\n    setInterval(() => this.fetchCurrentClass(), 5000)\r\n  }\r\n\r\n  fetchCurrentClass = () => {\r\n    api\r\n      .getClass(this.classId)\r\n      .then((c) => {\r\n        const userRole = c.users.find((u) => u.id === this.user.id)\r\n        if (!userRole) this.props.router.push('/calendar')\r\n        this.setState({\r\n          currentClass: {\r\n            ...c,\r\n            role: userRole.role,\r\n          },\r\n        })\r\n      })\r\n      .catch(console.error)\r\n  }\r\n\r\n  handleBack = async () => {\r\n    await this.props.router.push('/calendar')\r\n  }\r\n\r\n  handleSelectGroup = (group) => {\r\n    api\r\n      .postGroupToken(this.classId, group.id)\r\n      .then(({ token }) => {\r\n        this.setState({ vonageCred: null })\r\n        this.setState({ vonageCred: { sessionId: group.sessionId, token } })\r\n        this.setState({ currentGroup: group })\r\n        EventEmitter.publish('currentGroupChange', group)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n\r\n  getButtonToDisplay() {\r\n    return this.state.currentClass.role === 'Student' ? (\r\n      <CreateGroupModal onCreate={this.handleCreateGroup} />\r\n    ) : this.state.clicked === 'none' ? (\r\n      <Button\r\n        color=\"teal\"\r\n        content=\"Modify Discussions\"\r\n        fluid\r\n        style={{ fontSize: '1vw' }}\r\n        onClick={() => {\r\n          this.setState({ clicked: 'inline' })\r\n        }}\r\n      />\r\n    ) : (\r\n      <>\r\n        <CreateDiscussionModal\r\n          id=\"createDiscussionModal\"\r\n          onCreate={this.handleCreateGroup}\r\n        />\r\n        <Button\r\n          color=\"red\"\r\n          content=\"Done\"\r\n          fluid\r\n          style={{ fontSize: '1vw', marginTop: '2%' }}\r\n          onClick={() => {\r\n            this.setState({ clicked: 'none' })\r\n          }}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n\r\n  getDeleteButton(group) {\r\n    return (\r\n      <Button\r\n        id={`deletebutton${group.id}`}\r\n        compact\r\n        icon\r\n        size=\"mini\"\r\n        floated=\"right\"\r\n        style={{\r\n          display: `${this.state.clicked}`,\r\n          fontSize: '.6vw',\r\n          textAlign: 'center',\r\n          width: '10%',\r\n          marginBottom: '2%',\r\n          minWidth: '10px',\r\n          backgroundColor: 'transparent',\r\n        }}\r\n        onClick={() =>\r\n          api\r\n            .deleteGroup(this.classId, group.id)\r\n            .then(() => this.fetchCurrentClass())\r\n        }\r\n      >\r\n        <Icon name=\"delete\" color=\"red\" />\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  handleCreateGroup = async (group) => {\r\n    await api\r\n      .postGroup(this.classId, group.name, group.type, this.user.id)\r\n      .then((group) => {\r\n        this.fetchCurrentClass()\r\n        this.handleSelectGroup(group)\r\n      })\r\n  }\r\n\r\n  showInviteButton(group) {\r\n    const plusIcon = (\r\n      <List.Icon\r\n        name=\"user plus\"\r\n        onClick={() => {\r\n          EventEmitter.publish('openInviteModal', true)\r\n        }}\r\n      />\r\n    )\r\n    const noPlusIcon = <div></div>\r\n\r\n    return this.state.currentGroup.id == group.id &&\r\n      this.state.vonageCred !== null\r\n      ? plusIcon\r\n      : noPlusIcon\r\n  }\r\n\r\n  getListItemStyle(group) {\r\n    const unClickedGroupsStyle = {\r\n      fontSize: '.8vw',\r\n      textAlign: 'left',\r\n      width: '80%',\r\n      marginBottom: '2%',\r\n      minWidth: '41px',\r\n      display: 'inline-block',\r\n    }\r\n\r\n    const clickedGroupsStyle = {\r\n      fontSize: '.8vw',\r\n      textAlign: 'left',\r\n      width: '80%',\r\n      marginBottom: '2%',\r\n      minWidth: '41px',\r\n      background: '#e0e1e2',\r\n      borderRadius: 10,\r\n      borderWidth: 1,\r\n      borderColor: '#fff',\r\n      display: 'inline-block',\r\n    }\r\n\r\n    return this.state.currentGroup.id == group.id &&\r\n      this.state.vonageCred !== null\r\n      ? clickedGroupsStyle\r\n      : unClickedGroupsStyle\r\n  }\r\n\r\n  showOffice() {\r\n    return (\r\n      (this.state.currentClass.role !== 'Student' ||\r\n        this.state.currentGroup.type === 'office') && (\r\n        <div style={{ paddingLeft: 20 }}>\r\n          <List relaxed selection verticalAlign=\"middle\">\r\n            {this.state.currentClass.groups\r\n              .filter((group) => group.type === 'office')\r\n              .map((group) => (\r\n                <List.Item\r\n                  key={`office`}\r\n                  onClick={() => {\r\n                    if (this.state.currentGroup.id !== group.id) {\r\n                      this.handleSelectGroup(group)\r\n                    }\r\n                  }}\r\n                  style={this.getListItemStyle(group)}\r\n                >\r\n                  <List.Icon name=\"graduation cap\" />\r\n                  <List.Content>\r\n                    <List.Header as=\"a\">TA Office</List.Header>\r\n                  </List.Content>\r\n                  {this.showInviteButton(group)}\r\n                </List.Item>\r\n              ))}\r\n          </List>\r\n        </div>\r\n      )\r\n    )\r\n  }\r\n\r\n  leftDisplay() {\r\n    return this.state.withTa === false ? (\r\n      <div style={{ height: '100%', marginLeft: '2.5%' }}>\r\n        <Button.Group\r\n          size=\"huge\"\r\n          style={{ marginBottom: 12, width: '100%' }}\r\n          fluid\r\n        >\r\n          <Button\r\n            compact\r\n            icon=\"angle left\"\r\n            content={this.state.currentClass.name}\r\n            style={{\r\n              fontSize: '1.5vw',\r\n              textAlign: 'left',\r\n              width: '75%',\r\n              marginBottom: '2%',\r\n              minWidth: '41px',\r\n            }}\r\n            onClick={this.handleBack}\r\n          />\r\n          <Button\r\n            compact\r\n            icon=\"setting\"\r\n            style={{\r\n              fontSize: '1.5vw',\r\n              textAlign: 'center',\r\n              width: '15%',\r\n              marginBottom: '2%',\r\n              minWidth: '14px',\r\n            }}\r\n          />\r\n        </Button.Group>\r\n        {this.showOffice()}\r\n        <Accordion\r\n          fluid\r\n          exclusive={false}\r\n          defaultActiveIndex={[0, 1]}\r\n          style={{\r\n            fontSize: '1vw',\r\n            textAlign: 'left',\r\n            width: '100%',\r\n            marginBottom: '2%',\r\n            minWidth: '41px',\r\n          }}\r\n          panels={[\r\n            {\r\n              key: 'discussions',\r\n              title: 'Discussions',\r\n              content: {\r\n                content: (\r\n                  <div\r\n                    style={{ paddingLeft: 20, height: 200, overflow: 'auto' }}\r\n                  >\r\n                    <List relaxed selection>\r\n                      {this.state.currentClass.groups\r\n                        .filter((group) => group.type === 'discussion')\r\n                        .map((group) => (\r\n                          <>\r\n                            <List.Item\r\n                              key={`discussion_${group.id}`}\r\n                              onClick={() => {\r\n                                if (this.state.currentGroup.id !== group.id) {\r\n                                  this.handleSelectGroup(group)\r\n                                }\r\n                              }}\r\n                              style={this.getListItemStyle(group)}\r\n                            >\r\n                              <List.Icon name=\"sound\" />\r\n                              <List.Content>\r\n                                <List.Header as=\"a\">{group.name}</List.Header>\r\n                              </List.Content>\r\n                              {this.showInviteButton(group)}\r\n                            </List.Item>\r\n                            {this.getDeleteButton(group)}\r\n                          </>\r\n                        ))}\r\n                    </List>\r\n                  </div>\r\n                ),\r\n              },\r\n            },\r\n            {\r\n              key: 'private-groups',\r\n              title: 'Private Groups',\r\n              content: {\r\n                content: (\r\n                  <div\r\n                    style={{ paddingLeft: 20, height: 200, overflow: 'auto' }}\r\n                  >\r\n                    <List relaxed selection>\r\n                      {this.state.currentClass.groups\r\n                        .filter((group) => group.type === 'group')\r\n                        .map((group) => (\r\n                          <List.Item\r\n                            key={`private_group_${group.id}`}\r\n                            onClick={() => {\r\n                              if (this.state.currentGroup.id !== group.id) {\r\n                                this.handleSelectGroup(group)\r\n                              }\r\n                            }}\r\n                            style={this.getListItemStyle(group)}\r\n                          >\r\n                            <List.Icon name=\"lock\" />\r\n                            <List.Content>\r\n                              <List.Header as=\"a\">{group.name}</List.Header>\r\n                            </List.Content>\r\n                            {this.showInviteButton(group)}\r\n                          </List.Item>\r\n                        ))}\r\n                    </List>\r\n                  </div>\r\n                ),\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            width: 'calc(100% - 38px)',\r\n            bottom: 14,\r\n          }}\r\n        >\r\n          {this.getButtonToDisplay()}\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <div> </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isMounted) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <Layout\r\n        left={this.leftDisplay()}\r\n        right={<Queue onJoin={this.handleSelectGroup} />}\r\n      >\r\n        {this.state.vonageCred && (\r\n          <ScreenContainer\r\n            style={{ width: '100%', maxHeight: '75vh' }}\r\n            sessionId={this.state.vonageCred.sessionId}\r\n            token={this.state.vonageCred.token}\r\n            onLeave={() => {\r\n              this.setState({\r\n                vonageCred: null,\r\n                currentGroup: { id: '', name: '' },\r\n                withTa: false,\r\n              })\r\n              EventEmitter.publish('currentGroupChange', { id: '', name: '' })\r\n              EventEmitter.publish('callOver', this.classId)\r\n            }}\r\n          />\r\n        )}\r\n        <StudentInviteModal />\r\n        <FeedbackModal />\r\n        <ReceiveInviteModal onJoin={this.handleSelectGroup} />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\nexport default AuthRequired(withRouter(ClassPage))\r\n"]},"metadata":{},"sourceType":"module"}