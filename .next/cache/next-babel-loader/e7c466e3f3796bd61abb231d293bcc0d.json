{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Modal, Button, Header, Search } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nfunction InviteModal({\n  content,\n  buttonText,\n  placeholder\n}) {\n  const {\n    0: modalState,\n    1: toggleModal\n  } = useState(true);\n  return __jsx(\"div\", null, __jsx(Modal, {\n    style: {\n      borderless: 'true',\n      width: '40%',\n      height: '40%'\n    },\n    trigger: __jsx(Button, {\n      onClick: () => toggleModal(true)\n    }, \"+ New Group\"),\n    open: modalState,\n    onClose: () => toggleModal(false),\n    closeOnDimmerClick: false,\n    closeOnEscape: false,\n    closeIcon: true\n  }, __jsx(Modal.Content, {\n    style: {\n      borderless: 'true'\n    }\n  }, __jsx(Header, {\n    style: {\n      fontSize: '2vw',\n      textAlign: 'center',\n      width: '100%',\n      padding: '5%',\n      height: '50%',\n      margin: 'auto'\n    }\n  }, content), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '5%'\n    }\n  }, __jsx(Search, {\n    fluid: true,\n    placeholder: placeholder,\n    input: {\n      fluid: true\n    }\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '70%',\n      height: '70%',\n      margin: 'auto',\n      padding: '5%'\n    }\n  }, __jsx(Button, {\n    color: \"teal\",\n    style: {\n      width: '50%'\n    },\n    onClick: () => toggleModal(false)\n  }, buttonText)))));\n}\n\nInviteModal.propTypes = {\n  content: PropTypes.node,\n  buttonText: PropTypes.string,\n  placeholder: PropTypes.string\n};\nexport default InviteModal;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/inviteModal.js"],"names":["React","useState","Modal","Button","Header","Search","PropTypes","InviteModal","content","buttonText","placeholder","modalState","toggleModal","borderless","width","height","fontSize","textAlign","padding","margin","fluid","propTypes","node","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAArB,EAA2D;AACzD,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA4BX,QAAQ,CAAC,IAAD,CAA1C;AAEA,SACE,mBACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAE;AAAEY,MAAAA,UAAU,EAAE,MAAd;AAAsBC,MAAAA,KAAK,EAAE,KAA7B;AAAoCC,MAAAA,MAAM,EAAE;AAA5C,KADT;AAEE,IAAA,OAAO,EAAE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMH,WAAW,CAAC,IAAD;AAAlC,qBAFX;AAGE,IAAA,IAAI,EAAED,UAHR;AAIE,IAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,KAAD,CAJ5B;AAKE,IAAA,kBAAkB,EAAE,KALtB;AAME,IAAA,aAAa,EAAE,KANjB;AAOE,IAAA,SAAS;AAPX,KASE,MAAC,KAAD,CAAO,OAAP;AAAe,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd;AAAtB,KACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,QAAQ,EAAE,KADL;AAELC,MAAAA,SAAS,EAAE,QAFN;AAGLH,MAAAA,KAAK,EAAE,MAHF;AAILI,MAAAA,OAAO,EAAE,IAJJ;AAKLH,MAAAA,MAAM,EAAE,KALH;AAMLI,MAAAA,MAAM,EAAE;AANH;AADT,KAUGX,OAVH,CADF,EAcE;AACE,IAAA,KAAK,EAAE;AACLS,MAAAA,SAAS,EAAE,QADN;AAELC,MAAAA,OAAO,EAAE;AAFJ;AADT,KAME,MAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,WAAW,EAAER,WAA3B;AAAwC,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAK,EAAE;AAAT;AAA/C,IANF,CAdF,EAuBE;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,SAAS,EAAE,QADN;AAELH,MAAAA,KAAK,EAAE,KAFF;AAGLC,MAAAA,MAAM,EAAE,KAHH;AAILI,MAAAA,MAAM,EAAE,MAJH;AAKLD,MAAAA,OAAO,EAAE;AALJ;AADT,KASE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,KAAK,EAAE;AAAEJ,MAAAA,KAAK,EAAE;AAAT,KAFT;AAGE,IAAA,OAAO,EAAE,MAAMF,WAAW,CAAC,KAAD;AAH5B,KAKGH,UALH,CATF,CAvBF,CATF,CADF,CADF;AAuDD;;AAEDF,WAAW,CAACc,SAAZ,GAAwB;AACtBb,EAAAA,OAAO,EAAEF,SAAS,CAACgB,IADG;AAEtBb,EAAAA,UAAU,EAAEH,SAAS,CAACiB,MAFA;AAGtBb,EAAAA,WAAW,EAAEJ,SAAS,CAACiB;AAHD,CAAxB;AAMA,eAAehB,WAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { Modal, Button, Header, Search } from 'semantic-ui-react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction InviteModal({ content, buttonText, placeholder }) {\r\n  const [modalState, toggleModal] = useState(true)\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        style={{ borderless: 'true', width: '40%', height: '40%' }}\r\n        trigger={<Button onClick={() => toggleModal(true)}>+ New Group</Button>}\r\n        open={modalState}\r\n        onClose={() => toggleModal(false)}\r\n        closeOnDimmerClick={false}\r\n        closeOnEscape={false}\r\n        closeIcon\r\n      >\r\n        <Modal.Content style={{ borderless: 'true' }}>\r\n          <Header\r\n            style={{\r\n              fontSize: '2vw',\r\n              textAlign: 'center',\r\n              width: '100%',\r\n              padding: '5%',\r\n              height: '50%',\r\n              margin: 'auto',\r\n            }}\r\n          >\r\n            {content}\r\n          </Header>\r\n\r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              padding: '5%',\r\n            }}\r\n          >\r\n            <Search fluid placeholder={placeholder} input={{ fluid: true }} />\r\n          </div>\r\n          \r\n          <div\r\n            style={{\r\n              textAlign: 'center',\r\n              width: '70%',\r\n              height: '70%',\r\n              margin: 'auto',\r\n              padding: '5%',\r\n            }}\r\n          >\r\n            <Button\r\n              color=\"teal\"\r\n              style={{ width: '50%' }}\r\n              onClick={() => toggleModal(false)}\r\n            >\r\n              {buttonText}\r\n            </Button>\r\n          </div>\r\n        </Modal.Content>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nInviteModal.propTypes = {\r\n  content: PropTypes.node,\r\n  buttonText: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n}\r\n\r\nexport default InviteModal\r\n"]},"metadata":{},"sourceType":"module"}