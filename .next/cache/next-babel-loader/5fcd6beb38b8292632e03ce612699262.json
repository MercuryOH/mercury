{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Cookies from 'js-cookie';\nimport * as api from '../util/mercuryService';\nimport { Segment } from 'semantic-ui-react';\nvar MERCURY_TOKEN = 'mercury-token';\nvar AuthContext = createContext({});\nexport function AuthProvider(_ref) {\n  var children = _ref.children;\n  var router = useRouter();\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var loadUserFromCookies = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var token, currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              token = Cookies.get(MERCURY_TOKEN);\n\n              if (!token) {\n                _context.next = 7;\n                break;\n              }\n\n              api.setToken(\"Bearer \".concat(token));\n              _context.next = 5;\n              return api.getMe();\n\n            case 5:\n              currentUser = _context.sent;\n              if (currentUser) setUser(currentUser);\n\n            case 7:\n              setLoading(false);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loadUserFromCookies() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    loadUserFromCookies();\n  }, []);\n\n  var login = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n      var loginResponse, currentUser;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.postLogin(email, password);\n\n            case 2:\n              loginResponse = _context2.sent;\n\n              if (!(!loginResponse || !loginResponse.token)) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", null);\n\n            case 5:\n              Cookies.set(MERCURY_TOKEN, loginResponse.token, {\n                expires: 60\n              });\n              api.setToken(\"Bearer \".concat(loginResponse.token));\n              _context2.next = 9;\n              return api.getMe();\n\n            case 9:\n              currentUser = _context2.sent;\n              if (currentUser) setUser(currentUser);\n              return _context2.abrupt(\"return\", currentUser);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function login(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var logout = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              Cookies.remove(MERCURY_TOKEN);\n              setUser(null);\n              _context3.next = 4;\n              return router.push('/login');\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function logout() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      user: user,\n      loading: loading,\n      login: login,\n      logout: logout,\n      isAuthenticated: !!user\n    }\n  }, children);\n}\nexport function AuthRequired(Component) {\n  var _arguments = arguments;\n  return function () {\n    var router = useRouter();\n\n    var _useAuth = useAuth(),\n        isAuthenticated = _useAuth.isAuthenticated,\n        loading = _useAuth.loading;\n\n    useEffect(function () {\n      if (!isAuthenticated && !loading) router.push('/login');\n    }, [loading, isAuthenticated]);\n    return loading ? __jsx(Segment, {\n      style: {\n        height: '100vh'\n      },\n      loading: true\n    }) : __jsx(Component, _arguments);\n  };\n}\nexport function useAuth() {\n  return useContext(AuthContext);\n}","map":null,"metadata":{},"sourceType":"module"}