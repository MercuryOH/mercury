{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nexport default class FormHTMLEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"modules\", {\n      toolbar: [[{\n        header: [1, 2, false]\n      }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n        list: 'ordered'\n      }, {\n        list: 'bullet'\n      }, {\n        indent: '-1'\n      }, {\n        indent: '+1'\n      }], ['link', 'image'], ['clean']],\n      clipboard: {\n        matchVisual: false\n      }\n    });\n\n    _defineProperty(this, \"formats\", ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image']);\n\n    if (false) {\n      this.ReactQuill = require('react-quill');\n    }\n  }\n\n  onChange(event) {\n    console.log(event);\n  }\n\n  render() {\n    const ReactQuill = this.ReactQuill;\n\n    if (false && ReactQuill) {\n      return __jsx(ReactQuill, {\n        modules: this.modules,\n        formats: this.formats,\n        defaultValue: this.props.defaultValue,\n        onChange: this.props.onChange,\n        placeholder: 'Enter Comment'\n      });\n    } else {\n      return __jsx(\"textarea\", null);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/FormHTMLEditor.js"],"names":["React","Component","FormHTMLEditor","constructor","props","toolbar","header","list","indent","clipboard","matchVisual","ReactQuill","require","onChange","event","console","log","render","modules","formats","defaultValue"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACpDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,qCAOT;AACRC,MAAAA,OAAO,EAAE,CACP,CAAC;AAAEC,QAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,KAAP;AAAV,OAAD,CADO,EAEP,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,CAFO,EAGP,CACE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADF,EAEE;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFF,EAGE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAHF,EAIE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OAJF,CAHO,EASP,CAAC,MAAD,EAAS,OAAT,CATO,EAUP,CAAC,OAAD,CAVO,CADD;AAaRC,MAAAA,SAAS,EAAE;AACTC,QAAAA,WAAW,EAAE;AADJ;AAbH,KAPS;;AAAA,qCAyBT,CACR,QADQ,EAER,MAFQ,EAGR,QAHQ,EAIR,WAJQ,EAKR,QALQ,EAMR,YANQ,EAOR,MAPQ,EAQR,QARQ,EASR,QATQ,EAUR,MAVQ,EAWR,OAXQ,CAzBS;;AAEjB,eAAmC;AACjC,WAAKC,UAAL,GAAkBC,OAAO,CAAC,aAAD,CAAzB;AACD;AACF;;AAkCDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAMN,UAAU,GAAG,KAAKA,UAAxB;;AACA,QAAI,SAAiCA,UAArC,EAAiD;AAC/C,aACE,MAAC,UAAD;AACE,QAAA,OAAO,EAAE,KAAKO,OADhB;AAEE,QAAA,OAAO,EAAE,KAAKC,OAFhB;AAGE,QAAA,YAAY,EAAE,KAAKf,KAAL,CAAWgB,YAH3B;AAIE,QAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWS,QAJvB;AAKE,QAAA,WAAW,EAAE;AALf,QADF;AASD,KAVD,MAUO;AACL,aAAO,uBAAP;AACD;AACF;;AA3DmD","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class FormHTMLEditor extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    if (typeof window !== 'undefined') {\r\n      this.ReactQuill = require('react-quill')\r\n    }\r\n  }\r\n\r\n  modules = {\r\n    toolbar: [\r\n      [{ header: [1, 2, false] }],\r\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n      [\r\n        { list: 'ordered' },\r\n        { list: 'bullet' },\r\n        { indent: '-1' },\r\n        { indent: '+1' },\r\n      ],\r\n      ['link', 'image'],\r\n      ['clean'],\r\n    ],\r\n    clipboard: {\r\n      matchVisual: false,\r\n    },\r\n  }\r\n\r\n  formats = [\r\n    'header',\r\n    'bold',\r\n    'italic',\r\n    'underline',\r\n    'strike',\r\n    'blockquote',\r\n    'list',\r\n    'bullet',\r\n    'indent',\r\n    'link',\r\n    'image',\r\n  ]\r\n\r\n  onChange(event) {\r\n    console.log(event)\r\n  }\r\n\r\n  render() {\r\n    const ReactQuill = this.ReactQuill\r\n    if (typeof window !== 'undefined' && ReactQuill) {\r\n      return (\r\n        <ReactQuill\r\n          modules={this.modules}\r\n          formats={this.formats}\r\n          defaultValue={this.props.defaultValue}\r\n          onChange={this.props.onChange}\r\n          placeholder={'Enter Comment'}\r\n        />\r\n      )\r\n    } else {\r\n      return <textarea />\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}