{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Modal, Label, Header, Icon } from 'semantic-ui-react';\nimport { EventEmitter } from '../../util/EventEmitter';\nconst timeOutTime = 15;\nlet currTime = timeOutTime;\nconst granularity = 1000;\nlet timeOut = null;\nlet studentDisconnectTimeout = null;\nexport default class TaWaitingModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalState: false,\n      studentName: '',\n      timeRemaining: currTime\n    };\n    EventEmitter.subscribe('newTAWaitingModalProps', nextProps => {\n      const {\n        inviteNextStudent,\n        nextStudentName\n      } = nextProps;\n      const callBackToUse = inviteNextStudent ? this.startTimer : this.endTimer;\n      this.setState({\n        modalState: inviteNextStudent,\n        studentName: nextStudentName\n      }, callBackToUse);\n    });\n  }\n\n  clearAllTimeouts() {\n    if (timeOut) {\n      clearTimeout(timeOut);\n    }\n\n    if (studentDisconnectTimeout) {\n      clearTimeout(studentDisconnectTimeout);\n    }\n  }\n\n  startTimer() {\n    this.clearAllTimeouts();\n    currTime = timeOutTime;\n    timeOut = setTimeout(this.tick.bind(this), granularity);\n    this.setState({\n      timeRemaining: currTime\n    });\n  }\n\n  endTimer() {\n    this.clearAllTimeouts();\n  }\n\n  endModalWaitingOnTimeout() {\n    EventEmitter.publish('removeTAWaitingModalOnTimeout');\n  }\n\n  tick() {\n    currTime -= 1;\n\n    if (currTime === 0) {\n      studentDisconnectTimeout = setTimeout(this.endModalWaitingOnTimeout.bind(this), 3000);\n      return;\n    } else {\n      timeOut = setTimeout(this.tick.bind(this), granularity);\n      this.setState({\n        timeRemaining: currTime\n      });\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Modal, {\n      style: {\n        borderless: 'true',\n        width: '40%',\n        height: '40%'\n      },\n      open: this.state.modalState,\n      onClose: () => this.setState({\n        modalState: false\n      }),\n      closeOnDimmerClick: false,\n      closeOnEscape: false\n    }, __jsx(Label, {\n      style: {\n        width: '100%',\n        textAlign: 'center'\n      }\n    }, __jsx(Icon, {\n      name: \"hourglass\"\n    }), this.state.timeRemaining), __jsx(Modal.Content, {\n      style: {\n        borderless: 'true'\n      }\n    }, __jsx(Header, {\n      style: {\n        fontSize: '2vw',\n        textAlign: 'center',\n        width: '100%',\n        padding: 50,\n        height: '50%',\n        margin: 'auto'\n      }\n    }, `Waiting For ${this.state.studentName} To Respond...`), __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '5%',\n        padding: 30,\n        flexDirection: 'row'\n      }\n    }))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}