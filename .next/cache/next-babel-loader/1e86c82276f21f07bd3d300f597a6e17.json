{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ScreenPublisher from './screenPublisher';\nimport { OTPublisher } from 'opentok-react';\nimport { Button } from 'semantic-ui-react';\nimport { EventEmitter } from './util/EventEmitter';\n\nvar Publisher = /*#__PURE__*/function (_Component) {\n  _inherits(Publisher, _Component);\n\n  var _super = _createSuper(Publisher);\n\n  function Publisher(props) {\n    var _this;\n\n    _classCallCheck(this, Publisher);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"onError\", function (err) {\n      _this.setState({\n        error: \"Failed to publish: \".concat(err.message)\n      });\n    });\n\n    _this.state = {\n      error: null,\n      audio: true,\n      video: true\n    };\n    return _this;\n  }\n\n  _createClass(Publisher, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", null, this.state.error ? __jsx(\"div\", null, this.state.error) : null, __jsx(OTPublisher, {\n        properties: {\n          width: '100%',\n          height: '50vh',\n          publishVideo: this.state.video\n        },\n        onError: this.onError\n      }), __jsx(ScreenPublisher, null), __jsx(Button, {\n        onClick: function onClick() {\n          EventEmitter.publish('startScreenShare');\n\n          _this2.setState({\n            video: false\n          });\n        },\n        content: \"Share Screen\"\n      }));\n    }\n  }]);\n\n  return Publisher;\n}(Component);\n\nexport { Publisher as default };","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/publisher.js"],"names":["React","Component","ScreenPublisher","OTPublisher","Button","EventEmitter","Publisher","props","err","setState","error","message","state","audio","video","width","height","publishVideo","onError","publish"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,YAAT,QAA6B,qBAA7B;;IAEqBC,S;;;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,8DAUT,UAACC,GAAD,EAAS;AACjB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,+BAAwBF,GAAG,CAACG,OAA5B;AAAP,OAAd;AACD,KAZkB;;AAGjB,UAAKC,KAAL,GAAa;AACXF,MAAAA,KAAK,EAAE,IADI;AAEXG,MAAAA,KAAK,EAAE,IAFI;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAHiB;AAQlB;;;;6BAMQ;AAAA;;AACP,aACE,mBACG,KAAKF,KAAL,CAAWF,KAAX,GAAmB,mBAAM,KAAKE,KAAL,CAAWF,KAAjB,CAAnB,GAAmD,IADtD,EAEE,MAAC,WAAD;AACE,QAAA,UAAU,EAAE;AACVK,UAAAA,KAAK,EAAE,MADG;AAEVC,UAAAA,MAAM,EAAE,MAFE;AAGVC,UAAAA,YAAY,EAAE,KAAKL,KAAL,CAAWE;AAHf,SADd;AAME,QAAA,OAAO,EAAE,KAAKI;AANhB,QAFF,EAUE,MAAC,eAAD,OAVF,EAWE,MAAC,MAAD;AACI,QAAA,OAAO,EAAI,mBAAM;AACbb,UAAAA,YAAY,CAACc,OAAb,CAAqB,kBAArB;;AACA,UAAA,MAAI,CAACV,QAAL,CAAc;AAACK,YAAAA,KAAK,EAAE;AAAR,WAAd;AACD,SAJP;AAMI,QAAA,OAAO,EAAG;AANd,QAXF,CADF;AAsBD;;;;EAtCoCb,S;;SAAlBK,S","sourcesContent":["import React, { Component } from 'react'\nimport ScreenPublisher from './screenPublisher'\nimport { OTPublisher } from 'opentok-react'\nimport { Button } from 'semantic-ui-react'\nimport { EventEmitter } from './util/EventEmitter'\n\nexport default class Publisher extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n      audio: true,\n      video: true,\n    };\n  }\n\n  onError = (err) => {\n    this.setState({ error: `Failed to publish: ${err.message}` });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.error ? <div>{this.state.error}</div> : null}\n        <OTPublisher\n          properties={{\n            width: '100%',\n            height: '50vh',\n            publishVideo: this.state.video\n          }}\n          onError={this.onError}\n        />\n        <ScreenPublisher/>\n        <Button\n            onClick = {() => {\n                EventEmitter.publish('startScreenShare')\n                this.setState({video: false})\n              }\n            }\n            content = \"Share Screen\"\n          />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}