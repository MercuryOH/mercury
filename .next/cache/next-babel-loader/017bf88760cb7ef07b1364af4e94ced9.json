{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport { Accordion, List, Button } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\nimport { AuthRequired } from '../components/authProvider';\nimport * as api from '../util/mercuryService';\nimport Link from 'next/Link';\n\nfunction DropDown() {\n  _s();\n\n  var _useState = useState([]),\n      classes = _useState[0],\n      setClasses = _useState[1];\n\n  useEffect(function () {\n    api.getClasses().then(function (classes) {\n      return setClasses(classes);\n    })[\"catch\"](console.error);\n  }, []);\n  var colors = ['red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown', 'gray', 'black'];\n  var sClasses = classes;\n  /*const sClasses = [\r\n      'CS 2110',\r\n      'CS 2800',\r\n      'MATH 2940',\r\n    ]*/\n\n  var taClasses = ['CS 1110'];\n\n  function zip() {\n    var args = [].slice.call(arguments);\n    var shortest = args.length == 0 ? [] : args.reduce(function (a, b) {\n      return a.length < b.length ? a : b;\n    });\n    return shortest.map(function (_, i) {\n      return args.map(function (array) {\n        return array[i];\n      });\n    });\n  }\n\n  return __jsx(\"div\", null, __jsx(Accordion, {\n    fluid: true,\n    exclusive: false,\n    defaultActiveIndex: [0, 1],\n    panels: [{\n      key: 'student',\n      title: 'Student',\n      content: {\n        content: __jsx(\"div\", null, __jsx(List, {\n          relaxed: true\n        }, __jsx(React.Fragment, null, classes.map(function (classs) {\n          return __jsx(List.Item, {\n            key: \"class_\".concat(classs.id)\n          }, __jsx(List.Content, null, __jsx(Link, {\n            href: \"/classes/\".concat(classs.id)\n          }, __jsx(Button, {\n            style: {\n              fontSize: '1vw',\n              width: '100%',\n              minWidth: '41px'\n            }\n          }, classs.name))));\n        }))))\n      }\n    }, {\n      key: 'ta',\n      title: 'TA',\n      content: {\n        content: __jsx(\"div\", null, __jsx(List, {\n          relaxed: true\n        }, zip(colors, taClasses).map(function (zipped) {\n          return __jsx(List.Item, null, __jsx(List.Content, null, __jsx(Button, {\n            color: zipped[0],\n            content: zipped[1],\n            style: {\n              fontSize: '1vw',\n              width: '100%',\n              minWidth: '41px'\n            }\n          })));\n        })))\n      }\n    }]\n  }));\n}\n\n_s(DropDown, \"qT6ik07+VfcioBDcO2AwZweM5SY=\");\n\n_c = DropDown;\nexport default DropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/dropDown.js"],"names":["React","Component","useEffect","useState","Accordion","List","Button","useRouter","AuthRequired","api","Link","DropDown","classes","setClasses","getClasses","then","console","error","colors","sClasses","taClasses","zip","args","slice","call","arguments","shortest","length","reduce","a","b","map","_","i","array","key","title","content","classs","id","fontSize","width","minWidth","name","zipped"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\r\nimport { Accordion, List, Button } from 'semantic-ui-react'\r\nimport { useRouter } from 'next/router'\r\nimport { AuthRequired } from '../components/authProvider'\r\nimport * as api from '../util/mercuryService'\r\nimport Link from 'next/Link'\r\n\r\nfunction DropDown() {\r\n  const [classes, setClasses] = useState([])\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getClasses()\r\n      .then((classes) => setClasses(classes))\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n  const colors = [\r\n    'red',\r\n    'orange',\r\n    'yellow',\r\n    'olive',\r\n    'green',\r\n    'teal',\r\n    'blue',\r\n    'violet',\r\n    'purple',\r\n    'pink',\r\n    'brown',\r\n    'gray',\r\n    'black',\r\n  ]\r\n\r\n  const sClasses = classes\r\n\r\n  /*const sClasses = [\r\n      'CS 2110',\r\n      'CS 2800',\r\n      'MATH 2940',\r\n    ]*/\r\n\r\n  const taClasses = ['CS 1110']\r\n\r\n  function zip() {\r\n    var args = [].slice.call(arguments)\r\n    var shortest =\r\n      args.length == 0\r\n        ? []\r\n        : args.reduce(function (a, b) {\r\n            return a.length < b.length ? a : b\r\n          })\r\n\r\n    return shortest.map(function (_, i) {\r\n      return args.map(function (array) {\r\n        return array[i]\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Accordion\r\n        fluid\r\n        exclusive={false}\r\n        defaultActiveIndex={[0, 1]}\r\n        panels={[\r\n          {\r\n            key: 'student',\r\n            title: 'Student',\r\n            content: {\r\n              content: (\r\n                <div>\r\n                  <List relaxed>\r\n                    <>\r\n                      {classes.map((classs) => (\r\n                        <List.Item key={`class_${classs.id}`}>\r\n                          <List.Content>\r\n                            <Link href={`/classes/${classs.id}`}>\r\n                              <Button\r\n                                style={{\r\n                                  fontSize: '1vw',\r\n                                  width: '100%',\r\n                                  minWidth: '41px',\r\n                                }}\r\n                              >\r\n                                {classs.name}\r\n                              </Button>\r\n                            </Link>\r\n                          </List.Content>\r\n                        </List.Item>\r\n                      ))}\r\n                    </>\r\n                  </List>\r\n                </div>\r\n              ),\r\n            },\r\n          },\r\n          {\r\n            key: 'ta',\r\n            title: 'TA',\r\n            content: {\r\n              content: (\r\n                <div>\r\n                  <List relaxed>\r\n                    {zip(colors, taClasses).map((zipped) => (\r\n                      <List.Item>\r\n                        <List.Content>\r\n                          <Button\r\n                            color={zipped[0]}\r\n                            content={zipped[1]}\r\n                            style={{\r\n                              fontSize: '1vw',\r\n                              width: '100%',\r\n                              minWidth: '41px',\r\n                            }}\r\n                          ></Button>\r\n                        </List.Content>\r\n                      </List.Item>\r\n                    ))}\r\n                  </List>\r\n                </div>\r\n              ),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropDown\r\n"]},"metadata":{},"sourceType":"module"}