{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Header, Search, Input } from 'semantic-ui-react';\n\nfunction CreateDiscussionModal({\n  onCreate\n}) {\n  const {\n    0: name,\n    1: setDiscussionName\n  } = useState('');\n  const {\n    0: modalState,\n    1: toggleModal\n  } = useState(false);\n\n  async function createDiscussion() {\n    if (!name) return;\n    toggleModal(false);\n    onCreate({\n      name,\n      type: 'discussion'\n    });\n  }\n\n  return __jsx(\"div\", null, __jsx(Modal, {\n    style: {\n      borderless: 'true',\n      width: '40%',\n      height: '40%'\n    },\n    trigger: __jsx(Button, {\n      color: \"teal\",\n      content: \"Modify Discussions\",\n      fluid: true,\n      style: {\n        fontSize: '1vw'\n      },\n      onClick: () => toggleModal(true)\n    }),\n    open: modalState,\n    onClose: () => toggleModal(false),\n    closeOnDimmerClick: false,\n    closeOnEscape: false,\n    closeIcon: true\n  }, __jsx(Modal.Content, {\n    style: {\n      borderless: 'true'\n    }\n  }, __jsx(Header, {\n    style: {\n      fontSize: '2vw',\n      textAlign: 'center',\n      width: '100%',\n      padding: '5%',\n      height: '50%',\n      margin: 'auto'\n    },\n    content: 'New Discussion'\n  }), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '5%'\n    }\n  }, __jsx(Input, {\n    placeholder: \"Discussion name\",\n    name: \"name\",\n    value: name,\n    onChange: e => setDiscussionName(e.target.value)\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '70%',\n      height: '70%',\n      margin: 'auto',\n      padding: '5%'\n    }\n  }, __jsx(Button, {\n    color: \"teal\",\n    style: {\n      width: '50%',\n      fontSize: '1vw'\n    },\n    onClick: createDiscussion,\n    content: 'Create'\n  })))));\n}\n\nCreateDiscussionModal.propTypes = {\n  onCreate: PropTypes.func.isRequired\n};\nexport default CreateDiscussionModal;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/createDiscussionModal.js"],"names":["React","useState","PropTypes","Modal","Button","Header","Search","Input","CreateDiscussionModal","onCreate","name","setDiscussionName","modalState","toggleModal","createDiscussion","type","borderless","width","height","fontSize","textAlign","padding","margin","e","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Modal, Button, Header, Search, Input } from 'semantic-ui-react'\n\nfunction CreateDiscussionModal({ onCreate }) {\n  const [name, setDiscussionName] = useState('')\n  const [modalState, toggleModal] = useState(false)\n\n  async function createDiscussion() {\n    if (!name) return\n\n    toggleModal(false)\n    onCreate({ name, type: 'discussion' })\n  }\n\n  return (\n    <div>\n      <Modal\n        style={{ borderless: 'true', width: '40%', height: '40%' }}\n        trigger={\n          <Button\n            color=\"teal\"\n            content=\"Modify Discussions\"\n            fluid\n            style={{ fontSize: '1vw' }}\n            onClick={() => toggleModal(true)}\n          />\n        }\n        open={modalState}\n        onClose={() => toggleModal(false)}\n        closeOnDimmerClick={false}\n        closeOnEscape={false}\n        closeIcon\n      >\n        <Modal.Content style={{ borderless: 'true' }}>\n          <Header\n            style={{\n              fontSize: '2vw',\n              textAlign: 'center',\n              width: '100%',\n              padding: '5%',\n              height: '50%',\n              margin: 'auto',\n            }}\n            content={'New Discussion'}\n          />\n\n          <div\n            style={{\n              textAlign: 'center',\n              padding: '5%',\n            }}\n          >\n            <Input\n              placeholder=\"Discussion name\"\n              name=\"name\"\n              value={name}\n              onChange={(e) => setDiscussionName(e.target.value)}\n            />\n          </div>\n\n          <div\n            style={{\n              textAlign: 'center',\n              width: '70%',\n              height: '70%',\n              margin: 'auto',\n              padding: '5%',\n            }}\n          >\n            <Button\n              color=\"teal\"\n              style={{ width: '50%', fontSize: '1vw' }}\n              onClick={createDiscussion}\n              content={'Create'}\n            />\n          </div>\n        </Modal.Content>\n      </Modal>\n    </div>\n  )\n}\n\nCreateDiscussionModal.propTypes = {\n  onCreate: PropTypes.func.isRequired,\n}\n\nexport default CreateDiscussionModal\n"]},"metadata":{},"sourceType":"module"}