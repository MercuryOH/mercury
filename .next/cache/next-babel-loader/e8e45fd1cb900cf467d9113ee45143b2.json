{"ast":null,"code":"import axios from 'axios';\nvar token = '';\nexport function setToken(t) {\n  token = t;\n}\nexport async function postLogin(email, password) {\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    });\n    return data;\n  } catch (e) {\n    return null;\n  }\n}\nexport async function submitFeedback(ClassId, stars, comments) {\n  try {\n    const {\n      data\n    } = await axios.post(`/api/feedback/`, {\n      ClassId,\n      stars,\n      comments\n    }, {\n      headers: {\n        authorization: token\n      }\n    });\n    return data;\n  } catch (e) {\n    return null;\n  }\n}\nexport async function postGroup(classId, name, type, userId) {\n  try {\n    const {\n      data\n    } = await axios.post(`/api/classes/${classId}/groups`, {\n      name,\n      type,\n      userId\n    }, {\n      headers: {\n        authorization: token\n      }\n    });\n    return data;\n  } catch (e) {\n    return null;\n  }\n}\nexport async function getMe() {\n  try {\n    const {\n      data\n    } = await axios.get('/api/users/me', {\n      headers: {\n        authorization: token\n      }\n    });\n    return data;\n  } catch (e) {\n    return null;\n  }\n}\nexport async function getClass(classId) {\n  const {\n    data\n  } = await axios.get(`/api/classes/${classId}`, {\n    headers: {\n      authorization: token\n    }\n  });\n  return data;\n}\nexport async function getClassUsers(classId) {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/users/${classId}`, {\n      headers: {\n        authorization: token\n      }\n    });\n    return data;\n  } catch (e) {\n    return null;\n  }\n}\nexport async function getGroups(classId) {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/classes/${classId}/groups`, {\n      headers: {\n        authorization: token\n      }\n    });\n    return data;\n  } catch (e) {\n    return [];\n  }\n}\nexport async function getClasses() {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/classes/`, {\n      headers: {\n        authorization: token\n      }\n    });\n    return data;\n  } catch (e) {\n    return [];\n  }\n}\nexport async function postGroupToken(classId, groupId) {\n  try {\n    const {\n      data\n    } = await axios.post(`/api/classes/${classId}/groups/${groupId}/token`, {}, {\n      headers: {\n        authorization: token\n      }\n    });\n    return data;\n  } catch (e) {\n    return null;\n  }\n}\nexport async function deleteGroup(classId, groupId) {\n  try {\n    await axios.delete(`/api/classes/${classId}/groups/${groupId}`, {\n      headers: {\n        authorization: token\n      }\n    });\n    return null;\n  } catch (e) {\n    return null;\n  }\n}\nexport async function getGroupByID(classId, groupId) {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/classes/${classId}/groups/${groupId}`, {\n      headers: {\n        authorization: token\n      }\n    });\n    return data;\n  } catch (e) {\n    return null;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}