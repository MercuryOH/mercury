{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport YourTurnModal from './yourTurnModal';\nimport { Label, Button } from 'semantic-ui-react';\nimport { EventEmitter } from '../../util/EventEmitter';\nconst QueueDiv = styled.div.withConfig({\n  displayName: \"studentQueueView__QueueDiv\",\n  componentId: \"sc-1qcvoz5-0\"\n})([\"grid-gap:2vh;\"]);\nconst QueueLabel = styled(Label).withConfig({\n  displayName: \"studentQueueView__QueueLabel\",\n  componentId: \"sc-1qcvoz5-1\"\n})([\"text-align:center;\"]);\n/**\n * This is how the student views the Queue\n */\n\nclass StudentQueueView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayStudentsStyle: {\n        display: 'grid'\n      },\n      iconToDisplay: 'caret square down outline',\n      studentsInQueue: [],\n      me: this.props.me,\n      inQueue: false,\n      isYourTurn: false,\n      currStudentBeingHelped: '',\n      isReadyToRender: false,\n      office: this.props.office,\n      inCallWithTA: false,\n      currentGroup: {\n        id: '',\n        name: ''\n      },\n      onJoin: this.props.onJoin\n    };\n    this.defineEventEmitterCallbacks();\n  }\n  /**\n   * Define EventEmitter subscribers\n   */\n\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('activateYourTurnModal', TAName => {\n      this.setState({\n        inQueue: false\n      });\n      EventEmitter.publish('startYourTurnModalTimer', TAName);\n    });\n    EventEmitter.subscribe('updateStudentsInQueue', msg => {\n      this.setState({\n        studentsInQueue: msg.map(({\n          fullName\n        }) => fullName)\n      });\n    });\n    EventEmitter.subscribe('addMeToQueue', () => {\n      this.setState({\n        inQueue: true\n      });\n    });\n    EventEmitter.subscribe('removeMeFromQueue', () => {\n      this.setState({\n        inQueue: false\n      });\n    });\n    EventEmitter.subscribe('studentTimeout', TAName => {\n      EventEmitter.publish('signalStudentTimeout', TAName);\n      this.createTimeoutNotification();\n    });\n    EventEmitter.subscribe('studentJoinTA', TAName => {\n      const {\n        office,\n        onJoin,\n        me\n      } = this.state;\n      EventEmitter.publish('signalJoinTA', {\n        group: office,\n        TAName,\n        me\n      });\n      onJoin(office);\n      this.setState({\n        inQueue: false,\n        inCallWithTA: true\n      });\n    });\n    EventEmitter.subscribe('studentInviteTA', TAName => {\n      const {\n        currentGroup,\n        me\n      } = this.state;\n      EventEmitter.publish('signalJoinTA', {\n        group: currentGroup,\n        TAName,\n        me\n      });\n      this.setState({\n        inQueue: false,\n        inCallWithTA: true\n      });\n    });\n    EventEmitter.subscribe('studentDeclineTA', TAName => {\n      EventEmitter.publish('signalDeclineTA', TAName);\n      this.setState({\n        inQueue: false\n      });\n    });\n    EventEmitter.subscribe('currentGroupChange', currentGroup => {\n      this.setState({\n        currentGroup\n      });\n    });\n    EventEmitter.subscribe('callOver', classId => {\n      const {\n        inCallWithTA\n      } = this.state;\n\n      if (inCallWithTA) {\n        EventEmitter.publish('signalCallOver');\n        EventEmitter.publish('activateFeedbackModal', classId);\n        this.setState({\n          inCallWithTA: false,\n          currStudentBeingHelped: ''\n        });\n      }\n    });\n    EventEmitter.subscribe('updateCurrStudent', currStudentBeingHelped => {\n      this.setState({\n        currStudentBeingHelped\n      });\n    });\n    EventEmitter.subscribe('initializeQueueOnGreeting', ({\n      currStudent,\n      studentsInQueue\n    }) => {\n      const {\n        id: myId\n      } = this.state.me;\n      const inQueue = studentsInQueue.filter(({\n        id\n      }) => id === myId).length > 0;\n      this.setState({\n        currStudentBeingHelped: currStudent,\n        studentsInQueue: studentsInQueue.map(({\n          fullName\n        }) => fullName),\n        inQueue\n      });\n    });\n  }\n\n  createTimeoutNotification() {\n    EventEmitter.publish('createNotification', 'Your Invitation Has Expired');\n  }\n\n  isStudentDisplayed() {\n    let {\n      display\n    } = this.state.displayStudentsStyle;\n    return display === 'grid';\n  }\n\n  alterStudentDisplay() {\n    let displayStudentsStyle = this.isStudentDisplayed() ? {\n      display: 'none'\n    } : {\n      display: 'grid'\n    };\n    let iconToDisplay = this.isStudentDisplayed() ? 'caret square up outline' : 'caret square down outline';\n    this.setState({\n      displayStudentsStyle,\n      iconToDisplay\n    });\n  }\n\n  addMeToQueue() {\n    const {\n      firstName,\n      lastName\n    } = this.state.me;\n    const fullName = `${firstName} ${lastName}`;\n\n    if (this.state.studentsInQueue.indexOf(fullName) >= 0 || this.state.currStudentBeingHelped === fullName) {\n      return;\n    }\n\n    EventEmitter.publish('signalAddMeToQueue');\n  }\n\n  removeMeFromQueue() {\n    const {\n      firstName,\n      lastName\n    } = this.state.me;\n    const fullName = `${firstName} ${lastName}`;\n\n    if (this.state.studentsInQueue.indexOf(fullName) < 0) {\n      return;\n    }\n\n    EventEmitter.publish('signalRemoveMeFromQueue');\n  }\n\n  getButtonToDisplay() {\n    if (this.state.inCallWithTA) {\n      return null;\n    }\n\n    const buttonToDisplay = this.state.inQueue ? __jsx(Button, {\n      onClick: this.removeMeFromQueue.bind(this),\n      style: {\n        width: '100%',\n        fontSize: '1vw'\n      },\n      secondary: true\n    }, \"Leave Queue\") : __jsx(Button, {\n      onClick: this.addMeToQueue.bind(this),\n      style: {\n        width: '100%',\n        fontSize: '1vw'\n      },\n      primary: true\n    }, \"Join Queue\");\n    return __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14,\n        display: 'inline-flex'\n      }\n    }, buttonToDisplay);\n  }\n\n  componentDidMount() {\n    EventEmitter.publish('greeting');\n    this.setState({\n      isReadyToRender: true\n    });\n  }\n\n  createCurrStudentLabel() {\n    const {\n      currStudentBeingHelped\n    } = this.state;\n\n    if (currStudentBeingHelped.length == 0) {\n      return null;\n    }\n\n    return __jsx(QueueLabel, {\n      style: {\n        fontSize: '1.2vw',\n        textAlign: 'center',\n        width: '95%',\n        marginBottom: '2%',\n        minWidth: '41px',\n        marginLeft: '.8%',\n        backgroundColor: 'red',\n        marginRight: '1%'\n      },\n      key: currStudentBeingHelped\n    }, currStudentBeingHelped);\n  }\n\n  createQueueLabel(student) {\n    return __jsx(QueueLabel, {\n      style: {\n        fontSize: '1.2vw',\n        textAlign: 'center',\n        width: '95%',\n        marginBottom: '2%',\n        minWidth: '41px',\n        marginLeft: '.8%',\n        marginRight: '1%'\n      },\n      key: student\n    }, student);\n  }\n\n  render() {\n    const {\n      isReadyToRender\n    } = this.state;\n\n    if (!isReadyToRender) {\n      return null;\n    }\n\n    const queueLabels = this.isStudentDisplayed() ? this.state.studentsInQueue.map(this.createQueueLabel) : [];\n    return __jsx(QueueDiv, null, __jsx(YourTurnModal, null), __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 12,\n        width: '95%'\n      },\n      fluid: true,\n      vertical: true\n    }, __jsx(Button, {\n      compact: true,\n      content: \"Queue\",\n      icon: this.state.iconToDisplay,\n      labelPosition: \"right\",\n      onClick: this.alterStudentDisplay.bind(this),\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'center',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      }\n    })), this.createCurrStudentLabel(), __jsx(QueueDiv, {\n      style: {\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      }\n    }, queueLabels), this.getButtonToDisplay());\n  }\n\n}\n\nStudentQueueView.propTypes = {\n  onJoin: PropTypes.func.isRequired\n};\nexport default StudentQueueView;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/queue/student/studentQueueView.js"],"names":["React","Component","PropTypes","styled","YourTurnModal","Label","Button","EventEmitter","QueueDiv","div","QueueLabel","StudentQueueView","constructor","props","state","displayStudentsStyle","display","iconToDisplay","studentsInQueue","me","inQueue","isYourTurn","currStudentBeingHelped","isReadyToRender","office","inCallWithTA","currentGroup","id","name","onJoin","defineEventEmitterCallbacks","subscribe","TAName","setState","publish","msg","map","fullName","createTimeoutNotification","group","classId","currStudent","myId","filter","length","isStudentDisplayed","alterStudentDisplay","addMeToQueue","firstName","lastName","indexOf","removeMeFromQueue","getButtonToDisplay","buttonToDisplay","bind","width","fontSize","position","bottom","componentDidMount","createCurrStudentLabel","textAlign","marginBottom","minWidth","marginLeft","backgroundColor","marginRight","createQueueLabel","student","render","queueLabels","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport YourTurnModal from './yourTurnModal'\nimport { Label, Button } from 'semantic-ui-react'\nimport { EventEmitter } from '../../util/EventEmitter'\n\nconst QueueDiv = styled.div`\n  grid-gap: 2vh;\n`\n\nconst QueueLabel = styled(Label)`\n  text-align: center;\n`\n\n/**\n * This is how the student views the Queue\n */\n\nclass StudentQueueView extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      displayStudentsStyle: { display: 'grid' },\n      iconToDisplay: 'caret square down outline',\n      studentsInQueue: [],\n      me: this.props.me,\n      inQueue: false,\n      isYourTurn: false,\n      currStudentBeingHelped: '',\n      isReadyToRender: false,\n      office: this.props.office,\n      inCallWithTA: false,\n      currentGroup: { id: '', name: '' },\n      onJoin: this.props.onJoin,\n    }\n\n    this.defineEventEmitterCallbacks()\n  }\n\n  /**\n   * Define EventEmitter subscribers\n   */\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('activateYourTurnModal', (TAName) => {\n      this.setState({ inQueue: false })\n      EventEmitter.publish('startYourTurnModalTimer', TAName)\n    })\n\n    EventEmitter.subscribe('updateStudentsInQueue', (msg) => {\n      this.setState({\n        studentsInQueue: msg.map(({ fullName }) => fullName),\n      })\n    })\n\n    EventEmitter.subscribe('addMeToQueue', () => {\n      this.setState({ inQueue: true })\n    })\n\n    EventEmitter.subscribe('removeMeFromQueue', () => {\n      this.setState({ inQueue: false })\n    })\n\n    EventEmitter.subscribe('studentTimeout', (TAName) => {\n      EventEmitter.publish('signalStudentTimeout', TAName)\n      this.createTimeoutNotification()\n    })\n\n    EventEmitter.subscribe('studentJoinTA', (TAName) => {\n      const { office, onJoin, me } = this.state\n      EventEmitter.publish('signalJoinTA', { group: office, TAName, me })\n      onJoin(office)\n      this.setState({ inQueue: false, inCallWithTA: true })\n    })\n\n    EventEmitter.subscribe('studentInviteTA', (TAName) => {\n      const { currentGroup, me } = this.state\n      EventEmitter.publish('signalJoinTA', { group: currentGroup, TAName, me })\n      this.setState({ inQueue: false, inCallWithTA: true })\n    })\n\n    EventEmitter.subscribe('studentDeclineTA', (TAName) => {\n      EventEmitter.publish('signalDeclineTA', TAName)\n      this.setState({ inQueue: false })\n    })\n\n    EventEmitter.subscribe('currentGroupChange', (currentGroup) => {\n      this.setState({ currentGroup })\n    })\n\n    EventEmitter.subscribe('callOver', (classId) => {\n      const { inCallWithTA } = this.state\n\n      if (inCallWithTA) {\n        EventEmitter.publish('signalCallOver')\n        EventEmitter.publish('activateFeedbackModal', classId)\n        this.setState({ inCallWithTA: false, currStudentBeingHelped: '' })\n      }\n    })\n\n    EventEmitter.subscribe('updateCurrStudent', (currStudentBeingHelped) => {\n      this.setState({ currStudentBeingHelped })\n    })\n\n    EventEmitter.subscribe(\n      'initializeQueueOnGreeting',\n      ({ currStudent, studentsInQueue }) => {\n        const { id: myId } = this.state.me\n        const inQueue =\n          studentsInQueue.filter(({ id }) => id === myId).length > 0\n        this.setState({\n          currStudentBeingHelped: currStudent,\n          studentsInQueue: studentsInQueue.map(({ fullName }) => fullName),\n          inQueue,\n        })\n      }\n    )\n  }\n\n  createTimeoutNotification() {\n    EventEmitter.publish('createNotification', 'Your Invitation Has Expired')\n  }\n\n  isStudentDisplayed() {\n    let { display } = this.state.displayStudentsStyle\n    return display === 'grid'\n  }\n\n  alterStudentDisplay() {\n    let displayStudentsStyle = this.isStudentDisplayed()\n      ? { display: 'none' }\n      : { display: 'grid' }\n\n    let iconToDisplay = this.isStudentDisplayed()\n      ? 'caret square up outline'\n      : 'caret square down outline'\n\n    this.setState({ displayStudentsStyle, iconToDisplay })\n  }\n\n  addMeToQueue() {\n    const { firstName, lastName } = this.state.me\n    const fullName = `${firstName} ${lastName}`\n\n    if (\n      this.state.studentsInQueue.indexOf(fullName) >= 0 ||\n      this.state.currStudentBeingHelped === fullName\n    ) {\n      return\n    }\n\n    EventEmitter.publish('signalAddMeToQueue')\n  }\n\n  removeMeFromQueue() {\n    const { firstName, lastName } = this.state.me\n    const fullName = `${firstName} ${lastName}`\n\n    if (this.state.studentsInQueue.indexOf(fullName) < 0) {\n      return\n    }\n\n    EventEmitter.publish('signalRemoveMeFromQueue')\n  }\n\n  getButtonToDisplay() {\n    if (this.state.inCallWithTA) {\n      return null\n    }\n\n    const buttonToDisplay = this.state.inQueue ? (\n      <Button\n        onClick={this.removeMeFromQueue.bind(this)}\n        style={{ width: '100%', fontSize: '1vw' }}\n        secondary\n      >\n        Leave Queue\n      </Button>\n    ) : (\n      <Button\n        onClick={this.addMeToQueue.bind(this)}\n        style={{ width: '100%', fontSize: '1vw' }}\n        primary\n      >\n        Join Queue\n      </Button>\n    )\n\n    return (\n      <div\n        style={{\n          position: 'absolute',\n          width: 'calc(100% - 38px)',\n          bottom: 14,\n          display: 'inline-flex',\n        }}\n      >\n        {buttonToDisplay}\n      </div>\n    )\n  }\n\n  componentDidMount() {\n    EventEmitter.publish('greeting')\n    this.setState({ isReadyToRender: true })\n  }\n\n  createCurrStudentLabel() {\n    const { currStudentBeingHelped } = this.state\n\n    if (currStudentBeingHelped.length == 0) {\n      return null\n    }\n\n    return (\n      <QueueLabel\n        style={{\n          fontSize: '1.2vw',\n          textAlign: 'center',\n          width: '95%',\n          marginBottom: '2%',\n          minWidth: '41px',\n          marginLeft: '.8%',\n          backgroundColor: 'red',\n          marginRight: '1%',\n        }}\n        key={currStudentBeingHelped}\n      >\n        {currStudentBeingHelped}\n      </QueueLabel>\n    )\n  }\n\n  createQueueLabel(student) {\n    return (\n      <QueueLabel\n        style={{\n          fontSize: '1.2vw',\n          textAlign: 'center',\n          width: '95%',\n          marginBottom: '2%',\n          minWidth: '41px',\n          marginLeft: '.8%',\n          marginRight: '1%',\n        }}\n        key={student}\n      >\n        {student}\n      </QueueLabel>\n    )\n  }\n\n  render() {\n    const { isReadyToRender } = this.state\n\n    if (!isReadyToRender) {\n      return null\n    }\n\n    const queueLabels = this.isStudentDisplayed()\n      ? this.state.studentsInQueue.map(this.createQueueLabel)\n      : []\n\n    return (\n      <QueueDiv>\n        <YourTurnModal />\n\n        <Button.Group\n          size=\"huge\"\n          style={{ marginBottom: 12, width: '95%' }}\n          fluid\n          vertical\n        >\n          <Button\n            compact\n            content=\"Queue\"\n            icon={this.state.iconToDisplay}\n            labelPosition=\"right\"\n            onClick={this.alterStudentDisplay.bind(this)}\n            style={{\n              fontSize: '1.5vw',\n              textAlign: 'center',\n              width: '100%',\n              marginBottom: '2%',\n              minWidth: '41px',\n            }}\n          />\n        </Button.Group>\n\n        {this.createCurrStudentLabel()}\n\n        <QueueDiv\n          style={{ width: '100%', marginBottom: '2%', minWidth: '41px' }}\n        >\n          {queueLabels}\n        </QueueDiv>\n        {this.getButtonToDisplay()}\n      </QueueDiv>\n    )\n  }\n}\n\nStudentQueueView.propTypes = {\n  onJoin: PropTypes.func.isRequired,\n}\n\nexport default StudentQueueView\n"]},"metadata":{},"sourceType":"module"}