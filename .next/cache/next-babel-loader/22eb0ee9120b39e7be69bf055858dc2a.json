{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport dynamic from 'next/dynamic';\nimport Layout from '../../components/layout';\nimport { Button, Accordion, List } from 'semantic-ui-react';\nimport { AuthRequired } from '../../components/authProvider';\nimport Queue from '../../components/queue/queue';\nimport * as api from '../../util/mercuryService';\nimport CreateGroupModal from '../../components/createGroupModal';\nconst Vonage = dynamic(() => import('../../components/vonage'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../../components/vonage')],\n    modules: ['../../components/vonage']\n  }\n});\n\nfunction ClassPage() {\n  const router = useRouter();\n  const {\n    0: groups,\n    1: setGroups,\n    2: classes,\n    3: setClasses\n  } = useState([]);\n  const {\n    0: vonageCred,\n    1: setVonageCred\n  } = useState(null);\n  const {\n    classId\n  } = router.query;\n  useEffect(() => {\n    if (!classId) return;\n    api.getGroups(classId).then(groups => setGroups(groups)).catch(console.error);\n  }, [classId]);\n  useEffect(() => {\n    api.getClasses().then(classes => setClasses(groups)).catch(console.error);\n  }, []);\n\n  function getClassName(classList) {\n    var correctClass = '';\n    classList.forEach(c => {\n      if (c.id === classId) {\n        correctClass = c.name;\n      }\n    });\n    return correctClass;\n  }\n\n  const handleBack = () => {\n    router.push('/calendar');\n  };\n\n  const handleSelectGroup = group => {\n    api.postGroupToken(classId, group.id).then(({\n      token\n    }) => setVonageCred({\n      sessionId: group.sessionId,\n      token\n    })).catch(console.error);\n  };\n\n  return __jsx(Layout, {\n    left: __jsx(\"div\", {\n      style: {\n        height: '100%'\n      }\n    }, __jsx(Button.Group, {\n      size: \"huge\",\n      style: {\n        marginBottom: 12,\n        width: '100%',\n        marginLeft: '1%'\n      },\n      fluid: true\n    }, __jsx(Button, {\n      compact: true,\n      icon: \"angle left\",\n      content: \"Class.name\",\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'left',\n        width: '75%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      onClick: handleBack\n    }), __jsx(Button, {\n      compact: true,\n      icon: \"setting\",\n      style: {\n        fontSize: '1.5vw',\n        textAlign: 'center',\n        width: '15%',\n        marginBottom: '2%',\n        minWidth: '14px'\n      }\n    })), __jsx(Accordion, {\n      fluid: true,\n      exclusive: false,\n      defaultActiveIndex: [0, 1],\n      style: {\n        fontSize: '1vw',\n        textAlign: 'left',\n        width: '100%',\n        marginBottom: '2%',\n        minWidth: '41px'\n      },\n      panels: [{\n        key: 'discussions',\n        title: 'Discussions',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20\n            }\n          }, __jsx(List, {\n            relaxed: true\n          }, groups.filter(group => group.type === 'discussion').map(group => __jsx(List.Item, {\n            key: `discussion_${group.id}`,\n            onClick: () => handleSelectGroup(group),\n            style: {\n              fontSize: '1vw',\n              textAlign: 'left',\n              width: '75%',\n              marginBottom: '2%',\n              minWidth: '41px'\n            }\n          }, __jsx(List.Icon, {\n            name: \"sound\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name))))))\n        }\n      }, {\n        key: 'private-groups',\n        title: 'Private Groups',\n        content: {\n          content: __jsx(\"div\", {\n            style: {\n              paddingLeft: 20\n            }\n          }, __jsx(List, {\n            relaxed: true\n          }, groups.filter(group => group.type === 'group').map(group => __jsx(List.Item, {\n            key: `private_group_${group.id}`,\n            onClick: () => handleSelectGroup(group),\n            style: {\n              fontSize: '1vw',\n              textAlign: 'left',\n              width: '75%',\n              marginBottom: '2%',\n              minWidth: '41px'\n            }\n          }, __jsx(List.Icon, {\n            name: \"lock\"\n          }), __jsx(List.Content, null, __jsx(List.Header, {\n            as: \"a\"\n          }, group.name))))))\n        }\n      }]\n    }), __jsx(\"div\", {\n      style: {\n        position: 'absolute',\n        width: 'calc(100% - 38px)',\n        bottom: 14\n      }\n    }, __jsx(CreateGroupModal, null))),\n    right: __jsx(Queue, null)\n  }, vonageCred && __jsx(Vonage, {\n    sessionId: vonageCred.sessionId,\n    token: vonageCred.token,\n    onLeave: () => setVonageCred(null)\n  }));\n}\n\nexport default AuthRequired(ClassPage);","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/pages/classes/[classId].js"],"names":["React","useEffect","useState","useRouter","dynamic","Layout","Button","Accordion","List","AuthRequired","Queue","api","CreateGroupModal","Vonage","ssr","ClassPage","router","groups","setGroups","classes","setClasses","vonageCred","setVonageCred","classId","query","getGroups","then","catch","console","error","getClasses","getClassName","classList","correctClass","forEach","c","id","name","handleBack","push","handleSelectGroup","group","postGroupToken","token","sessionId","height","marginBottom","width","marginLeft","fontSize","textAlign","minWidth","key","title","content","paddingLeft","filter","type","map","position","bottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\nimport dynamic from 'next/dynamic'\nimport Layout from '../../components/layout'\nimport { Button, Accordion, List } from 'semantic-ui-react'\nimport { AuthRequired } from '../../components/authProvider'\nimport Queue from '../../components/queue/queue'\nimport * as api from '../../util/mercuryService'\nimport CreateGroupModal from '../../components/createGroupModal'\n\nconst Vonage = dynamic(() => import('../../components/vonage'), {\n  ssr: false,\n})\n\nfunction ClassPage() {\n  const router = useRouter()\n  const [groups, setGroups, classes, setClasses] = useState([])\n  const [vonageCred, setVonageCred] = useState(null)\n  const { classId } = router.query\n\n  useEffect(() => {\n    if (!classId) return\n\n    api\n      .getGroups(classId)\n      .then((groups) => setGroups(groups))\n      .catch(console.error)\n  }, [classId])\n\n  useEffect(() => {\n    api\n      .getClasses()\n      .then((classes) => setClasses(groups))\n      .catch(console.error)\n  }, [])\n\n  function getClassName(classList) {\n    var correctClass = ''\n    classList.forEach((c) => {\n      if (c.id === classId) {\n        correctClass = c.name\n      }\n    })\n    return correctClass\n  }\n\n  const handleBack = () => {\n    router.push('/calendar')\n  }\n\n  const handleSelectGroup = (group) => {\n    api\n      .postGroupToken(classId, group.id)\n      .then(({ token }) => setVonageCred({ sessionId: group.sessionId, token }))\n      .catch(console.error)\n  }\n\n  return (\n    <Layout\n      left={\n        <div style={{ height: '100%' }}>\n          <Button.Group\n            size=\"huge\"\n            style={{ marginBottom: 12, width: '100%', marginLeft: '1%' }}\n            fluid\n          >\n            <Button\n              compact\n              icon=\"angle left\"\n              content=\"Class.name\"\n              style={{\n                fontSize: '1.5vw',\n                textAlign: 'left',\n                width: '75%',\n                marginBottom: '2%',\n                minWidth: '41px',\n              }}\n              onClick={handleBack}\n            />\n            <Button\n              compact\n              icon=\"setting\"\n              style={{\n                fontSize: '1.5vw',\n                textAlign: 'center',\n                width: '15%',\n                marginBottom: '2%',\n                minWidth: '14px',\n              }}\n            />\n          </Button.Group>\n          <Accordion\n            fluid\n            exclusive={false}\n            defaultActiveIndex={[0, 1]}\n            style={{\n              fontSize: '1vw',\n              textAlign: 'left',\n              width: '100%',\n              marginBottom: '2%',\n              minWidth: '41px',\n            }}\n            panels={[\n              {\n                key: 'discussions',\n                title: 'Discussions',\n                content: {\n                  content: (\n                    <div style={{ paddingLeft: 20 }}>\n                      <List relaxed>\n                        {groups\n                          .filter((group) => group.type === 'discussion')\n                          .map((group) => (\n                            <List.Item\n                              key={`discussion_${group.id}`}\n                              onClick={() => handleSelectGroup(group)}\n                              style={{\n                                fontSize: '1vw',\n                                textAlign: 'left',\n                                width: '75%',\n                                marginBottom: '2%',\n                                minWidth: '41px',\n                              }}\n                            >\n                              <List.Icon name=\"sound\" />\n                              <List.Content>\n                                <List.Header as=\"a\">{group.name}</List.Header>\n                              </List.Content>\n                            </List.Item>\n                          ))}\n                      </List>\n                    </div>\n                  ),\n                },\n              },\n              {\n                key: 'private-groups',\n                title: 'Private Groups',\n                content: {\n                  content: (\n                    <div style={{ paddingLeft: 20 }}>\n                      <List relaxed>\n                        {groups\n                          .filter((group) => group.type === 'group')\n                          .map((group) => (\n                            <List.Item\n                              key={`private_group_${group.id}`}\n                              onClick={() => handleSelectGroup(group)}\n                              style={{\n                                fontSize: '1vw',\n                                textAlign: 'left',\n                                width: '75%',\n                                marginBottom: '2%',\n                                minWidth: '41px',\n                              }}\n                            >\n                              <List.Icon name=\"lock\" />\n                              <List.Content>\n                                <List.Header as=\"a\">{group.name}</List.Header>\n                              </List.Content>\n                            </List.Item>\n                          ))}\n                      </List>\n                    </div>\n                  ),\n                },\n              },\n            ]}\n          />\n          <div\n            style={{\n              position: 'absolute',\n              width: 'calc(100% - 38px)',\n              bottom: 14,\n            }}\n          >\n            <CreateGroupModal />\n          </div>\n        </div>\n      }\n      right={<Queue />}\n    >\n      {vonageCred && (\n        <Vonage\n          sessionId={vonageCred.sessionId}\n          token={vonageCred.token}\n          onLeave={() => setVonageCred(null)}\n        />\n      )}\n    </Layout>\n  )\n}\n\nexport default AuthRequired(ClassPage)\n"]},"metadata":{},"sourceType":"module"}