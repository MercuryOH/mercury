{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Header, Search, Input } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { EventEmitter } from './util/EventEmitter';\nimport SearchBar from './invite/searchBar';\nvar initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\n\nvar CreateGroupModal = /*#__PURE__*/function (_Component) {\n  _inherits(CreateGroupModal, _Component);\n\n  var _super = _createSuper(CreateGroupModal);\n\n  function CreateGroupModal(props) {\n    var _this;\n\n    _classCallCheck(this, CreateGroupModal);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"createGroup\", function () {\n      if (!_this.state.groupName) return; //this.props.onInvite({ selectedUser: this.state.selectedUser })\n      // if (!this.state.selectedUser) return\n      // EventEmitter.publish('selectedUser', this.state.selectedUser)\n\n      _this.setState({\n        modalState: false\n      });\n\n      _this.props.onCreate({\n        name: _this.state.groupName,\n        type: 'group'\n      });\n    });\n\n    _this.state = {\n      modalState: false,\n      groupName: '' // isLoading: false,\n      // results: [],\n      // value: '',\n      // allUsers: [],\n      // selectedUser: {},\n      // me: {},\n      // currentGroup: { id: '', name: '' },\n\n    }; // this.defineEventEmitterCallbacks()\n\n    return _this;\n  } // defineEventEmitterCallbacks() {\n  //   EventEmitter.subscribe('allOtherStudentsInClass', (users) => {\n  //     this.setState({ allUsers: users })\n  //   })\n  //   EventEmitter.subscribe('me', (me) => {\n  //     this.setState({ me })\n  //   })\n  //   EventEmitter.subscribe('currentGroupChange', (currentGroup) => {\n  //     this.setState({ currentGroup })\n  //   })\n  // }\n  // formatAsResults = (user) => {\n  //   return {\n  //     title: user.firstName + ' ' + user.lastName,\n  //     id: user.id,\n  //     description: user.email,\n  //   }\n  // }\n  // handleResultSelect = (e, { result }) => {\n  //   this.setState({\n  //     value: result.title,\n  //     selectedUser: result,\n  //   })\n  // }\n  // handleSearchChange = (e, { value }) => {\n  //   this.setState({ isLoading: true, value })\n  //   setTimeout(() => {\n  //     if (this.state.value.length < 1) return this.setState(initialState)\n  //     const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n  //     const isMatch = (result) =>\n  //       re.test(result.title) || re.test(result.description)\n  //     this.setState({\n  //       isLoading: false,\n  //       results: _.filter(\n  //         this.state.allUsers.map(this.formatAsResults),\n  //         isMatch\n  //       ),\n  //     })\n  //   }, 300)\n  // }\n\n\n  _createClass(CreateGroupModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", null, __jsx(Modal, {\n        style: {\n          borderless: 'true',\n          width: '40%',\n          height: '40%'\n        },\n        trigger: __jsx(Button, {\n          color: \"teal\",\n          icon: \"add\",\n          content: \"New Group\",\n          fluid: true,\n          style: {\n            fontSize: '1vw'\n          },\n          onClick: function onClick() {\n            return _this2.setState({\n              groupName: '',\n              value: '',\n              modalState: true\n            });\n          }\n        }),\n        open: this.state.modalState,\n        onClose: function onClose() {\n          return _this2.setState({\n            modalState: false\n          });\n        },\n        closeOnDimmerClick: false,\n        closeOnEscape: false,\n        closeIcon: true\n      }, __jsx(Modal.Content, {\n        style: {\n          borderless: 'true'\n        }\n      }, __jsx(Header, {\n        style: {\n          fontSize: '2vw',\n          textAlign: 'center',\n          width: '100%',\n          padding: '5%',\n          height: '50%',\n          margin: 'auto'\n        },\n        content: 'New Private Group'\n      }), __jsx(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '5%'\n        }\n      }, __jsx(Input, {\n        fluid: true,\n        placeholder: \"Group name\",\n        name: \"name\",\n        value: this.state.groupName,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            groupName: e.target.value\n          });\n        }\n      })), __jsx(\"div\", {\n        style: {\n          textAlign: 'center',\n          width: '70%',\n          height: '70%',\n          margin: 'auto',\n          padding: '5%'\n        }\n      }, __jsx(Button, {\n        color: \"teal\",\n        style: {\n          width: '50%',\n          fontSize: '1vw'\n        },\n        onClick: this.createGroup,\n        content: 'Create'\n      })))));\n    }\n  }]);\n\n  return CreateGroupModal;\n}(Component);\n\nCreateGroupModal.propTypes = {\n  onCreate: PropTypes.func.isRequired\n};\nexport default CreateGroupModal;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/createGroupModal.js"],"names":["React","Component","PropTypes","Modal","Button","Header","Search","Input","_","EventEmitter","SearchBar","initialState","isLoading","results","value","CreateGroupModal","props","state","groupName","setState","modalState","onCreate","name","type","borderless","width","height","fontSize","textAlign","padding","margin","e","target","createGroup","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Modal, Button, Header, Search, Input } from 'semantic-ui-react'\r\nimport _ from 'lodash'\r\nimport { EventEmitter } from './util/EventEmitter'\r\nimport SearchBar from './invite/searchBar'\r\n\r\nconst initialState = { isLoading: false, results: [], value: '' }\r\n\r\nclass CreateGroupModal extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      modalState: false,\r\n      groupName: '',\r\n      // isLoading: false,\r\n      // results: [],\r\n      // value: '',\r\n      // allUsers: [],\r\n      // selectedUser: {},\r\n      // me: {},\r\n      // currentGroup: { id: '', name: '' },\r\n    }\r\n\r\n    // this.defineEventEmitterCallbacks()\r\n  }\r\n\r\n  // defineEventEmitterCallbacks() {\r\n  //   EventEmitter.subscribe('allOtherStudentsInClass', (users) => {\r\n  //     this.setState({ allUsers: users })\r\n  //   })\r\n\r\n  //   EventEmitter.subscribe('me', (me) => {\r\n  //     this.setState({ me })\r\n  //   })\r\n\r\n  //   EventEmitter.subscribe('currentGroupChange', (currentGroup) => {\r\n  //     this.setState({ currentGroup })\r\n  //   })\r\n  // }\r\n\r\n  // formatAsResults = (user) => {\r\n  //   return {\r\n  //     title: user.firstName + ' ' + user.lastName,\r\n  //     id: user.id,\r\n  //     description: user.email,\r\n  //   }\r\n  // }\r\n\r\n  // handleResultSelect = (e, { result }) => {\r\n  //   this.setState({\r\n  //     value: result.title,\r\n  //     selectedUser: result,\r\n  //   })\r\n  // }\r\n\r\n  // handleSearchChange = (e, { value }) => {\r\n  //   this.setState({ isLoading: true, value })\r\n\r\n  //   setTimeout(() => {\r\n  //     if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n  //     const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n  //     const isMatch = (result) =>\r\n  //       re.test(result.title) || re.test(result.description)\r\n\r\n  //     this.setState({\r\n  //       isLoading: false,\r\n  //       results: _.filter(\r\n  //         this.state.allUsers.map(this.formatAsResults),\r\n  //         isMatch\r\n  //       ),\r\n  //     })\r\n  //   }, 300)\r\n  // }\r\n\r\n  createGroup = () => {\r\n    if (!this.state.groupName) return\r\n    //this.props.onInvite({ selectedUser: this.state.selectedUser })\r\n    // if (!this.state.selectedUser) return\r\n    // EventEmitter.publish('selectedUser', this.state.selectedUser)\r\n\r\n    this.setState({ modalState: false })\r\n    this.props.onCreate({ name: this.state.groupName, type: 'group' })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          style={{ borderless: 'true', width: '40%', height: '40%' }}\r\n          trigger={\r\n            <Button\r\n              color=\"teal\"\r\n              icon=\"add\"\r\n              content=\"New Group\"\r\n              fluid\r\n              style={{ fontSize: '1vw' }}\r\n              onClick={() =>\r\n                this.setState({ groupName: '', value: '', modalState: true })\r\n              }\r\n            />\r\n          }\r\n          open={this.state.modalState}\r\n          onClose={() => this.setState({ modalState: false })}\r\n          closeOnDimmerClick={false}\r\n          closeOnEscape={false}\r\n          closeIcon\r\n        >\r\n          <Modal.Content style={{ borderless: 'true' }}>\r\n            <Header\r\n              style={{\r\n                fontSize: '2vw',\r\n                textAlign: 'center',\r\n                width: '100%',\r\n                padding: '5%',\r\n                height: '50%',\r\n                margin: 'auto',\r\n              }}\r\n              content={'New Private Group'}\r\n            />\r\n\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                padding: '5%',\r\n              }}\r\n            >\r\n              <Input\r\n                fluid\r\n                placeholder=\"Group name\"\r\n                name=\"name\"\r\n                value={this.state.groupName}\r\n                onChange={(e) => this.setState({ groupName: e.target.value })}\r\n              />\r\n              {/* <br />\r\n              <br />\r\n              <Search\r\n                fluid\r\n                placeholder=\"Invite student...\"\r\n                input={{ fluid: true }}\r\n                loading={this.state.isLoading}\r\n                onResultSelect={this.handleResultSelect}\r\n                onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n                  leading: true,\r\n                })}\r\n                results={this.state.results}\r\n                value={this.state.value}\r\n              /> */}\r\n              {/* <SearchBar /> */}\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                width: '70%',\r\n                height: '70%',\r\n                margin: 'auto',\r\n                padding: '5%',\r\n              }}\r\n            >\r\n              <Button\r\n                color=\"teal\"\r\n                style={{ width: '50%', fontSize: '1vw' }}\r\n                onClick={this.createGroup}\r\n                content={'Create'}\r\n              />\r\n            </div>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nCreateGroupModal.propTypes = {\r\n  onCreate: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default CreateGroupModal\r\n"]},"metadata":{},"sourceType":"module"}