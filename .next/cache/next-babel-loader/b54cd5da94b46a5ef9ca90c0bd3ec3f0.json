{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Modal, Button, Search, Label, Icon } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { EventEmitter } from '../util/EventEmitter';\nimport SearchBar from './searchBar';\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\n\nclass StudentInviteModal extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"formatAsResults\", user => {\n      return {\n        title: user.firstName + ' ' + user.lastName,\n        id: user.id,\n        description: user.email\n      };\n    });\n\n    _defineProperty(this, \"handleInvite\", () => {\n      EventEmitter.publish('openInviteModal', false);\n      if (_.isEmpty(this.state.selectedUser)) return;\n      console.log(_.map(this.state.selectedUser, 'id'));\n      EventEmitter.publish('sendOutInvite', {\n        sender: this.state.me,\n        recepientIds: _.map(this.state.selectedUser, 'id'),\n        group: this.state.currentGroup\n      });\n      this.setState({\n        value: '',\n        selectedUser: [],\n        modalState: false\n      });\n    });\n\n    _defineProperty(this, \"handleClose\", () => {\n      this.setState({\n        value: '',\n        selectedUser: [],\n        modalState: false\n      });\n      EventEmitter.publish('openInviteModal', false);\n    });\n\n    _defineProperty(this, \"handleResultSelect\", (e, {\n      result\n    }) => {\n      const filtered = this.state.selectedUser.filter(user => user.id !== result.id);\n      filtered.push(result);\n      this.setState({\n        value: '',\n        selectedUser: filtered\n      });\n    });\n\n    _defineProperty(this, \"handleSearchChange\", (e, {\n      value\n    }) => {\n      this.setState({\n        isLoading: true,\n        value\n      });\n      setTimeout(() => {\n        if (this.state.value.length < 1) return this.setState(initialState);\n        const re = new RegExp(_.escapeRegExp(this.state.value), 'i');\n\n        const isMatch = result => re.test(result.title) || re.test(result.description);\n\n        this.setState({\n          isLoading: false,\n          results: _.filter(this.state.allUsers.map(this.formatAsResults), isMatch)\n        });\n      }, 300);\n    });\n\n    _defineProperty(this, \"removeSelected\", user => {\n      this.setState({\n        selectedUser: this.state.selectedUser.filter(u => u.id !== user.id) // selectedUser: {},\n\n      });\n    });\n\n    this.state = {\n      modalState: false,\n      isLoading: false,\n      results: [],\n      value: '',\n      allUsers: [],\n      selectedUser: [],\n      me: {},\n      currentGroup: {\n        id: '',\n        name: ''\n      }\n    };\n    this.defineEventEmitterCallbacks();\n  }\n\n  defineEventEmitterCallbacks() {\n    EventEmitter.subscribe('openInviteModal', openInviteModal => {\n      this.setState({\n        modalState: openInviteModal\n      });\n    });\n    EventEmitter.subscribe('me', me => {\n      this.setState({\n        me\n      });\n    });\n    EventEmitter.subscribe('allOtherStudentsInClass', users => {\n      this.setState({\n        allUsers: users\n      });\n    });\n    EventEmitter.subscribe('currentGroupChange', currentGroup => {\n      this.setState({\n        currentGroup\n      });\n    });\n  }\n\n  getSelectedLabels() {\n    // if (_.isEmpty(this.state.selectedUser)) {\n    //   return <></>\n    // }\n    // return (\n    //   <div\n    //     style={{\n    //       textAlign: 'left',\n    //       paddingLeft: 80,\n    //       paddingRight: 80,\n    //     }}\n    //   >\n    //     <Label>\n    //       {this.state.selectedUser.title}\n    //       <Icon\n    //         name=\"delete\"\n    //         onClick={() => this.removeSelected(this.state.selectedUser)}\n    //       />\n    //     </Label>\n    //   </div>\n    // )\n    if (_.isEmpty(this.state.selectedUser)) {\n      return __jsx(React.Fragment, null);\n    }\n\n    return __jsx(\"div\", {\n      style: {\n        textAlign: 'left',\n        paddingLeft: 80,\n        paddingRight: 80\n      }\n    }, this.state.selectedUser.map(user => __jsx(Label, null, user.title, __jsx(Icon, {\n      name: \"delete\",\n      onClick: () => this.removeSelected(user)\n    }))));\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Modal, {\n      style: {\n        borderless: 'true',\n        width: '40%',\n        height: '40%'\n      },\n      open: this.state.modalState,\n      onClose: this.handleClose,\n      closeOnDimmerClick: false,\n      closeOnEscape: false,\n      closeIcon: true\n    }, __jsx(Modal.Content, {\n      style: {\n        borderless: 'true'\n      }\n    }, __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        paddingTop: 80,\n        paddingLeft: 80,\n        paddingRight: 80,\n        paddingBottom: 20\n      }\n    }, __jsx(Search, {\n      fluid: true,\n      placeholder: \"Invite student...\",\n      input: {\n        fluid: true\n      },\n      loading: this.state.isLoading,\n      onResultSelect: this.handleResultSelect,\n      onSearchChange: _.debounce(this.handleSearchChange, 500, {\n        leading: true\n      }),\n      results: this.state.results,\n      value: this.state.value\n    })), this.getSelectedLabels(), __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        width: '70%',\n        height: '70%',\n        margin: 'auto',\n        padding: 30\n      }\n    }, __jsx(Button, {\n      color: \"teal\",\n      style: {\n        width: '50%',\n        fontSize: '1vw'\n      },\n      onClick: this.handleInvite\n    }, \"Invite\")))));\n  }\n\n}\n\nexport default StudentInviteModal;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/invite/studentInviteModal.js"],"names":["React","Component","Modal","Button","Search","Label","Icon","_","EventEmitter","SearchBar","initialState","isLoading","results","value","StudentInviteModal","constructor","props","user","title","firstName","lastName","id","description","email","publish","isEmpty","state","selectedUser","console","log","map","sender","me","recepientIds","group","currentGroup","setState","modalState","e","result","filtered","filter","push","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","allUsers","formatAsResults","u","name","defineEventEmitterCallbacks","subscribe","openInviteModal","users","getSelectedLabels","textAlign","paddingLeft","paddingRight","removeSelected","render","borderless","width","height","handleClose","paddingTop","paddingBottom","fluid","handleResultSelect","debounce","handleSearchChange","leading","margin","padding","fontSize","handleInvite"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Modal, Button, Search, Label, Icon } from 'semantic-ui-react'\r\nimport _ from 'lodash'\r\nimport { EventEmitter } from '../util/EventEmitter'\r\nimport SearchBar from './searchBar'\r\n\r\nconst initialState = { isLoading: false, results: [], value: '' }\r\n\r\nclass StudentInviteModal extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      modalState: false,\r\n      isLoading: false,\r\n      results: [],\r\n      value: '',\r\n      allUsers: [],\r\n      selectedUser: [],\r\n      me: {},\r\n      currentGroup: { id: '', name: '' },\r\n    }\r\n\r\n    this.defineEventEmitterCallbacks()\r\n  }\r\n\r\n  defineEventEmitterCallbacks() {\r\n    EventEmitter.subscribe('openInviteModal', (openInviteModal) => {\r\n      this.setState({ modalState: openInviteModal })\r\n    })\r\n\r\n    EventEmitter.subscribe('me', (me) => {\r\n      this.setState({ me })\r\n    })\r\n\r\n    EventEmitter.subscribe('allOtherStudentsInClass', (users) => {\r\n      this.setState({ allUsers: users })\r\n    })\r\n\r\n    EventEmitter.subscribe('currentGroupChange', (currentGroup) => {\r\n      this.setState({ currentGroup })\r\n    })\r\n  }\r\n\r\n  formatAsResults = (user) => {\r\n    return {\r\n      title: user.firstName + ' ' + user.lastName,\r\n      id: user.id,\r\n      description: user.email,\r\n    }\r\n  }\r\n\r\n  handleInvite = () => {\r\n    EventEmitter.publish('openInviteModal', false)\r\n\r\n    if (_.isEmpty(this.state.selectedUser)) return\r\n    console.log(_.map(this.state.selectedUser, 'id'))\r\n    EventEmitter.publish('sendOutInvite', {\r\n      sender: this.state.me,\r\n      recepientIds: _.map(this.state.selectedUser, 'id'),\r\n      group: this.state.currentGroup,\r\n    })\r\n\r\n    this.setState({ value: '', selectedUser: [], modalState: false })\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ value: '', selectedUser: [], modalState: false })\r\n    EventEmitter.publish('openInviteModal', false)\r\n  }\r\n\r\n  handleResultSelect = (e, { result }) => {\r\n    const filtered = this.state.selectedUser.filter(\r\n      (user) => user.id !== result.id\r\n    )\r\n    filtered.push(result)\r\n    this.setState({\r\n      value: '',\r\n      selectedUser: filtered,\r\n    })\r\n  }\r\n\r\n  handleSearchChange = (e, { value }) => {\r\n    this.setState({ isLoading: true, value })\r\n\r\n    setTimeout(() => {\r\n      if (this.state.value.length < 1) return this.setState(initialState)\r\n\r\n      const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\r\n      const isMatch = (result) =>\r\n        re.test(result.title) || re.test(result.description)\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        results: _.filter(\r\n          this.state.allUsers.map(this.formatAsResults),\r\n          isMatch\r\n        ),\r\n      })\r\n    }, 300)\r\n  }\r\n\r\n  getSelectedLabels() {\r\n    // if (_.isEmpty(this.state.selectedUser)) {\r\n    //   return <></>\r\n    // }\r\n\r\n    // return (\r\n    //   <div\r\n    //     style={{\r\n    //       textAlign: 'left',\r\n    //       paddingLeft: 80,\r\n    //       paddingRight: 80,\r\n    //     }}\r\n    //   >\r\n    //     <Label>\r\n    //       {this.state.selectedUser.title}\r\n    //       <Icon\r\n    //         name=\"delete\"\r\n    //         onClick={() => this.removeSelected(this.state.selectedUser)}\r\n    //       />\r\n    //     </Label>\r\n    //   </div>\r\n    // )\r\n\r\n    if (_.isEmpty(this.state.selectedUser)) {\r\n      return <></>\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          textAlign: 'left',\r\n          paddingLeft: 80,\r\n          paddingRight: 80,\r\n        }}\r\n      >\r\n        {this.state.selectedUser.map((user) => (\r\n          <Label>\r\n            {user.title}\r\n            <Icon name=\"delete\" onClick={() => this.removeSelected(user)} />\r\n          </Label>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  removeSelected = (user) => {\r\n    this.setState({\r\n      selectedUser: this.state.selectedUser.filter((u) => u.id !== user.id),\r\n      // selectedUser: {},\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          style={{ borderless: 'true', width: '40%', height: '40%' }}\r\n          open={this.state.modalState}\r\n          onClose={this.handleClose}\r\n          closeOnDimmerClick={false}\r\n          closeOnEscape={false}\r\n          closeIcon\r\n        >\r\n          <Modal.Content style={{ borderless: 'true' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                paddingTop: 80,\r\n                paddingLeft: 80,\r\n                paddingRight: 80,\r\n                paddingBottom: 20,\r\n              }}\r\n            >\r\n              <Search\r\n                fluid\r\n                placeholder=\"Invite student...\"\r\n                input={{ fluid: true }}\r\n                loading={this.state.isLoading}\r\n                onResultSelect={this.handleResultSelect}\r\n                onSearchChange={_.debounce(this.handleSearchChange, 500, {\r\n                  leading: true,\r\n                })}\r\n                results={this.state.results}\r\n                value={this.state.value}\r\n              />\r\n            </div>\r\n            {/* <SearchBar /> */}\r\n\r\n            {this.getSelectedLabels()}\r\n\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                width: '70%',\r\n                height: '70%',\r\n                margin: 'auto',\r\n                padding: 30,\r\n              }}\r\n            >\r\n              <Button\r\n                color=\"teal\"\r\n                style={{ width: '50%', fontSize: '1vw' }}\r\n                onClick={this.handleInvite}\r\n              >\r\n                Invite\r\n              </Button>\r\n            </div>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StudentInviteModal\r\n"]},"metadata":{},"sourceType":"module"}