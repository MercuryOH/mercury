{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Modal, Button, Header, Search, Input } from 'semantic-ui-react';\n\nfunction CreateDiscussionModal(_ref) {\n  var onCreate = _ref.onCreate;\n\n  var _useState = useState(''),\n      name = _useState[0],\n      setDiscussionName = _useState[1];\n\n  var _useState2 = useState(false),\n      modalState = _useState2[0],\n      toggleModal = _useState2[1];\n\n  function createDiscussion() {\n    return _createDiscussion.apply(this, arguments);\n  }\n\n  function _createDiscussion() {\n    _createDiscussion = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (name) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              toggleModal(false);\n              onCreate({\n                name: name,\n                type: 'discussion'\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _createDiscussion.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", null, __jsx(Modal, {\n    style: {\n      borderless: 'true',\n      width: '40%',\n      height: '40%'\n    },\n    trigger: __jsx(Button, {\n      color: \"teal\",\n      content: \"Create Discussions\",\n      fluid: true,\n      style: {\n        fontSize: '1vw'\n      },\n      onClick: function onClick() {\n        toggleModal(true);\n        setDiscussionName('');\n      }\n    }),\n    open: modalState,\n    onClose: function onClose() {\n      return toggleModal(false);\n    },\n    closeOnDimmerClick: false,\n    closeOnEscape: false,\n    closeIcon: true\n  }, __jsx(Modal.Content, {\n    style: {\n      borderless: 'true'\n    }\n  }, __jsx(Header, {\n    style: {\n      fontSize: '2vw',\n      textAlign: 'center',\n      width: '100%',\n      padding: '5%',\n      height: '50%',\n      margin: 'auto'\n    },\n    content: 'New Discussion'\n  }), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '5%'\n    }\n  }, __jsx(Input, {\n    fluid: true,\n    placeholder: \"Discussion name\",\n    name: \"name\",\n    value: name,\n    onChange: function onChange(e) {\n      return setDiscussionName(e.target.value);\n    }\n  })), __jsx(\"div\", {\n    style: {\n      textAlign: 'center',\n      width: '70%',\n      height: '70%',\n      margin: 'auto',\n      padding: '5%'\n    }\n  }, __jsx(Button, {\n    color: \"teal\",\n    style: {\n      width: '50%',\n      fontSize: '1vw'\n    },\n    onClick: createDiscussion,\n    content: 'Create'\n  })))));\n}\n\nexport default CreateDiscussionModal;","map":null,"metadata":{},"sourceType":"module"}