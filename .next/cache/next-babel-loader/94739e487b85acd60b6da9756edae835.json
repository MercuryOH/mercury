{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Modal, Button, Header } from 'semantic-ui-react';\n\nvar YourTurnModal = /*#__PURE__*/function (_Component) {\n  _inherits(YourTurnModal, _Component);\n\n  var _super = _createSuper(YourTurnModal);\n\n  function YourTurnModal(props) {\n    var _this;\n\n    _classCallCheck(this, YourTurnModal);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      modalState: _this.props.isYourTurn,\n      timerRunning: false\n    };\n    return _this;\n  }\n\n  _createClass(YourTurnModal, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var isYourTurn = nextProps.isYourTurn;\n      var timerRunning = this.state.timerRunning;\n\n      if (isYourTurn && !timerRunning) {\n        this.setState({\n          modalState: nextProps.isYourTurn,\n          timerRunning: true\n        }, this.startTimer);\n      }\n\n      this.setState({\n        modalState: nextProps.isYourTurn\n      });\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      setTimeout(this.handleTimerEnd.bind(this), 3000);\n    }\n  }, {\n    key: \"handleTimerEnd\",\n    value: function handleTimerEnd() {\n      this.setState({\n        modalState: false,\n        timerRunning: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", null, __jsx(Modal, {\n        style: {\n          borderless: 'true',\n          width: '40%',\n          height: '40%'\n        },\n        open: this.state.modalState,\n        onClose: function onClose() {\n          return _this2.setState({\n            modalState: false\n          });\n        },\n        closeOnDimmerClick: false,\n        closeOnEscape: false\n      }, __jsx(Modal.Content, {\n        style: {\n          borderless: 'true'\n        }\n      }, __jsx(Header, {\n        style: {\n          fontSize: '2vw',\n          textAlign: 'center',\n          width: '100%',\n          padding: 50,\n          height: '50%',\n          margin: 'auto'\n        }\n      }, \"Your turn!\"), __jsx(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '5%',\n          padding: 30,\n          flexDirection: 'row'\n        }\n      }, __jsx(Button, {\n        color: \"green\",\n        onClick: function onClick() {\n          return _this2.setState({\n            modalState: false\n          });\n        },\n        style: {\n          fontSize: '1vw',\n          textAlign: 'center',\n          width: '25%',\n          marginRight: '5%',\n          flex: 1\n        }\n      }, \"Join TA\"), __jsx(Button, {\n        color: \"teal\",\n        onClick: function onClick() {\n          return _this2.setState({\n            modalState: false\n          });\n        },\n        style: {\n          fontSize: '1vw',\n          textAlign: 'center',\n          width: '25%',\n          marginRight: '5%',\n          flex: 1\n        }\n      }, \"Invite TA\"), __jsx(Button, {\n        color: \"red\",\n        onClick: function onClick() {\n          return _this2.setState({\n            modalState: false\n          });\n        },\n        style: {\n          fontSize: '1vw',\n          textAlign: 'center',\n          width: '25%',\n          //marginLeft: '5%',\n          flex: 1\n        }\n      }, \"Decline\")))));\n    }\n  }]);\n\n  return YourTurnModal;\n}(Component);\n\nexport { YourTurnModal as default };","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/queue/yourTurnModal.js"],"names":["React","Component","Modal","Button","Header","YourTurnModal","props","state","modalState","isYourTurn","timerRunning","nextProps","setState","startTimer","setTimeout","handleTimerEnd","bind","borderless","width","height","fontSize","textAlign","padding","margin","marginTop","flexDirection","marginRight","flex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Modal, Button, Header } from 'semantic-ui-react'\r\n\r\nexport default class YourTurnModal extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      modalState: this.props.isYourTurn,\r\n      timerRunning: false,\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const { isYourTurn } = nextProps\r\n    const { timerRunning } = this.state\r\n\r\n    if (isYourTurn && !timerRunning) {\r\n      this.setState(\r\n        { modalState: nextProps.isYourTurn, timerRunning: true },\r\n        this.startTimer\r\n      )\r\n    }\r\n    this.setState({ modalState: nextProps.isYourTurn })\r\n  }\r\n\r\n  startTimer() {\r\n    setTimeout(this.handleTimerEnd.bind(this), 3000)\r\n  }\r\n\r\n  handleTimerEnd() {\r\n    this.setState({ modalState: false, timerRunning: false })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          style={{ borderless: 'true', width: '40%', height: '40%' }}\r\n          open={this.state.modalState}\r\n          onClose={() => this.setState({ modalState: false })}\r\n          closeOnDimmerClick={false}\r\n          closeOnEscape={false}\r\n        >\r\n          <Modal.Content style={{ borderless: 'true' }}>\r\n            <Header\r\n              style={{\r\n                fontSize: '2vw',\r\n                textAlign: 'center',\r\n                width: '100%',\r\n                padding: 50,\r\n                height: '50%',\r\n                margin: 'auto',\r\n              }}\r\n            >\r\n              Your turn!\r\n            </Header>\r\n\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                marginTop: '5%',\r\n                padding: 30,\r\n                flexDirection: 'row',\r\n              }}\r\n            >\r\n              <Button\r\n                color=\"green\"\r\n                onClick={() => this.setState({ modalState: false })}\r\n                style={{\r\n                  fontSize: '1vw',\r\n                  textAlign: 'center',\r\n                  width: '25%',\r\n                  marginRight: '5%',\r\n                  flex: 1,\r\n                }}\r\n              >\r\n                Join TA\r\n              </Button>\r\n              <Button\r\n                color=\"teal\"\r\n                onClick={() => this.setState({ modalState: false })}\r\n                style={{\r\n                  fontSize: '1vw',\r\n                  textAlign: 'center',\r\n                  width: '25%',\r\n                  marginRight: '5%',\r\n                  flex: 1,\r\n                }}\r\n              >\r\n                Invite TA\r\n              </Button>\r\n              <Button\r\n                color=\"red\"\r\n                onClick={() => this.setState({ modalState: false })}\r\n                style={{\r\n                  fontSize: '1vw',\r\n                  textAlign: 'center',\r\n                  width: '25%',\r\n                  //marginLeft: '5%',\r\n                  flex: 1,\r\n                }}\r\n              >\r\n                Decline\r\n              </Button>\r\n            </div>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}