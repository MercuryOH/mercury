{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Modal, Button, Header, Search, Input } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { EventEmitter } from './util/EventEmitter';\nimport SearchBar from './invite/searchBar';\nconst initialState = {\n  isLoading: false,\n  results: [],\n  value: ''\n};\n\nclass CreateGroupModal extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"createGroup\", () => {\n      if (!this.state.groupName) return; //this.props.onInvite({ selectedUser: this.state.selectedUser })\n      // if (!this.state.selectedUser) return\n      // EventEmitter.publish('selectedUser', this.state.selectedUser)\n\n      this.setState({\n        modalState: false\n      });\n      this.props.onCreate({\n        name: this.state.groupName,\n        type: 'group'\n      });\n    });\n\n    this.state = {\n      modalState: false,\n      groupName: '' // isLoading: false,\n      // results: [],\n      // value: '',\n      // allUsers: [],\n      // selectedUser: {},\n      // me: {},\n      // currentGroup: { id: '', name: '' },\n\n    }; // this.defineEventEmitterCallbacks()\n  } // defineEventEmitterCallbacks() {\n  //   EventEmitter.subscribe('allOtherStudentsInClass', (users) => {\n  //     this.setState({ allUsers: users })\n  //   })\n  //   EventEmitter.subscribe('me', (me) => {\n  //     this.setState({ me })\n  //   })\n  //   EventEmitter.subscribe('currentGroupChange', (currentGroup) => {\n  //     this.setState({ currentGroup })\n  //   })\n  // }\n  // formatAsResults = (user) => {\n  //   return {\n  //     title: user.firstName + ' ' + user.lastName,\n  //     id: user.id,\n  //     description: user.email,\n  //   }\n  // }\n  // handleResultSelect = (e, { result }) => {\n  //   this.setState({\n  //     value: result.title,\n  //     selectedUser: result,\n  //   })\n  // }\n  // handleSearchChange = (e, { value }) => {\n  //   this.setState({ isLoading: true, value })\n  //   setTimeout(() => {\n  //     if (this.state.value.length < 1) return this.setState(initialState)\n  //     const re = new RegExp(_.escapeRegExp(this.state.value), 'i')\n  //     const isMatch = (result) =>\n  //       re.test(result.title) || re.test(result.description)\n  //     this.setState({\n  //       isLoading: false,\n  //       results: _.filter(\n  //         this.state.allUsers.map(this.formatAsResults),\n  //         isMatch\n  //       ),\n  //     })\n  //   }, 300)\n  // }\n\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Modal, {\n      style: {\n        borderless: 'true',\n        width: '40%',\n        height: '40%'\n      },\n      trigger: __jsx(Button, {\n        color: \"teal\",\n        icon: \"add\",\n        content: \"New Group\",\n        fluid: true,\n        style: {\n          fontSize: '1vw'\n        },\n        onClick: () => this.setState({\n          groupName: '',\n          value: '',\n          modalState: true\n        })\n      }),\n      open: this.state.modalState,\n      onClose: () => this.setState({\n        modalState: false\n      }),\n      closeOnDimmerClick: false,\n      closeOnEscape: false,\n      closeIcon: true\n    }, __jsx(Modal.Content, {\n      style: {\n        borderless: 'true'\n      }\n    }, __jsx(Header, {\n      style: {\n        fontSize: '2vw',\n        textAlign: 'center',\n        width: '100%',\n        padding: '5%',\n        height: '50%',\n        margin: 'auto'\n      },\n      content: 'New Private Group'\n    }), __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '5%'\n      }\n    }, __jsx(Input, {\n      fluid: true,\n      placeholder: \"Group name\",\n      name: \"name\",\n      value: this.state.groupName,\n      onChange: e => this.setState({\n        groupName: e.target.value\n      })\n    })), __jsx(\"div\", {\n      style: {\n        textAlign: 'center',\n        width: '70%',\n        height: '70%',\n        margin: 'auto',\n        padding: '5%'\n      }\n    }, __jsx(Button, {\n      color: \"teal\",\n      style: {\n        width: '50%',\n        fontSize: '1vw'\n      },\n      onClick: this.createGroup,\n      content: 'Create'\n    })))));\n  }\n\n}\n\nexport default CreateGroupModal;","map":null,"metadata":{},"sourceType":"module"}