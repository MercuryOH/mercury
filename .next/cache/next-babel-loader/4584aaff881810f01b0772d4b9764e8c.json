{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\n\nvar FormHTMLEditor = /*#__PURE__*/function (_Component) {\n  _inherits(FormHTMLEditor, _Component);\n\n  var _super = _createSuper(FormHTMLEditor);\n\n  function FormHTMLEditor(props) {\n    var _this;\n\n    _classCallCheck(this, FormHTMLEditor);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"modules\", {\n      toolbar: [[{\n        header: [1, 2, false]\n      }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n        list: 'ordered'\n      }, {\n        list: 'bullet'\n      }, {\n        indent: '-1'\n      }, {\n        indent: '+1'\n      }], ['link', 'image'], ['clean']],\n      clipboard: {\n        matchVisual: false\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formats\", ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image']);\n\n    if (true) {\n      _this.ReactQuill = require('react-quill');\n    }\n\n    return _this;\n  }\n\n  _createClass(FormHTMLEditor, [{\n    key: \"onChange\",\n    value: function onChange(event) {\n      console.log(event);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ReactQuill = this.ReactQuill;\n\n      if (true && ReactQuill) {\n        return __jsx(ReactQuill, {\n          modules: this.modules,\n          formats: this.formats,\n          defaultValue: this.props.defaultValue,\n          onChange: this.props.onChange,\n          placeholder: 'Enter Comment'\n        });\n      } else {\n        return __jsx(\"textarea\", null);\n      }\n    }\n  }]);\n\n  return FormHTMLEditor;\n}(Component);\n\nexport { FormHTMLEditor as default };","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/FormHTMLEditor.js"],"names":["React","Component","FormHTMLEditor","props","toolbar","header","list","indent","clipboard","matchVisual","ReactQuill","require","event","console","log","modules","formats","defaultValue","onChange"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEqBC,c;;;;;AACnB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,8DAOT;AACRC,MAAAA,OAAO,EAAE,CACP,CAAC;AAAEC,QAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,KAAP;AAAV,OAAD,CADO,EAEP,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,CAFO,EAGP,CACE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADF,EAEE;AAAEA,QAAAA,IAAI,EAAE;AAAR,OAFF,EAGE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAHF,EAIE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OAJF,CAHO,EASP,CAAC,MAAD,EAAS,OAAT,CATO,EAUP,CAAC,OAAD,CAVO,CADD;AAaRC,MAAAA,SAAS,EAAE;AACTC,QAAAA,WAAW,EAAE;AADJ;AAbH,KAPS;;AAAA,8DAyBT,CACR,QADQ,EAER,MAFQ,EAGR,QAHQ,EAIR,WAJQ,EAKR,QALQ,EAMR,YANQ,EAOR,MAPQ,EAQR,QARQ,EASR,QATQ,EAUR,MAVQ,EAWR,OAXQ,CAzBS;;AAEjB,cAAmC;AACjC,YAAKC,UAAL,GAAkBC,OAAO,CAAC,aAAD,CAAzB;AACD;;AAJgB;AAKlB;;;;6BAkCQC,K,EAAO;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;;6BAEQ;AACP,UAAMF,UAAU,GAAG,KAAKA,UAAxB;;AACA,UAAI,QAAiCA,UAArC,EAAiD;AAC/C,eACE,MAAC,UAAD;AACE,UAAA,OAAO,EAAE,KAAKK,OADhB;AAEE,UAAA,OAAO,EAAE,KAAKC,OAFhB;AAGE,UAAA,YAAY,EAAE,KAAKb,KAAL,CAAWc,YAH3B;AAIE,UAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWe,QAJvB;AAKE,UAAA,WAAW,EAAE;AALf,UADF;AASD,OAVD,MAUO;AACL,eAAO,uBAAP;AACD;AACF;;;;EA3DyCjB,S;;SAAvBC,c","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class FormHTMLEditor extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    if (typeof window !== 'undefined') {\r\n      this.ReactQuill = require('react-quill')\r\n    }\r\n  }\r\n\r\n  modules = {\r\n    toolbar: [\r\n      [{ header: [1, 2, false] }],\r\n      ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n      [\r\n        { list: 'ordered' },\r\n        { list: 'bullet' },\r\n        { indent: '-1' },\r\n        { indent: '+1' },\r\n      ],\r\n      ['link', 'image'],\r\n      ['clean'],\r\n    ],\r\n    clipboard: {\r\n      matchVisual: false,\r\n    },\r\n  }\r\n\r\n  formats = [\r\n    'header',\r\n    'bold',\r\n    'italic',\r\n    'underline',\r\n    'strike',\r\n    'blockquote',\r\n    'list',\r\n    'bullet',\r\n    'indent',\r\n    'link',\r\n    'image',\r\n  ]\r\n\r\n  onChange(event) {\r\n    console.log(event)\r\n  }\r\n\r\n  render() {\r\n    const ReactQuill = this.ReactQuill\r\n    if (typeof window !== 'undefined' && ReactQuill) {\r\n      return (\r\n        <ReactQuill\r\n          modules={this.modules}\r\n          formats={this.formats}\r\n          defaultValue={this.props.defaultValue}\r\n          onChange={this.props.onChange}\r\n          placeholder={'Enter Comment'}\r\n        />\r\n      )\r\n    } else {\r\n      return <textarea />\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}