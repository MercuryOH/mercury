{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Checkbox, Table, Header, Input } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport * as api from '../util/mercuryService';\nimport { EventEmitter } from './util/EventEmitter';\n\nvar ModifyClassesModal = /*#__PURE__*/function (_Component) {\n  _inherits(ModifyClassesModal, _Component);\n\n  var _super = _createSuper(ModifyClassesModal);\n\n  function ModifyClassesModal(props) {\n    var _this;\n\n    _classCallCheck(this, ModifyClassesModal);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function () {\n      _this.setState({\n        modalState: false\n      });\n\n      EventEmitter.publish('currentlyEnrolled', _this.state.classRoles);\n    });\n\n    _this.state = {\n      modalState: false,\n      classRoles: []\n    };\n    return _this;\n  }\n\n  _createClass(ModifyClassesModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var classRoles = [];\n      api.getMe().then(function (meData) {\n        _this2.user = meData;\n      }).then(function () {\n        return api.getAllClasses();\n      }).then(function (classes) {\n        console.log(classes);\n        classes.map(function (cc) {\n          api.getClass(cc.id).then(function (c) {\n            var userRole = c.users.find(function (u) {\n              return u.id === _this2.user.id;\n            });\n            classRoles.push(_objectSpread(_objectSpread({}, cc), {}, {\n              role: userRole ? userRole.role : ''\n            }));\n          });\n        });\n\n        _this2.setState({\n          classRoles: classRoles\n        });\n      })[\"catch\"](console.error);\n    }\n  }, {\n    key: \"getTACell\",\n    value: function getTACell(classRole) {\n      return classRole === 'Student' || classRole === '' ? __jsx(Input, {\n        placeholder: 'Enter permission code...'\n      }) : __jsx(Header, {\n        as: \"h4\"\n      }, __jsx(Header.Content, null, 'verified ' + classRole));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"div\", null, __jsx(Modal, {\n        style: {\n          borderless: 'true',\n          width: '40%',\n          height: '40%'\n        },\n        trigger: __jsx(Button, {\n          color: \"teal\",\n          content: \"Modify Class\",\n          fluid: true,\n          style: {\n            fontSize: '1vw'\n          },\n          onClick: function onClick() {\n            return _this3.setState({\n              groupName: '',\n              value: '',\n              modalState: true\n            });\n          }\n        }),\n        open: this.state.modalState,\n        onClose: function onClose() {\n          return _this3.setState({\n            modalState: false\n          });\n        },\n        closeOnDimmerClick: false,\n        closeOnEscape: false,\n        closeIcon: true\n      }, __jsx(Modal.Content, {\n        style: {\n          borderless: 'true'\n        }\n      }, __jsx(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '5%',\n          height: '50%',\n          overflowY: 'auto'\n        }\n      }, __jsx(Table, {\n        basic: \"very\",\n        celled: true\n      }, __jsx(Table.Header, null, __jsx(Table.Row, null, __jsx(Table.HeaderCell, {\n        style: {\n          textAlign: 'center'\n        }\n      }, \"Classes\"), __jsx(Table.HeaderCell, {\n        style: {\n          textAlign: 'center'\n        }\n      }, \"Student\"), __jsx(Table.HeaderCell, {\n        style: {\n          textAlign: 'center'\n        }\n      }, \"TA/Professor\"))), __jsx(Table.Body, null, this.state.classRoles.map(function (c) {\n        return __jsx(Table.Row, {\n          key: c.id\n        }, __jsx(Table.Cell, {\n          style: {\n            textAlign: 'center'\n          }\n        }, __jsx(Header, {\n          as: \"h4\"\n        }, __jsx(Header.Content, null, c.name))), __jsx(Table.Cell, {\n          style: {\n            textAlign: 'center'\n          }\n        }, __jsx(Checkbox, {\n          disabled: c.role === 'Professor' || c.role === 'TA',\n          checked: c.role === 'Student',\n          onChange: function onChange() {\n            return _this3.setState({\n              classRoles: _this3.state.classRoles.map(function (cc) {\n                if (cc.id === c.id && (cc.role === '' || cc.role === 'Student')) {\n                  return _objectSpread(_objectSpread({}, cc), {}, {\n                    role: cc.role === '' ? 'Student' : ''\n                  });\n                }\n\n                return cc;\n              })\n            });\n          }\n        })), __jsx(Table.Cell, {\n          style: {\n            textAlign: 'center'\n          }\n        }, _this3.getTACell(c.role)));\n      })))), __jsx(\"div\", {\n        style: {\n          textAlign: 'center',\n          width: '70%',\n          height: '70%',\n          margin: 'auto',\n          padding: '5%'\n        }\n      }, __jsx(Button, {\n        color: \"teal\",\n        style: {\n          width: '50%',\n          fontSize: '1vw'\n        },\n        onClick: this.handleSubmit,\n        content: 'Done'\n      })))));\n    }\n  }]);\n\n  return ModifyClassesModal;\n}(Component);\n\nexport default ModifyClassesModal;","map":{"version":3,"sources":["C:/Users/ryanj/Documents/mercury/components/modifyClassesModal.js"],"names":["React","Component","PropTypes","Modal","Button","Checkbox","Table","Header","Input","_","api","EventEmitter","ModifyClassesModal","props","setState","modalState","publish","state","classRoles","getMe","then","meData","user","getAllClasses","classes","console","log","map","cc","getClass","id","c","userRole","users","find","u","push","role","error","classRole","borderless","width","height","fontSize","groupName","value","textAlign","padding","overflowY","name","getTACell","margin","handleSubmit"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,KANF,QAOO,mBAPP;AAQA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,KAAKC,GAAZ,MAAqB,wBAArB;AACA,SAASC,YAAT,QAA6B,qBAA7B;;IAEMC,kB;;;;;AACJ,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,mEAkCJ,YAAM;AACnB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAd;;AACAJ,MAAAA,YAAY,CAACK,OAAb,CAAqB,mBAArB,EAA0C,MAAKC,KAAL,CAAWC,UAArD;AACD,KArCkB;;AAGjB,UAAKD,KAAL,GAAa;AACXF,MAAAA,UAAU,EAAE,KADD;AAEXG,MAAAA,UAAU,EAAE;AAFD,KAAb;AAHiB;AAOlB;;;;wCAEmB;AAAA;;AAClB,UAAMA,UAAU,GAAG,EAAnB;AACAR,MAAAA,GAAG,CACAS,KADH,GAEGC,IAFH,CAEQ,UAACC,MAAD,EAAY;AAChB,QAAA,MAAI,CAACC,IAAL,GAAYD,MAAZ;AACD,OAJH,EAKGD,IALH,CAKQ;AAAA,eAAMV,GAAG,CAACa,aAAJ,EAAN;AAAA,OALR,EAMGH,IANH,CAMQ,UAACI,OAAD,EAAa;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAA,QAAAA,OAAO,CAACG,GAAR,CAAY,UAACC,EAAD,EAAQ;AAClBlB,UAAAA,GAAG,CAACmB,QAAJ,CAAaD,EAAE,CAACE,EAAhB,EAAoBV,IAApB,CAAyB,UAACW,CAAD,EAAO;AAC9B,gBAAMC,QAAQ,GAAGD,CAAC,CAACE,KAAF,CAAQC,IAAR,CAAa,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAACL,EAAF,KAAS,MAAI,CAACR,IAAL,CAAUQ,EAA1B;AAAA,aAAb,CAAjB;AACAZ,YAAAA,UAAU,CAACkB,IAAX,iCACKR,EADL;AAEES,cAAAA,IAAI,EAAEL,QAAQ,GAAGA,QAAQ,CAACK,IAAZ,GAAmB;AAFnC;AAID,WAND;AAOD,SARD;;AASA,QAAA,MAAI,CAACvB,QAAL,CAAc;AAAEI,UAAAA,UAAU,EAAVA;AAAF,SAAd;AACD,OAlBH,WAoBSO,OAAO,CAACa,KApBjB;AAqBD;;;8BAOSC,S,EAAW;AACnB,aAAOA,SAAS,KAAK,SAAd,IAA2BA,SAAS,KAAK,EAAzC,GACL,MAAC,KAAD;AAAO,QAAA,WAAW,EAAE;AAApB,QADK,GAGL,MAAC,MAAD;AAAQ,QAAA,EAAE,EAAC;AAAX,SACE,MAAC,MAAD,CAAQ,OAAR,QAAiB,cAAcA,SAA/B,CADF,CAHF;AAOD;;;6BAEQ;AAAA;;AACP,aACE,mBACE,MAAC,KAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE,MADP;AAELC,UAAAA,KAAK,EAAE,KAFF;AAGLC,UAAAA,MAAM,EAAE;AAHH,SADT;AAME,QAAA,OAAO,EACL,MAAC,MAAD;AACE,UAAA,KAAK,EAAC,MADR;AAEE,UAAA,OAAO,EAAC,cAFV;AAGE,UAAA,KAAK,MAHP;AAIE,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAJT;AAKE,UAAA,OAAO,EAAE;AAAA,mBACP,MAAI,CAAC7B,QAAL,CAAc;AAAE8B,cAAAA,SAAS,EAAE,EAAb;AAAiBC,cAAAA,KAAK,EAAE,EAAxB;AAA4B9B,cAAAA,UAAU,EAAE;AAAxC,aAAd,CADO;AAAA;AALX,UAPJ;AAiBE,QAAA,IAAI,EAAE,KAAKE,KAAL,CAAWF,UAjBnB;AAkBE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACD,QAAL,CAAc;AAAEC,YAAAA,UAAU,EAAE;AAAd,WAAd,CAAN;AAAA,SAlBX;AAmBE,QAAA,kBAAkB,EAAE,KAnBtB;AAoBE,QAAA,aAAa,EAAE,KApBjB;AAqBE,QAAA,SAAS;AArBX,SAuBE,MAAC,KAAD,CAAO,OAAP;AAAe,QAAA,KAAK,EAAE;AAAEyB,UAAAA,UAAU,EAAE;AAAd;AAAtB,SACE;AACE,QAAA,KAAK,EAAE;AACLM,UAAAA,SAAS,EAAE,QADN;AAELC,UAAAA,OAAO,EAAE,IAFJ;AAGLL,UAAAA,MAAM,EAAE,KAHH;AAILM,UAAAA,SAAS,EAAE;AAJN;AADT,SAQE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,MAAb;AAAoB,QAAA,MAAM;AAA1B,SACE,MAAC,KAAD,CAAO,MAAP,QACE,MAAC,KAAD,CAAO,GAAP,QACE,MAAC,KAAD,CAAO,UAAP;AAAkB,QAAA,KAAK,EAAE;AAAEF,UAAAA,SAAS,EAAE;AAAb;AAAzB,mBADF,EAIE,MAAC,KAAD,CAAO,UAAP;AAAkB,QAAA,KAAK,EAAE;AAAEA,UAAAA,SAAS,EAAE;AAAb;AAAzB,mBAJF,EAOE,MAAC,KAAD,CAAO,UAAP;AAAkB,QAAA,KAAK,EAAE;AAAEA,UAAAA,SAAS,EAAE;AAAb;AAAzB,wBAPF,CADF,CADF,EAeE,MAAC,KAAD,CAAO,IAAP,QACG,KAAK7B,KAAL,CAAWC,UAAX,CAAsBS,GAAtB,CAA0B,UAACI,CAAD;AAAA,eACzB,MAAC,KAAD,CAAO,GAAP;AAAW,UAAA,GAAG,EAAEA,CAAC,CAACD;AAAlB,WACE,MAAC,KAAD,CAAO,IAAP;AAAY,UAAA,KAAK,EAAE;AAAEgB,YAAAA,SAAS,EAAE;AAAb;AAAnB,WACE,MAAC,MAAD;AAAQ,UAAA,EAAE,EAAC;AAAX,WACE,MAAC,MAAD,CAAQ,OAAR,QAAiBf,CAAC,CAACkB,IAAnB,CADF,CADF,CADF,EAME,MAAC,KAAD,CAAO,IAAP;AAAY,UAAA,KAAK,EAAE;AAAEH,YAAAA,SAAS,EAAE;AAAb;AAAnB,WACE,MAAC,QAAD;AACE,UAAA,QAAQ,EACNf,CAAC,CAACM,IAAF,KAAW,WAAX,IAA0BN,CAAC,CAACM,IAAF,KAAW,IAFzC;AAIE,UAAA,OAAO,EAAEN,CAAC,CAACM,IAAF,KAAW,SAJtB;AAKE,UAAA,QAAQ,EAAE;AAAA,mBACR,MAAI,CAACvB,QAAL,CAAc;AACZI,cAAAA,UAAU,EAAE,MAAI,CAACD,KAAL,CAAWC,UAAX,CAAsBS,GAAtB,CAA0B,UAACC,EAAD,EAAQ;AAC5C,oBACEA,EAAE,CAACE,EAAH,KAAUC,CAAC,CAACD,EAAZ,KACCF,EAAE,CAACS,IAAH,KAAY,EAAZ,IACCT,EAAE,CAACS,IAAH,KAAY,SAFd,CADF,EAIE;AACA,yDACKT,EADL;AAEES,oBAAAA,IAAI,EACFT,EAAE,CAACS,IAAH,KAAY,EAAZ,GAAiB,SAAjB,GAA6B;AAHjC;AAKD;;AACD,uBAAOT,EAAP;AACD,eAbW;AADA,aAAd,CADQ;AAAA;AALZ,UADF,CANF,EAgCE,MAAC,KAAD,CAAO,IAAP;AAAY,UAAA,KAAK,EAAE;AAAEkB,YAAAA,SAAS,EAAE;AAAb;AAAnB,WACG,MAAI,CAACI,SAAL,CAAenB,CAAC,CAACM,IAAjB,CADH,CAhCF,CADyB;AAAA,OAA1B,CADH,CAfF,CARF,CADF,EAmEE;AACE,QAAA,KAAK,EAAE;AACLS,UAAAA,SAAS,EAAE,QADN;AAELL,UAAAA,KAAK,EAAE,KAFF;AAGLC,UAAAA,MAAM,EAAE,KAHH;AAILS,UAAAA,MAAM,EAAE,MAJH;AAKLJ,UAAAA,OAAO,EAAE;AALJ;AADT,SASE,MAAC,MAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,KAAK,EAAE;AAAEN,UAAAA,KAAK,EAAE,KAAT;AAAgBE,UAAAA,QAAQ,EAAE;AAA1B,SAFT;AAGE,QAAA,OAAO,EAAE,KAAKS,YAHhB;AAIE,QAAA,OAAO,EAAE;AAJX,QATF,CAnEF,CAvBF,CADF,CADF;AAgHD;;;;EAnK8BnD,S;;AAsKjC,eAAeW,kBAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Checkbox,\r\n  Table,\r\n  Header,\r\n  Input,\r\n} from 'semantic-ui-react'\r\nimport _ from 'lodash'\r\nimport * as api from '../util/mercuryService'\r\nimport { EventEmitter } from './util/EventEmitter'\r\n\r\nclass ModifyClassesModal extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      modalState: false,\r\n      classRoles: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const classRoles = []\r\n    api\r\n      .getMe()\r\n      .then((meData) => {\r\n        this.user = meData\r\n      })\r\n      .then(() => api.getAllClasses())\r\n      .then((classes) => {\r\n        console.log(classes)\r\n        classes.map((cc) => {\r\n          api.getClass(cc.id).then((c) => {\r\n            const userRole = c.users.find((u) => u.id === this.user.id)\r\n            classRoles.push({\r\n              ...cc,\r\n              role: userRole ? userRole.role : '',\r\n            })\r\n          })\r\n        })\r\n        this.setState({ classRoles })\r\n      })\r\n\r\n      .catch(console.error)\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.setState({ modalState: false })\r\n    EventEmitter.publish('currentlyEnrolled', this.state.classRoles)\r\n  }\r\n\r\n  getTACell(classRole) {\r\n    return classRole === 'Student' || classRole === '' ? (\r\n      <Input placeholder={'Enter permission code...'} />\r\n    ) : (\r\n      <Header as=\"h4\">\r\n        <Header.Content>{'verified ' + classRole}</Header.Content>\r\n      </Header>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          style={{\r\n            borderless: 'true',\r\n            width: '40%',\r\n            height: '40%',\r\n          }}\r\n          trigger={\r\n            <Button\r\n              color=\"teal\"\r\n              content=\"Modify Class\"\r\n              fluid\r\n              style={{ fontSize: '1vw' }}\r\n              onClick={() =>\r\n                this.setState({ groupName: '', value: '', modalState: true })\r\n              }\r\n            />\r\n          }\r\n          open={this.state.modalState}\r\n          onClose={() => this.setState({ modalState: false })}\r\n          closeOnDimmerClick={false}\r\n          closeOnEscape={false}\r\n          closeIcon\r\n        >\r\n          <Modal.Content style={{ borderless: 'true' }}>\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                padding: '5%',\r\n                height: '50%',\r\n                overflowY: 'auto',\r\n              }}\r\n            >\r\n              <Table basic=\"very\" celled>\r\n                <Table.Header>\r\n                  <Table.Row>\r\n                    <Table.HeaderCell style={{ textAlign: 'center' }}>\r\n                      Classes\r\n                    </Table.HeaderCell>\r\n                    <Table.HeaderCell style={{ textAlign: 'center' }}>\r\n                      Student\r\n                    </Table.HeaderCell>\r\n                    <Table.HeaderCell style={{ textAlign: 'center' }}>\r\n                      TA/Professor\r\n                    </Table.HeaderCell>\r\n                  </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                  {this.state.classRoles.map((c) => (\r\n                    <Table.Row key={c.id}>\r\n                      <Table.Cell style={{ textAlign: 'center' }}>\r\n                        <Header as=\"h4\">\r\n                          <Header.Content>{c.name}</Header.Content>\r\n                        </Header>\r\n                      </Table.Cell>\r\n                      <Table.Cell style={{ textAlign: 'center' }}>\r\n                        <Checkbox\r\n                          disabled={\r\n                            c.role === 'Professor' || c.role === 'TA'\r\n                          }\r\n                          checked={c.role === 'Student'}\r\n                          onChange={() =>\r\n                            this.setState({\r\n                              classRoles: this.state.classRoles.map((cc) => {\r\n                                if (\r\n                                  cc.id === c.id &&\r\n                                  (cc.role === '' ||\r\n                                    cc.role === 'Student')\r\n                                ) {\r\n                                  return {\r\n                                    ...cc,\r\n                                    role:\r\n                                      cc.role === '' ? 'Student' : '',\r\n                                  }\r\n                                }\r\n                                return cc\r\n                              }),\r\n                            })\r\n                          }\r\n                        />\r\n                      </Table.Cell>\r\n                      <Table.Cell style={{ textAlign: 'center' }}>\r\n                        {this.getTACell(c.role)}\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                  ))}\r\n                </Table.Body>\r\n              </Table>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                textAlign: 'center',\r\n                width: '70%',\r\n                height: '70%',\r\n                margin: 'auto',\r\n                padding: '5%',\r\n              }}\r\n            >\r\n              <Button\r\n                color=\"teal\"\r\n                style={{ width: '50%', fontSize: '1vw' }}\r\n                onClick={this.handleSubmit}\r\n                content={'Done'}\r\n              />\r\n            </div>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ModifyClassesModal\r\n"]},"metadata":{},"sourceType":"module"}